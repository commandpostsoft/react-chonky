{"version":3,"file":"chonky.cjs.production.min.js","sources":["../src/util/hooks-helpers.ts","../src/types/sort.types.ts","../src/util/logger.ts","../src/util/file-helper.ts","../src/redux/files-transforms.ts","../src/action-definitions/option-ids.ts","../src/types/icons.types.ts","../src/redux/selectors.ts","../src/redux/thunks/file-actions.thunks.ts","../src/types/file-view.types.ts","../src/redux/thunks/dispatchers.thunks.ts","../src/util/helpers.ts","../src/util/i18n.ts","../src/action-definitions/essential.ts","../src/redux/thunks/index.ts","../src/action-definitions/default.ts","../src/action-definitions/extra.ts","../src/action-definitions/index.ts","../src/redux/state.ts","../src/redux/reducers.ts","../src/redux/store.ts","../src/redux/watchers.ts","../src/components/internal/ChonkyIconPlaceholder.tsx","../src/util/default-config.ts","../src/util/icon-helper.ts","../src/util/styles.ts","../src/components/internal/ChonkyBusinessLogic.tsx","../src/util/file-browser-handle.ts","../src/util/dnd-fallback.ts","../src/types/dnd.types.ts","../src/components/file-list/DnDFileListDragLayer.tsx","../src/components/internal/HotkeyListener.tsx","../src/components/internal/ChonkyPresentationLayer.tsx","../src/components/external/FileContextMenu-hooks.ts","../src/components/external/FileBrowser.tsx","../src/components/external/FileNavbar-hooks.ts","../src/types/action.types.ts","../src/util/dnd.ts","../src/components/external/TextPlaceholder.tsx","../src/components/file-list/FileEntry-hooks.tsx","../src/util/file-actions.ts","../src/components/external/ToolbarButton.tsx","../src/components/external/FolderChainButton.tsx","../src/components/external/FileNavbar.tsx","../src/components/external/ToolbarDropdownButton.tsx","../src/components/external/ToolbarDropdown.tsx","../src/components/external/ToolbarInfo.tsx","../src/components/external/ToolbarSearch.tsx","../src/components/external/FileToolbar.tsx","../src/components/file-list/FileListEmpty.tsx","../src/components/internal/ClickableWrapper.tsx","../src/components/internal/ClickableWrapper-hooks.tsx","../src/components/file-list/FileEntryName.tsx","../src/components/file-list/CompactEntry.tsx","../src/components/file-list/DnDFileEntry.tsx","../src/components/file-list/FileThumbnail.tsx","../src/components/file-list/GridEntryDndIndicator.tsx","../src/components/file-list/GridEntryPreview.tsx","../src/components/file-list/GridEntry.tsx","../src/components/file-list/ListEntry.tsx","../src/components/file-list/FileEntry.tsx","../src/components/file-list/GridContainer.tsx","../src/components/file-list/ListContainer.tsx","../src/components/file-list/FileList.tsx","../src/components/external/FileContextMenu.tsx","../src/components/external/FullFileBrowser.tsx","../src/extensions/file-map.ts"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nexport const useDebounce = <T>(value: T, delay: number): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return [debouncedValue, setDebouncedValue];\n};\n\nconst UNINITIALIZED_SENTINEL = {};\nexport const useStaticValue = <T>(factory: () => T): T => {\n  const valueRef = useRef<T>(UNINITIALIZED_SENTINEL as T);\n  if (valueRef.current === UNINITIALIZED_SENTINEL) valueRef.current = factory();\n  return valueRef.current;\n};\n\nexport const useInstanceVariable = <T>(value: T) => {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [ref, value]);\n  return ref;\n};\n","import { Nullable } from 'tsdef';\n\nimport { FileData } from './file.types';\n\nexport type FileSortKeySelector = (file: Nullable<FileData>) => any;\n\nexport enum SortOrder {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n","export class Logger {\n  public static error(...args: any[]): void {\n    // eslint-disable-next-line no-console\n    console.error('[Chonky runtime error]', ...args);\n  }\n\n  public static warn(...args: any[]): void {\n    // eslint-disable-next-line no-console\n    console.warn('[Chonky runtime warning]', ...args);\n  }\n\n  public static debug(...args: any[]): void {\n    // eslint-disable-next-line no-console\n    console.debug('[Chonky runtime debug]', ...args);\n  }\n\n  public static formatBullets(bullets: string[]): string {\n    return `\\n- ${bullets.join('\\n- ')}`;\n  }\n}\n","import { Nullable } from 'tsdef';\n\nimport { FileData } from '../types/file.types';\nimport { Logger } from './logger';\n\nexport class FileHelper {\n  public static isDirectory(file: Nullable<FileData>): file is FileData {\n    // Not a directory by default\n    return !!file && file.isDir === true;\n  }\n\n  public static isHidden(file: Nullable<FileData>): file is FileData {\n    // Not hidden by default\n    return !!file && file.isHidden === true;\n  }\n\n  public static isSymlink(file: Nullable<FileData>): file is FileData {\n    // Not a symlink by default\n    return !!file && file.isSymlink === true;\n  }\n\n  public static isEncrypted(file: Nullable<FileData>): file is FileData {\n    // Not encrypted by default\n    return !!file && file.isEncrypted === true;\n  }\n\n  public static isClickable(file: Nullable<FileData>): file is FileData {\n    // Clickable by default\n    return !!file;\n  }\n\n  public static isOpenable(file: Nullable<FileData>): file is FileData {\n    // Openable by default\n    return !!file && file.openable !== false;\n  }\n\n  public static isSelectable(file: Nullable<FileData>): file is FileData {\n    // Selectable by default\n    return !!file && file.selectable !== false;\n  }\n\n  public static isDraggable(file: Nullable<FileData>): file is FileData {\n    // File & folders are draggable by default, `null` is not\n    return !!file && file.draggable !== false;\n  }\n\n  public static isDroppable(file: Nullable<FileData>): file is FileData {\n    // Folders are droppable by default, files are not\n    if (!file) return false;\n    if (file.isDir && file.droppable !== false) return true;\n    return file.droppable === true;\n  }\n\n  public static isDndOpenable(file: Nullable<FileData>): file is FileData {\n    // Folders are DnD openable by default, files are not\n    if (!FileHelper.isOpenable(file)) return false;\n    if (file.isDir && file.dndOpenable !== false) return true;\n    return file.dndOpenable === true;\n  }\n\n  public static getModDate(file: Nullable<FileData>): Nullable<Date> {\n    if (!file || file.modDate === null || file.modDate === undefined) return null;\n    return FileHelper.parseDate(file.modDate);\n  }\n\n  public static parseDate(maybeDate: Date | string | any): Nullable<Date> {\n    if (typeof maybeDate === 'string' || typeof maybeDate === 'number') {\n      // We allow users to provide string and numerical representations of dates.\n      try {\n        return new Date(maybeDate);\n      } catch (error) {\n        const err = error as Error;\n        Logger.error(\n          `Could not convert provided string/number into a date: ${err.message} `,\n          'Invalid value:',\n          maybeDate,\n        );\n      }\n    }\n    if (maybeDate instanceof Date && !isNaN(maybeDate.getTime())) {\n      // We only allow valid dates objects\n      return maybeDate;\n    }\n\n    // If we have an invalid date representation, we just return null.\n    Logger.warn('Unsupported date representation:', maybeDate);\n    return null;\n  }\n\n  public static getChildrenCount(file: Nullable<FileData>): Nullable<number> {\n    if (!file || typeof file.childrenCount !== 'number') return null;\n\n    return file.childrenCount;\n  }\n}\n","import { Nullable } from 'tsdef';\n\nimport { FileAction } from '../types/action.types';\nimport { FileArray } from '../types/file.types';\nimport { Logger } from '../util/logger';\n\ninterface SanitizeFiles {\n  (mode: 'files', rawArray: FileArray | any): {\n    sanitizedArray: FileArray;\n    errorMessages: string[];\n  };\n  (mode: 'folderChain', rawArray: Nullable<FileArray> | any): {\n    sanitizedArray: FileArray;\n    errorMessages: string[];\n  };\n  (mode: 'fileActions', rawArray: FileAction[] | any): {\n    sanitizedArray: FileAction[];\n    errorMessages: string[];\n  };\n}\n\nexport const sanitizeInputArray: SanitizeFiles = (mode: string, rawArray: any[]) => {\n  const sanitizedFiles = [];\n  const errorMessages: string[] = [];\n\n  if ((mode === 'folderChain' || mode === 'fileActions') && !rawArray) {\n    // Do nothing, we allow folder chain to be null.\n  } else if (!Array.isArray(rawArray)) {\n    errorMessages.push(`Expected \"${mode}\" prop to be an array, got \"${typeof rawArray}\" instead.`);\n  } else {\n    let nonObjectFileCount = 0;\n    let missingFieldFileCount = 0;\n    const seenIds = new Set<string>();\n    const duplicateIds = new Set<string>();\n\n    for (let i = 0; i < rawArray.length; ++i) {\n      const item = rawArray[i];\n      if (!item) {\n        if (mode === 'fileActions') nonObjectFileCount++;\n        else sanitizedFiles.push(null);\n      } else if (typeof item !== 'object') {\n        nonObjectFileCount++;\n      } else {\n        if (!item.id || (mode !== 'fileActions' && !item.name)) {\n          missingFieldFileCount++;\n        } else if (seenIds.has(item.id)) {\n          duplicateIds.add(item.id);\n        } else {\n          seenIds.add(item.id);\n          sanitizedFiles.push(item);\n        }\n      }\n    }\n\n    if (nonObjectFileCount) {\n      errorMessages.push(\n        `Detected ${nonObjectFileCount} file(s) of invalid type. Remember ` +\n          `that \"files\" array should contain either objects or nulls.`,\n      );\n    }\n    if (missingFieldFileCount) {\n      errorMessages.push(\n        `Detected ${missingFieldFileCount} file(s) that are missing the ` +\n          `required fields. Remember that file object should define an ` +\n          `\"id\" and a \"name\".`,\n      );\n    }\n    if (duplicateIds.size > 0) {\n      const repeatedIdsString = '\"' + Array.from(duplicateIds).join('\", \"') + '\"';\n      errorMessages.push(\n        `Detected ${duplicateIds.size} file IDs that are used multiple ` +\n          `times. Remember that each file should have a unique IDs. The ` +\n          `following IDs were seen multiple times: ${repeatedIdsString}`,\n      );\n    }\n  }\n\n  if (errorMessages.length > 0) {\n    const errorMessageString = '\\n- ' + errorMessages.join('\\n- ');\n    let arrayString: string;\n    let itemString: string;\n    if (mode === 'folderChain') {\n      arrayString = 'folder chain';\n      itemString = 'files';\n    } else if (mode === 'fileActions') {\n      arrayString = 'file actions';\n      itemString = 'file actions';\n    } else {\n      // mode === 'files'\n      arrayString = 'files';\n      itemString = 'files';\n    }\n\n    Logger.error(\n      `Errors were detected when sanitizing the ${arrayString} array. ` +\n        `Offending ${itemString} were removed from the array. Summary of ` +\n        `validation errors: ${errorMessageString}`,\n    );\n  }\n\n  return {\n    sanitizedArray: sanitizedFiles,\n    errorMessages,\n  };\n};\n","/**\n * We have option IDs in a separate file to avoid circular deps...\n */\nexport const OptionIds = {\n  ShowHiddenFiles: 'show_hidden_files',\n  ShowFoldersFirst: 'show_folders_first',\n  DarkMode: 'dark_mode',\n};\n","import React from 'react';\n\nexport enum ChonkyIconName {\n  // Misc\n  loading = 'loading',\n  dropdown = 'dropdown',\n  placeholder = 'placeholder',\n\n  // File Actions: Drag & drop\n  dndDragging = 'dndDragging',\n  dndCanDrop = 'dndCanDrop',\n  dndCannotDrop = 'dndCannotDrop',\n\n  // File Actions: File operations\n  openFiles = 'openFiles',\n  openParentFolder = 'openParentFolder',\n  copy = 'copy',\n  paste = 'paste',\n  share = 'share',\n  search = 'search',\n  selectAllFiles = 'selectAllFiles',\n  clearSelection = 'clearSelection',\n\n  // File Actions: Sorting & options\n  sortAsc = 'sortAsc',\n  sortDesc = 'sortDesc',\n  toggleOn = 'toggleOn',\n  toggleOff = 'toggleOff',\n\n  // File Actions: File Views\n  list = 'list',\n  compact = 'compact',\n  smallThumbnail = 'smallThumbnail',\n  largeThumbnail = 'largeThumbnail',\n\n  // File Actions: Unsorted\n  folder = 'folder',\n  folderCreate = 'folderCreate',\n  folderOpen = 'folderOpen',\n  folderChainSeparator = 'folderChainSeparator',\n  download = 'download',\n  upload = 'upload',\n  trash = 'trash',\n  fallbackIcon = 'fallbackIcon',\n\n  // File modifiers\n  symlink = 'symlink',\n  hidden = 'hidden',\n\n  // Generic file types\n  file = 'file',\n  license = 'license',\n  code = 'code',\n  config = 'config',\n  model = 'model',\n  database = 'database',\n  text = 'text',\n  archive = 'archive',\n  image = 'image',\n  video = 'video',\n  info = 'info',\n  key = 'key',\n  lock = 'lock',\n  music = 'music',\n  terminal = 'terminal',\n  users = 'users',\n\n  // OS file types\n  linux = 'linux',\n  ubuntu = 'ubuntu',\n  windows = 'windows',\n\n  // Programming language file types\n  rust = 'rust',\n  python = 'python',\n  nodejs = 'nodejs',\n  php = 'php',\n\n  // Development tools file types\n  git = 'git',\n\n  // Other program file types\n  pdf = 'pdf',\n  excel = 'excel',\n  word = 'word',\n  flash = 'flash',\n}\n\nexport interface FileIconData {\n  icon: ChonkyIconName | string;\n  colorCode: number;\n}\n\nexport interface ChonkyIconProps {\n  icon: ChonkyIconName | string;\n  spin?: boolean;\n  className?: string;\n  fixedWidth?: boolean;\n  style?: React.CSSProperties;\n}\n","import { sort } from 'fast-sort';\nimport FuzzySearch from 'fuzzy-search';\nimport { Nilable, Nullable } from 'tsdef';\n\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { OptionIds } from '../action-definitions/option-ids';\nimport { FileArray, FileData, FileFilter } from '../types/file.types';\nimport { RootState } from '../types/redux.types';\nimport { FileSortKeySelector, SortOrder } from '../types/sort.types';\nimport { FileHelper } from '../util/file-helper';\n\n// Raw selectors\nexport const selectInstanceId = (state: RootState) => state.instanceId;\nexport const selectExternalFileActionHandler = (state: RootState) => state.externalFileActionHandler;\n\nexport const selectFileActionMap = (state: RootState) => state.fileActionMap;\nexport const selectFileActionIds = (state: RootState) => state.fileActionIds;\nexport const selectFileActionData = (fileActionId: string) => (state: RootState) =>\n  selectFileActionMap(state)[fileActionId];\nexport const selectToolbarItems = (state: RootState) => state.toolbarItems;\nexport const selectContextMenuItems = (state: RootState) => state.contextMenuItems;\n\nexport const selectFolderChain = (state: RootState) => state.folderChain;\nexport const selectCurrentFolder = (state: RootState) => {\n  const folderChain = selectFolderChain(state);\n  const currentFolder = folderChain.length > 0 ? folderChain[folderChain.length - 1] : null;\n  return currentFolder;\n};\nexport const selectParentFolder = (state: RootState) => {\n  const folderChain = selectFolderChain(state);\n  const parentFolder = folderChain.length > 1 ? folderChain[folderChain.length - 2] : null;\n  return parentFolder;\n};\n\nexport const selectRawFiles = (state: RootState) => state.rawFiles;\nexport const selectFileMap = (state: RootState) => state.fileMap;\nexport const selectCleanFileIds = (state: RootState) => state.cleanFileIds;\nexport const selectFileData = (fileId: Nullable<string>) => (state: RootState) =>\n  fileId ? selectFileMap(state)[fileId] : null;\n\nexport const selectHiddenFileIdMap = (state: RootState) => state.hiddenFileIdMap;\nexport const selectHiddenFileCount = (state: RootState) => Object.keys(selectHiddenFileIdMap(state)).length;\n\nexport const selectFocusSearchInput = (state: RootState) => state.focusSearchInput;\nexport const selectSearchString = (state: RootState) => state.searchString;\n\nexport const selectSelectionMap = (state: RootState) => state.selectionMap;\nexport const selectSelectedFileIds = (state: RootState) => Object.keys(selectSelectionMap(state));\nexport const selectSelectionSize = (state: RootState) => selectSelectedFileIds(state).length;\nexport const selectIsFileSelected = (fileId: Nullable<string>) => (state: RootState) =>\n  !!fileId && !!selectSelectionMap(state)[fileId];\nexport const selectSelectedFiles = (state: RootState) => {\n  const fileMap = selectFileMap(state);\n  return Object.keys(selectSelectionMap(state)).map((id) => fileMap[id]);\n};\nexport const selectSelectedFilesForAction = (fileActionId: string) => (state: RootState) => {\n  const { fileActionMap } = state;\n  const action = fileActionMap[fileActionId];\n  if (!action || !action.requiresSelection) return undefined;\n\n  return getSelectedFiles(state, action.fileFilter);\n};\nexport const selectSelectedFilesForActionCount = (fileActionId: string) => (state: RootState) =>\n  getSelectedFilesForAction(state, fileActionId)?.length;\nexport const selectDisableSelection = (state: RootState) => state.disableSelection;\nexport const selectForceEnableOpenParent = (state: RootState) => state.forceEnableOpenParent;\nexport const selectHideToolbarInfo = (state: RootState) => state.hideToolbarInfo;\n\nexport const selectFileViewConfig = (state: RootState) => state.fileViewConfig;\n\nexport const selectSortActionId = (state: RootState) => state.sortActionId;\nexport const selectSortOrder = (state: RootState) => state.sortOrder;\n\nexport const selectOptionMap = (state: RootState) => state.optionMap;\nexport const selectOptionValue = (optionId: string) => (state: RootState) => selectOptionMap(state)[optionId];\n\nexport const selectThumbnailGenerator = (state: RootState) => state.thumbnailGenerator;\nexport const selectDoubleClickDelay = (state: RootState) => state.doubleClickDelay;\nexport const selectIsDnDDisabled = (state: RootState) => state.disableDragAndDrop;\nexport const selectClearSelectionOnOutsideClick = (state: RootState) => state.clearSelectionOnOutsideClick;\n\nexport const selectContextMenuMounted = (state: RootState) => state.contextMenuMounted;\nexport const selectContextMenuConfig = (state: RootState) => state.contextMenuConfig;\nexport const selectContextMenuTriggerFile = (state: RootState) => {\n  const config = selectContextMenuConfig(state);\n  if (!config || !config.triggerFileId) return null;\n  const fileMap = selectFileMap(state);\n  return fileMap[config.triggerFileId] ?? null;\n};\n\n// Raw selectors\nconst getFileActionMap = (state: RootState) => state.fileActionMap;\nconst getOptionMap = (state: RootState) => state.optionMap;\nconst getFileMap = (state: RootState) => state.fileMap;\nconst getFileIds = (state: RootState) => state.fileIds;\nconst getCleanFileIds = (state: RootState) => state.cleanFileIds;\nconst getSortActionId = (state: RootState) => state.sortActionId;\nconst getSortOrder = (state: RootState) => state.sortOrder;\nconst getSearchString = (state: RootState) => state.searchString;\nconst _getLastClick = (state: RootState) => state.lastClick;\n\n// Memoized selectors\nconst makeGetAction = (fileActionSelector: (state: RootState) => Nullable<string>) =>\n  createSelector([getFileActionMap, fileActionSelector], (fileActionMap, fileActionId) =>\n    fileActionId && fileActionMap[fileActionId] ? fileActionMap[fileActionId] : null,\n  );\nconst makeGetOptionValue = (optionId: string, defaultValue: any = undefined) =>\n  createSelector([getOptionMap], (optionMap) => {\n    const value = optionMap[optionId];\n    if (value === undefined) {\n      return defaultValue;\n    }\n    return value;\n  });\nconst makeGetFiles = (fileIdsSelector: (state: RootState) => Nullable<string>[]) =>\n  createSelector(\n    [getFileMap, fileIdsSelector],\n    (fileMap, fileIds): FileArray => fileIds.map((fileId) => (fileId && fileMap[fileId] ? fileMap[fileId] : null)),\n  );\nconst getSortedFileIds = createSelector(\n  [\n    getFileIds,\n    getSortOrder,\n    makeGetFiles(getFileIds),\n    makeGetAction(getSortActionId),\n    makeGetOptionValue(OptionIds.ShowFoldersFirst, false),\n  ],\n  (fileIds, sortOrder, files, sortAction, showFolderFirst) => {\n    if (!sortAction) {\n      // We allow users to set the sort action ID to `null` if they want to use their\n      // own sorting mechanisms instead of relying on Chonky built-in sort.\n      return fileIds;\n    }\n\n    const prepareSortKeySelector = (selector: FileSortKeySelector) => (file: Nullable<FileData>) => selector(file);\n\n    const sortFunctions: {\n      asc?: (file: FileData) => any;\n      desc?: (file: FileData) => any;\n    }[] = [];\n\n    if (showFolderFirst) {\n      // If option is undefined (relevant actions is not enabled), we don't show\n      // folders first.\n      sortFunctions.push({\n        desc: prepareSortKeySelector(FileHelper.isDirectory),\n      });\n    }\n    if (sortAction.sortKeySelector) {\n      const configKeyName = sortOrder === SortOrder.ASC ? 'asc' : 'desc';\n      sortFunctions.push({\n        [configKeyName]: prepareSortKeySelector(sortAction.sortKeySelector),\n      });\n    }\n    if (sortFunctions.length === 0) return fileIds;\n\n    // We copy the array because `fast-sort` mutates it\n    const sortedFileIds = sort([...files])\n      .by(sortFunctions as any)\n      .map((file) => (file ? file.id : null));\n    return sortedFileIds;\n  },\n);\nconst getSearcher = createSelector(\n  [makeGetFiles(getCleanFileIds)],\n  (cleanFiles) => new FuzzySearch(cleanFiles as FileData[], ['name'], { caseSensitive: false }),\n);\nconst getSearchFilteredFileIds = createSelector(\n  [getCleanFileIds, getSearchString, getSearcher],\n  (cleanFileIds, searchString, searcher) =>\n    searchString ? searcher.search(searchString).map((f) => f.id) : cleanFileIds,\n);\nconst getHiddenFileIdMap = createSelector(\n  [getSearchFilteredFileIds, makeGetFiles(getCleanFileIds), makeGetOptionValue(OptionIds.ShowHiddenFiles)],\n  (searchFilteredFileIds, cleanFiles, showHiddenFiles) => {\n    const searchFilteredFileIdsSet = new Set(searchFilteredFileIds);\n    const hiddenFileIdMap: any = {};\n    cleanFiles.forEach((file) => {\n      if (!file) return;\n      else if (!searchFilteredFileIdsSet.has(file.id)) {\n        // Hidden by seach\n        hiddenFileIdMap[file.id] = true;\n      } else if (!showHiddenFiles && FileHelper.isHidden(file)) {\n        // Hidden by options\n        hiddenFileIdMap[file.id] = true;\n      }\n    });\n    return hiddenFileIdMap;\n  },\n);\nconst getDisplayFileIds = createSelector(\n  [getSortedFileIds, getHiddenFileIdMap],\n  /** Returns files that will actually be shown to the user. */\n  (sortedFileIds, hiddenFileIdMap) => sortedFileIds.filter((id) => !id || !hiddenFileIdMap[id]),\n);\nconst getLastClickIndex = createSelector(\n  [_getLastClick, getSortedFileIds],\n  /** Returns the last click index after ensuring it is actually still valid. */\n  (lastClick, displayFileIds) => {\n    if (\n      !lastClick ||\n      lastClick.index > displayFileIds.length - 1 ||\n      lastClick.fileId != displayFileIds[lastClick.index]\n    ) {\n      return null;\n    }\n    return lastClick.index;\n  },\n);\n\nexport const selectors = {\n  // Raw selectors\n  getFileActionMap,\n  getOptionMap,\n  getFileMap,\n  getFileIds,\n  getCleanFileIds,\n  getSortActionId,\n  getSortOrder,\n  getSearchString,\n  _getLastClick,\n\n  // Memoized selectors\n  getSortedFileIds,\n  getSearcher,\n  getSearchFilteredFileIds,\n  getHiddenFileIdMap,\n  getDisplayFileIds,\n  getLastClickIndex,\n\n  // Parametrized selectors\n  makeGetAction,\n  makeGetOptionValue,\n  makeGetFiles,\n};\n\n// Selectors meant to be used outside of Redux code\nexport const getFileData = (state: RootState, fileId: Nullable<string>) =>\n  fileId ? selectFileMap(state)[fileId] : null;\nexport const getIsFileSelected = (state: RootState, file: FileData) => {\n  // !!! We deliberately don't use `FileHelper.isSelectable` here as we want to\n  //     reflect the state of Redux store accurately.\n  return !!selectSelectionMap(state)[file.id];\n};\nexport const getSelectedFiles = (state: RootState, ...filters: Nilable<FileFilter>[]) => {\n  const { fileMap, selectionMap } = state;\n\n  const selectedFiles = Object.keys(selectionMap).map((id) => fileMap[id]);\n  const filteredSelectedFiles = filters.reduce(\n    (prevFiles, filter) => (filter ? prevFiles.filter(filter) : prevFiles),\n    selectedFiles,\n  );\n  return filteredSelectedFiles;\n};\nexport const getSelectedFilesForAction = (state: RootState, fileActionId: string) =>\n  selectSelectedFilesForAction(fileActionId)(state);\n","import { Nilable } from 'tsdef';\n\nimport { ChonkyActions, DefaultFileActions, EssentialFileActions } from '../../action-definitions/index';\nimport { FileActionGroup, FileActionMenuItem } from '../../types/action-menus.types';\nimport { FileAction } from '../../types/action.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { ChonkyThunk } from '../../types/redux.types';\nimport { SortOrder } from '../../types/sort.types';\nimport { sanitizeInputArray } from '../files-transforms';\nimport { reduxActions } from '../reducers';\nimport { selectCleanFileIds, selectFileMap, selectHiddenFileIdMap, selectSelectionMap } from '../selectors';\n\n/**\n * Merges multiple file action arrays into one while removing duplicates\n */\nconst mergeFileActionsArrays = (...fileActionArrays: FileAction[][]): FileAction[] => {\n  const seenActionIds = new Set<string>();\n  const addToSeen = (a: FileAction) => !!seenActionIds.add(a.id);\n  const wasNotSeen = (a: FileAction) => !seenActionIds.has(a.id);\n\n  const duplicateFreeArrays = fileActionArrays.map((arr) => {\n    const duplicateFreeArray = arr.filter(wasNotSeen);\n    duplicateFreeArray.map(addToSeen);\n    return duplicateFreeArray;\n  });\n  return new Array<FileAction>().concat(...duplicateFreeArrays);\n};\n\nexport const thunkUpdateRawFileActions =\n  (rawFileActions: FileAction[] | any, disableDefaultFileActions: Nilable<boolean | string[]>): ChonkyThunk =>\n  (dispatch) => {\n    const { sanitizedArray, errorMessages } = sanitizeInputArray('fileActions', rawFileActions);\n\n    // Add default actions unless user disabled them\n    let defaultActionsToAdd: FileAction[];\n    if (Array.isArray(disableDefaultFileActions)) {\n      const disabledActionIds = new Set(disableDefaultFileActions);\n      defaultActionsToAdd = DefaultFileActions.filter((action) => !disabledActionIds.has(action.id));\n    } else if (disableDefaultFileActions) {\n      defaultActionsToAdd = [];\n    } else {\n      defaultActionsToAdd = DefaultFileActions;\n    }\n\n    const fileActions = mergeFileActionsArrays(sanitizedArray, EssentialFileActions, defaultActionsToAdd);\n    const optionDefaults: any = {};\n    fileActions.map((a) => (a.option ? (optionDefaults[a.option.id] = a.option.defaultValue) : null));\n\n    dispatch(reduxActions.setRawFileActions(rawFileActions));\n    dispatch(reduxActions.setFileActionsErrorMessages(errorMessages));\n    dispatch(reduxActions.setFileActions(fileActions));\n    dispatch(reduxActions.setOptionDefaults(optionDefaults));\n    dispatch(thunkUpdateToolbarNContextMenuItems(fileActions));\n  };\n\nexport const thunkUpdateToolbarNContextMenuItems =\n  (fileActions: FileAction[]): ChonkyThunk =>\n  (dispatch) => {\n    const excludedToolbarFileActionIds = new Set<string>([\n      // TODO: Move decision to exclude actions somewhere else, as users' custom\n      //  components might not give these actions special treatment like Chonky does.\n      ChonkyActions.OpenParentFolder.id,\n    ]);\n\n    // TODO: Move decision to set icons somewhere else, as users' custom\n    //  components might not give these group names special treatment.\n    const groupIcons: Record<string, ChonkyIconName> = {\n      Actions: ChonkyIconName.dropdown,\n      Options: ChonkyIconName.config,\n    };\n    const groupSortOrder: Record<string, number> = {\n      Options: 0,\n      Actions: 1,\n    };\n\n    type SeenGroupMap = { [groupName: string]: FileActionGroup };\n\n    const toolbarItems: FileActionMenuItem[] = [];\n    const toolbarGroupItems: FileActionGroup[] = [];\n    const seenToolbarGroups: SeenGroupMap = {};\n\n    const contextMenuItems: FileActionMenuItem[] = [];\n    const seenContextMenuGroups: SeenGroupMap = {};\n\n    const getGroup = (itemArray: FileActionMenuItem[], seenMap: SeenGroupMap, groupName: string): FileActionGroup => {\n      if (seenMap[groupName]) return seenMap[groupName];\n      const group: FileActionGroup = {\n        name: groupName,\n        icon: groupIcons[groupName] || null,\n        sortOrder: groupSortOrder[groupName] || -1,\n        fileActionIds: [],\n      };\n      itemArray.push(group);\n      seenMap[groupName] = group;\n      return group;\n    };\n\n    for (const action of fileActions) {\n      const button = action.button;\n      if (!button) continue;\n\n      if (button.toolbar && !excludedToolbarFileActionIds.has(action.id)) {\n        if (button.group) {\n          const group = getGroup(toolbarGroupItems, seenToolbarGroups, button.group);\n          group.fileActionIds.push(action.id);\n        } else {\n          toolbarItems.push(action.id);\n        }\n      }\n\n      if (button.contextMenu) {\n        if (button.group) {\n          const group = getGroup(contextMenuItems, seenContextMenuGroups, button.group);\n          group.fileActionIds.push(action.id);\n        } else {\n          contextMenuItems.push(action.id);\n        }\n      }\n    }\n\n    toolbarGroupItems.sort((a, b) => a.sortOrder - b.sortOrder);\n    dispatch(reduxActions.updateFileActionMenuItems([[...toolbarItems, ...toolbarGroupItems], contextMenuItems]));\n  };\n\nexport const thunkUpdateDefaultFileViewActionId =\n  (fileActionId: Nilable<string>): ChonkyThunk =>\n  (dispatch, getState) => {\n    const { fileActionMap } = getState();\n    const action = fileActionId ? fileActionMap[fileActionId] : null;\n    if (action && action.fileViewConfig) {\n      dispatch(reduxActions.setFileViewConfig(action.fileViewConfig));\n    }\n  };\n\nexport const thunkActivateSortAction =\n  (fileActionId: Nilable<string>): ChonkyThunk =>\n  (dispatch, getState) => {\n    if (!fileActionId) return;\n\n    const { sortActionId: oldActionId, sortOrder: oldOrder, fileActionMap } = getState();\n    const action = fileActionMap[fileActionId];\n    if (!action || !action.sortKeySelector) return;\n\n    let order = oldOrder === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    if (oldActionId !== fileActionId) {\n      order = SortOrder.ASC;\n    }\n\n    dispatch(reduxActions.setSort({ actionId: fileActionId, order: order }));\n  };\n\nexport const thunkApplySelectionTransform =\n  (action: FileAction): ChonkyThunk =>\n  (dispatch, getState) => {\n    const selectionTransform = action.selectionTransform;\n    if (!selectionTransform) return;\n\n    const state = getState();\n    const prevSelection = new Set<string>(Object.keys(selectSelectionMap(state)));\n    const hiddenFileIds = new Set<string>(Object.keys(selectHiddenFileIdMap(state)));\n\n    const newSelection = selectionTransform({\n      prevSelection,\n      fileIds: selectCleanFileIds(state),\n      fileMap: selectFileMap(state),\n      hiddenFileIds,\n    });\n    if (!newSelection) return;\n\n    if (newSelection.size === 0) {\n      dispatch(reduxActions.clearSelection());\n    } else {\n      dispatch(reduxActions.selectFiles({ fileIds: Array.from(newSelection), reset: true }));\n    }\n  };\n","export enum FileViewMode {\n  List = 'list',\n  Compact = 'compact',\n  Grid = 'grid',\n}\n\nexport type FileViewConfigList = {\n  mode: FileViewMode.List;\n  entryHeight: number;\n};\n\nexport type FileViewConfigGrid = {\n  mode: FileViewMode.Compact | FileViewMode.Grid;\n  entryWidth: number;\n  entryHeight: number;\n};\n\nexport type FileViewConfig = FileViewConfigList | FileViewConfigGrid;\n","import { MaybePromise, Undefinable } from 'tsdef';\n\nimport { FileActionData, FileActionState } from '../../types/action-handler.types';\nimport { FileAction } from '../../types/action.types';\nimport { ChonkyDispatch, ChonkyThunk } from '../../types/redux.types';\nimport { Logger } from '../../util/logger';\nimport { reduxActions } from '../reducers';\nimport {\n  selectContextMenuTriggerFile,\n  selectExternalFileActionHandler,\n  selectFileActionMap,\n  selectInstanceId,\n  selectSelectedFiles,\n} from '../selectors';\nimport { thunkActivateSortAction, thunkApplySelectionTransform } from './file-actions.thunks';\n\n/**\n * Thunk that dispatches actions to the external (user-provided) action handler.\n */\nexport const thunkDispatchFileAction =\n  (data: FileActionData<FileAction>): ChonkyThunk =>\n  (_dispatch, getState) => {\n    Logger.debug(`FILE ACTION DISPATCH: [${data.id}]`, 'data:', data);\n    const state = getState();\n    const action = selectFileActionMap(state)[data.id];\n    const externalFileActionHandler = selectExternalFileActionHandler(state);\n    if (action) {\n      if (externalFileActionHandler) {\n        Promise.resolve(externalFileActionHandler(data)).catch((error) =>\n          Logger.error(`User-defined file action handler threw an error: ${error.message}`),\n        );\n      }\n    } else {\n      Logger.warn(\n        `Internal components dispatched the \"${data.id}\" file action, but such ` + `action was not registered.`,\n      );\n    }\n  };\n\n/**\n * Thunk that is used by internal components (and potentially the user) to \"request\"\n * actions. When action is requested, Chonky \"prepares\" the action data by extracting it\n * from Redux state. Once action data is ready, Chonky executes some side effect and/or\n * dispatches the action to the external action handler.\n */\nexport const thunkRequestFileAction =\n  <Action extends FileAction>(action: Action, payload: Action['__payloadType']): ChonkyThunk =>\n  (dispatch, getState) => {\n    Logger.debug(`FILE ACTION REQUEST: [${action.id}]`, 'action:', action, 'payload:', payload);\n    const state = getState();\n    const instanceId = selectInstanceId(state);\n\n    if (!selectFileActionMap(state)[action.id]) {\n      Logger.warn(\n        `The action \"${action.id}\" was requested, but it is not registered. The ` +\n          `action will still be dispatched, but this might indicate a bug in ` +\n          `the code. Please register your actions by passing them to ` +\n          `\"fileActions\" prop.`,\n      );\n    }\n\n    // Determine files for the action if action requires selection\n    const selectedFiles = selectSelectedFiles(state);\n    const selectedFilesForAction = action.fileFilter ? selectedFiles.filter(action.fileFilter) : selectedFiles;\n    if (action.requiresSelection && selectedFilesForAction.length === 0) {\n      Logger.warn(\n        `Internal components requested the \"${action.id}\" file ` +\n          `action, but the selection for this action was empty. This ` +\n          `might a bug in the code of the presentational components.`,\n      );\n      return;\n    }\n\n    const contextMenuTriggerFile = selectContextMenuTriggerFile(state);\n    const actionState: FileActionState<{}> = {\n      instanceId,\n      selectedFiles,\n      selectedFilesForAction,\n      contextMenuTriggerFile,\n    };\n\n    // === Update sort state if necessary\n    const sortKeySelector = action.sortKeySelector;\n    if (sortKeySelector) dispatch(thunkActivateSortAction(action.id));\n\n    // === Update file view state if necessary\n    const fileViewConfig = action.fileViewConfig;\n    if (fileViewConfig) dispatch(reduxActions.setFileViewConfig(fileViewConfig));\n\n    // === Update option state if necessary\n    const option = action.option;\n    if (option) dispatch(reduxActions.toggleOption(option.id));\n\n    // === Apply selection transform if necessary\n    const selectionTransform = action.selectionTransform;\n    if (selectionTransform) dispatch(thunkApplySelectionTransform(action));\n\n    // Apply the effect\n    const effect = action.effect;\n    let maybeEffectPromise: MaybePromise<boolean | undefined> = undefined;\n    if (effect) {\n      try {\n        maybeEffectPromise = effect({\n          action,\n          payload,\n          state: actionState,\n          reduxDispatch: dispatch,\n          getReduxState: getState,\n        }) as MaybePromise<boolean | undefined>;\n      } catch (err) {\n        const error = err as Error;\n        Logger.error(`User-defined effect function for action ${action.id} threw an ` + `error: ${error.message}`);\n      }\n    }\n\n    // Dispatch the action to user code. Deliberately call it after all other\n    // operations are over.\n    return Promise.resolve(maybeEffectPromise)\n      .then((effectResult) => {\n        const data: FileActionData<Action> = {\n          id: action.id,\n          action,\n          payload,\n          state: actionState,\n        };\n        triggerDispatchAfterEffect(dispatch, data, effectResult);\n      })\n      .catch((error) => {\n        Logger.error(\n          `User-defined effect function for action ${action.id} returned a ` +\n            `promise that was rejected: ${error.message}`,\n        );\n        const data: FileActionData<Action> = {\n          id: action.id,\n          action,\n          payload,\n          state: actionState,\n        };\n        triggerDispatchAfterEffect(dispatch, data, undefined);\n      });\n  };\n\nexport const triggerDispatchAfterEffect = <Action extends FileAction>(\n  dispatch: ChonkyDispatch,\n  data: FileActionData<Action>,\n  effectResult: Undefinable<boolean>,\n) => {\n  const preventDispatch = effectResult === true;\n  if (!preventDispatch) dispatch(thunkDispatchFileAction(data));\n};\n","// Used in React hooks to indicate empty deps are intentional.\nimport { MaybePromise, Nullable, WritableProps } from 'tsdef';\n\nimport { FileAction, FileActionEffect } from '../types/action.types';\nimport { Logger } from './logger';\n\n// Used in contexts that need to provide some default value for a function.\n// eslint-disable-next-line no-unused-vars,@typescript-eslint/no-unused-vars\nexport const NOOP_FUNCTION = (...args: any[]) => {\n  Logger.warn(\n    `The \"NOOP_FUNCTION\" from the constants module was called. ` +\n      `This can indicate a bug in one of the components. Supplied args:`,\n    args,\n  );\n};\n\nexport const isPromise = <T>(value: MaybePromise<T> | any): value is Promise<T> => {\n  if (typeof value !== 'object' || !value) return false;\n  const then = (value as Promise<T>).then;\n  return then && typeof then === 'function';\n};\n\nexport const defineFileAction = <Action extends FileAction>(\n  action: Action,\n  effect?: FileActionEffect<FileAction>,\n): WritableProps<Action> => {\n  if (action.__payloadType !== undefined && (action.hotkeys || action.button)) {\n    const errorMessage =\n      `Invalid definition was provided for file action \"${action.id}\". Actions ` +\n      `that specify hotkeys or buttons cannot define a payload type. If ` +\n      `your application requires this functionality, define two actions ` +\n      `and chain them using effects.`;\n    Logger.error(errorMessage);\n    throw new Error(errorMessage);\n  }\n\n  action.effect = effect;\n  return action;\n};\n\n/**\n * Recursively check the current element and the parent elements, going bottom-up.\n * Returns the first element to match the predicate, otherwise returns null if such\n * element is not found.\n */\nexport const findElementAmongAncestors = (\n  maybeElement: HTMLElement | any,\n  predicate: (maybeElement: HTMLElement | any) => boolean,\n): Nullable<HTMLElement> => {\n  if (!maybeElement) return maybeElement;\n\n  if (predicate(maybeElement)) return maybeElement;\n\n  if (maybeElement.parentElement) {\n    return findElementAmongAncestors(maybeElement.parentElement, predicate);\n  }\n\n  return null;\n};\n\nexport const elementIsInsideButton = (buttonCandidate: HTMLElement | any): boolean => {\n  return !!findElementAmongAncestors(\n    buttonCandidate,\n    (element: any) => element.tagName && element.tagName.toLowerCase() === 'button',\n  );\n};\n\nexport const getValueOrFallback = <T extends any>(\n  value: T | undefined,\n  fallback: T,\n  desiredType?: 'boolean' | 'string' | 'number',\n): NonNullable<T> => {\n  if (desiredType) {\n    return (typeof value === desiredType ? value : fallback) as NonNullable<T>;\n  }\n  return (value !== undefined ? value : fallback) as NonNullable<T>;\n};\n","import { filesize } from 'filesize';\nimport { createContext, useContext, useMemo } from 'react';\nimport { IntlShape, useIntl } from 'react-intl';\nimport { Nullable, Undefinable } from 'tsdef';\n\nimport { FileAction } from '../types/action.types';\nimport { FileData } from '../types/file.types';\nimport { ChonkyFormatters } from '../types/i18n.types';\nimport { FileHelper } from './file-helper';\n\nexport enum I18nNamespace {\n  Toolbar = 'toolbar',\n  FileList = 'fileList',\n  FileEntry = 'fileEntry',\n  FileContextMenu = 'contextMenu',\n\n  FileActions = 'actions',\n  FileActionGroups = 'actionGroups',\n}\n\nexport const getI18nId = (namespace: I18nNamespace, stringId: string): string => `chonky.${namespace}.${stringId}`;\n\nexport const getActionI18nId = (actionId: string, stringId: string): string =>\n  `chonky.${I18nNamespace.FileActions}.${actionId}.${stringId}`;\n\nexport const useLocalizedFileActionGroup = (groupName: string) => {\n  const intl = useIntl();\n  return useMemo(() => {\n    return intl.formatMessage({\n      id: getI18nId(I18nNamespace.FileActionGroups, groupName),\n      defaultMessage: groupName,\n    });\n  }, [groupName, intl]);\n};\n\nexport const useLocalizedFileActionStrings = (action: Nullable<FileAction>) => {\n  const intl = useIntl();\n  return useMemo(() => {\n    if (!action) {\n      return {\n        buttonName: '',\n        buttonTooltip: undefined,\n      };\n    }\n\n    const buttonName = intl.formatMessage({\n      id: getActionI18nId(action.id, 'button.name'),\n      defaultMessage: action.button?.name,\n    });\n\n    let buttonTooltip: Undefinable<string> = undefined;\n    if (action.button?.tooltip) {\n      // We only translate the tooltip if the original action has a tooltip.\n      buttonTooltip = intl.formatMessage({\n        id: getActionI18nId(action.id, 'button.tooltip'),\n        defaultMessage: action.button?.tooltip,\n      });\n    }\n\n    return {\n      buttonName,\n      buttonTooltip,\n    };\n  }, [action, intl]);\n};\n\nexport const useLocalizedFileEntryStrings = (file: Nullable<FileData>) => {\n  const intl = useIntl();\n  const formatters = useContext(ChonkyFormattersContext);\n  return useMemo(() => {\n    return {\n      fileModDateString: formatters.formatFileModDate(intl, file),\n      fileSizeString: formatters.formatFileSize(intl, file),\n    };\n  }, [file, formatters, intl]);\n};\n\nexport const defaultFormatters: ChonkyFormatters = {\n  formatFileModDate: (intl: IntlShape, file: Nullable<FileData>): Nullable<string> => {\n    const safeModDate = FileHelper.getModDate(file);\n    if (safeModDate) {\n      /*\n      const dateOpts: FormatDateOptions = {\n        dateStyle: 'medium',\n        timeStyle: 'short',\n      }\n      */\n      // return intl.formatDate(safeModDate, dateOpts);\n      return intl.formatDate(safeModDate);\n    } else {\n      return null;\n    }\n  },\n  formatFileSize: (_intl: IntlShape, file: Nullable<FileData>): Nullable<string> => {\n    if (!file || typeof file.size !== 'number') return null;\n\n    const size = file.size;\n    const sizeData = filesize(size, { bits: false, output: 'object' }) as any;\n    if (sizeData.symbol === 'B') {\n      return `${Math.round(sizeData.value / 10) / 100.0} KB`;\n    } else if (sizeData.symbol === 'KB') {\n      return `${Math.round(sizeData.value)} ${sizeData.symbol}`;\n    }\n    return `${sizeData.value} ${sizeData.symbol}`;\n  },\n};\n\nexport const ChonkyFormattersContext = createContext(defaultFormatters);\n","import { reduxActions } from '../redux/reducers';\nimport {\n  getFileData,\n  getIsFileSelected,\n  selectDisableSelection,\n  selectors,\n  selectParentFolder,\n  selectSelectionSize,\n} from '../redux/selectors';\nimport { reduxThunks } from '../redux/thunks';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport {\n  ChangeSelectionPayload,\n  EndDragNDropPayload,\n  KeyboardClickFilePayload,\n  MouseClickFilePayload,\n  MoveFilesPayload,\n  OpenFileContextMenuPayload,\n  OpenFilesPayload,\n  StartDragNDropPayload,\n} from '../types/action-payloads.types';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { FileHelper } from '../util/file-helper';\nimport { defineFileAction } from '../util/helpers';\nimport { Logger } from '../util/logger';\nimport { ChonkyActions } from './index';\n\nexport const EssentialActions = {\n  /**\n   * Action that is dispatched when the user clicks on a file entry using their mouse.\n   * Both single clicks and double clicks trigger this action.\n   */\n  MouseClickFile: defineFileAction(\n    {\n      id: 'mouse_click_file',\n      __payloadType: {} as MouseClickFilePayload,\n    } as const,\n    ({ payload, reduxDispatch, getReduxState }) => {\n      if (payload.clickType === 'double') {\n        if (FileHelper.isOpenable(payload.file)) {\n          reduxDispatch(\n            thunkRequestFileAction(ChonkyActions.OpenFiles, {\n              targetFile: payload.file,\n\n              // To simulate Windows Explorer and Nautilus behaviour,\n              // a double click on a file only opens that file even if\n              // there is a selection.\n              files: [payload.file],\n            }),\n          );\n        }\n      } else {\n        // We're dealing with a single click\n\n        const disableSelection = selectDisableSelection(getReduxState());\n        if (FileHelper.isSelectable(payload.file) && !disableSelection) {\n          if (payload.ctrlKey) {\n            // Multiple selection\n            reduxDispatch(\n              reduxActions.toggleSelection({\n                fileId: payload.file.id,\n                exclusive: false,\n              }),\n            );\n            reduxDispatch(\n              reduxActions.setLastClickIndex({\n                index: payload.fileDisplayIndex,\n                fileId: payload.file.id,\n              }),\n            );\n          } else if (payload.shiftKey) {\n            // Range selection\n            const lastClickIndex = selectors.getLastClickIndex(getReduxState());\n            if (typeof lastClickIndex === 'number') {\n              // We have the index of the previous click\n              let rangeStart = lastClickIndex;\n              let rangeEnd = payload.fileDisplayIndex;\n              if (rangeStart > rangeEnd) {\n                [rangeStart, rangeEnd] = [rangeEnd, rangeStart];\n              }\n\n              reduxDispatch(reduxThunks.selectRange({ rangeStart, rangeEnd }));\n            } else {\n              // Since we can't do a range selection, do a\n              // multiple selection\n              reduxDispatch(\n                reduxActions.toggleSelection({\n                  fileId: payload.file.id,\n                  exclusive: false,\n                }),\n              );\n              reduxDispatch(\n                reduxActions.setLastClickIndex({\n                  index: payload.fileDisplayIndex,\n                  fileId: payload.file.id,\n                }),\n              );\n            }\n          } else {\n            // Exclusive selection\n            reduxDispatch(\n              reduxActions.toggleSelection({\n                fileId: payload.file.id,\n                exclusive: true,\n              }),\n            );\n            reduxDispatch(\n              reduxActions.setLastClickIndex({\n                index: payload.fileDisplayIndex,\n                fileId: payload.file.id,\n              }),\n            );\n          }\n        } else {\n          if (!payload.ctrlKey && !disableSelection) {\n            reduxDispatch(reduxActions.clearSelection());\n          }\n          reduxDispatch(\n            reduxActions.setLastClickIndex({\n              index: payload.fileDisplayIndex,\n              fileId: payload.file.id,\n            }),\n          );\n        }\n      }\n    },\n  ),\n  /**\n   * Action that is dispatched when the user \"clicks\" on a file using their keyboard.\n   * Using Space and Enter keys counts as clicking.\n   */\n  KeyboardClickFile: defineFileAction(\n    {\n      id: 'keyboard_click_file',\n      __payloadType: {} as KeyboardClickFilePayload,\n    } as const,\n    ({ payload, reduxDispatch, getReduxState }) => {\n      reduxDispatch(\n        reduxActions.setLastClickIndex({\n          index: payload.fileDisplayIndex,\n          fileId: payload.file.id,\n        }),\n      );\n      if (payload.enterKey) {\n        // We only dispatch the Open Files action here when the selection is\n        // empty. Otherwise, `Enter` key presses are handled by the\n        // hotkey manager for the Open Files action.\n        if (selectSelectionSize(getReduxState()) === 0) {\n          reduxDispatch(\n            thunkRequestFileAction(ChonkyActions.OpenFiles, {\n              targetFile: payload.file,\n              files: [payload.file],\n            }),\n          );\n        }\n      } else if (payload.spaceKey && FileHelper.isSelectable(payload.file)) {\n        reduxDispatch(\n          reduxActions.toggleSelection({\n            fileId: payload.file.id,\n            exclusive: payload.ctrlKey,\n          }),\n        );\n      }\n    },\n  ),\n  /**\n   * Action that is dispatched when user starts dragging some file.\n   */\n  StartDragNDrop: defineFileAction(\n    {\n      id: 'start_drag_n_drop',\n      __payloadType: {} as StartDragNDropPayload,\n    } as const,\n    ({ payload, reduxDispatch, getReduxState }) => {\n      const file = payload.draggedFile;\n      if (!getIsFileSelected(getReduxState(), file)) {\n        if (FileHelper.isSelectable(file)) {\n          reduxDispatch(\n            reduxActions.selectFiles({\n              fileIds: [file.id],\n              reset: true,\n            }),\n          );\n        }\n      }\n    },\n  ),\n  /**\n   * Action that is dispatched when user either cancels the drag & drop interaction,\n   * or drops a file somewhere.\n   */\n  EndDragNDrop: defineFileAction(\n    {\n      id: 'end_drag_n_drop',\n      __payloadType: {} as EndDragNDropPayload,\n    } as const,\n    ({ payload, reduxDispatch, getReduxState }) => {\n      if (getIsFileSelected(getReduxState(), payload.destination)) {\n        // Can't drop a selection into itself\n        return;\n      }\n\n      const { draggedFile, selectedFiles } = payload as EndDragNDropPayload;\n      const droppedFiles = selectedFiles.length > 0 ? selectedFiles : [draggedFile];\n      reduxDispatch(\n        thunkRequestFileAction(ChonkyActions.MoveFiles, {\n          ...payload,\n          files: droppedFiles,\n        }),\n      );\n    },\n  ),\n  /**\n   * Action that is dispatched when user moves files from one folder to another,\n   * usually by dragging & dropping some files into the folder.\n   */\n  MoveFiles: defineFileAction({\n    id: 'move_files',\n    __payloadType: {} as MoveFilesPayload,\n  } as const),\n  /**\n   * Action that is dispatched when the selection changes for any reason.\n   */\n  ChangeSelection: defineFileAction({\n    id: 'change_selection',\n    __payloadType: {} as ChangeSelectionPayload,\n  } as const),\n  /**\n   * Action that is dispatched when user wants to open some files. This action is\n   * often triggered by other actions.\n   */\n  OpenFiles: defineFileAction({\n    id: 'open_files',\n    __payloadType: {} as OpenFilesPayload,\n  } as const),\n  /**\n   * Action that is triggered when user wants to go up a directory.\n   */\n  OpenParentFolder: defineFileAction(\n    {\n      id: 'open_parent_folder',\n      hotkeys: ['backspace'],\n      button: {\n        name: 'Go up a directory',\n        toolbar: true,\n        contextMenu: false,\n        icon: ChonkyIconName.openParentFolder,\n        iconOnly: true,\n      },\n    } as const,\n    ({ reduxDispatch, getReduxState }) => {\n      const reduxState = getReduxState();\n      const parentFolder = selectParentFolder(reduxState);\n      if (FileHelper.isOpenable(parentFolder)) {\n        reduxDispatch(\n          thunkRequestFileAction(ChonkyActions.OpenFiles, {\n            targetFile: parentFolder,\n            files: [parentFolder],\n          }),\n        );\n      } else if (!reduxState.forceEnableOpenParent) {\n        Logger.warn(\n          'Open parent folder effect was triggered even though the parent folder' +\n            ' is not openable. This indicates a bug in presentation components.',\n        );\n      }\n    },\n  ),\n  /**\n   * Action that is dispatched when user opens the context menu, either by right click\n   * on something or using the context menu button on their keyboard.\n   */\n  OpenFileContextMenu: defineFileAction(\n    {\n      id: 'open_file_context_menu',\n      __payloadType: {} as OpenFileContextMenuPayload,\n    } as const,\n    ({ payload, reduxDispatch, getReduxState }) => {\n      // TODO: Check if the context menu component is actually enabled. There is a\n      //  chance it doesn't matter if it is enabled or not - if it is not mounted,\n      //  the action will simply have no effect. It also allows users to provide\n      //  their own components - however, users could also flip the \"context menu\n      //  component mounted\" switch...\n      const triggerFile = getFileData(getReduxState(), payload.triggerFileId);\n      if (triggerFile) {\n        const fileSelected = getIsFileSelected(getReduxState(), triggerFile);\n        if (!fileSelected) {\n          // If file is selected, we leave the selection as is. If it is not\n          // selected, it means user right clicked the file with no selection.\n          // We simulate the Windows Explorer/Nautilus behaviour of moving\n          // selection to this file.\n          if (FileHelper.isSelectable(triggerFile)) {\n            reduxDispatch(\n              reduxActions.selectFiles({\n                fileIds: [payload.triggerFileId],\n                reset: true,\n              }),\n            );\n          } else {\n            reduxDispatch(reduxActions.clearSelection());\n          }\n        }\n      }\n\n      reduxDispatch(\n        reduxActions.showContextMenu({\n          triggerFileId: payload.triggerFileId,\n          mouseX: payload.clientX - 2,\n          mouseY: payload.clientY - 4,\n        }),\n      );\n    },\n  ),\n};\n","import { ChonkyThunk } from '../../types/redux.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { reduxActions } from '../reducers';\nimport { selectors } from '../selectors';\n\nexport const reduxThunks = {\n  selectRange:\n    (params: { rangeStart: number; rangeEnd: number; reset?: boolean }): ChonkyThunk =>\n    (dispatch, getState) => {\n      const state = getState();\n      if (state.disableSelection) return;\n      const displayFileIds = selectors.getDisplayFileIds(state);\n      const fileIdsToSelect = displayFileIds\n        .slice(params.rangeStart, params.rangeEnd + 1)\n        .filter((id) => id && FileHelper.isSelectable(state.fileMap[id])) as string[];\n      dispatch(\n        reduxActions.selectFiles({\n          fileIds: fileIdsToSelect,\n          reset: !!params.reset,\n        }),\n      );\n    },\n};\n","import { Nullable } from 'tsdef';\n\nimport { selectFocusSearchInput } from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { FileSelectionTransform } from '../types/action.types';\nimport { FileViewMode } from '../types/file-view.types';\nimport { FileData } from '../types/file.types';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { FileHelper } from '../util/file-helper';\nimport { defineFileAction } from '../util/helpers';\nimport { EssentialActions } from './essential';\nimport { OptionIds } from './option-ids';\n\nexport const DefaultActions = {\n  /**\n   * Action that can be used to open currently selected files.\n   */\n  OpenSelection: defineFileAction(\n    {\n      id: 'open_selection',\n      hotkeys: ['enter'],\n      requiresSelection: true,\n      fileFilter: FileHelper.isOpenable,\n      button: {\n        name: 'Open selection',\n        toolbar: true,\n        contextMenu: true,\n        group: 'Actions',\n        icon: ChonkyIconName.openFiles,\n      },\n    } as const,\n    ({ state, reduxDispatch }) => {\n      reduxDispatch(\n        thunkRequestFileAction(EssentialActions.OpenFiles, {\n          files: state.selectedFilesForAction!,\n        }),\n      );\n      return undefined;\n    },\n  ),\n  /**\n   * Action that selects all files.\n   */\n  SelectAllFiles: defineFileAction({\n    id: 'select_all_files',\n    hotkeys: ['ctrl+a'],\n    button: {\n      name: 'Select all files',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.selectAllFiles,\n    },\n    selectionTransform: (({ fileIds, hiddenFileIds }) => {\n      const newSelection = new Set<string>();\n      fileIds.map((fileId) => {\n        // We don't need to check if file is selectable because Chonky does\n        // it own checks internally.\n        if (!hiddenFileIds.has(fileId)) newSelection.add(fileId);\n      });\n      return newSelection;\n    }) as FileSelectionTransform,\n  } as const),\n  /**\n   * Action that clear the file selection.\n   */\n  ClearSelection: defineFileAction({\n    id: 'clear_selection',\n    hotkeys: ['escape'],\n    button: {\n      name: 'Clear selection',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.clearSelection,\n    },\n    selectionTransform: (({ prevSelection }) => {\n      if (prevSelection.size === 0) return null;\n      return new Set<string>();\n    }) as FileSelectionTransform,\n  } as const),\n  /**\n   * Action that enables List view.\n   */\n  EnableListView: defineFileAction({\n    id: 'enable_list_view',\n    fileViewConfig: {\n      mode: FileViewMode.List,\n      entryHeight: 30,\n    },\n    button: {\n      name: 'Switch to List',\n      toolbar: true,\n      icon: ChonkyIconName.list,\n      // iconOnly: true,\n      group: 'Options',\n    },\n  } as const),\n  /**\n   * Action that enables Compact view. Note that compact view is still\n   * experimental and should not be used in production.\n   */\n  EnableCompactView: defineFileAction({\n    // TODO: Don't enable until compact view is fully supported\n    id: 'enable_compact_view',\n    fileViewConfig: {\n      mode: FileViewMode.Compact,\n      entryHeight: 40,\n      entryWidth: 220,\n    },\n    button: {\n      name: 'Switch to Compact',\n      toolbar: true,\n      icon: ChonkyIconName.compact,\n      // iconOnly: true,\n      group: 'Options',\n    },\n  } as const),\n  /**\n   * Action that enables Grid view.\n   */\n  EnableGridView: defineFileAction({\n    id: 'enable_grid_view',\n    fileViewConfig: { mode: FileViewMode.Grid, entryWidth: 100, entryHeight: 100 },\n    button: {\n      name: 'Switch to Grid',\n      toolbar: true,\n      icon: ChonkyIconName.smallThumbnail,\n      // iconOnly: true,\n      group: 'Options',\n    },\n  } as const),\n  /**\n   * Action that sorts files by `file.name`.\n   */\n  SortFilesByName: defineFileAction({\n    id: 'sort_files_by_name',\n    sortKeySelector: (file: Nullable<FileData>) => (file ? file.name.toLowerCase() : undefined),\n    button: {\n      name: 'Sort by name',\n      toolbar: true,\n      group: 'Options',\n    },\n  } as const),\n  /**\n   * Action that sorts files by `file.size`.\n   */\n  SortFilesBySize: defineFileAction({\n    id: 'sort_files_by_size',\n    sortKeySelector: (file: Nullable<FileData>) => (file ? file.size : undefined),\n    button: {\n      name: 'Sort by size',\n      toolbar: true,\n      group: 'Options',\n    },\n  } as const),\n  /**\n   * Action that sorts files by `file.modDate`.\n   */\n  SortFilesByDate: defineFileAction({\n    id: 'sort_files_by_date',\n    sortKeySelector: (file: Nullable<FileData>) => (file ? file.modDate : undefined),\n    button: {\n      name: 'Sort by date',\n      toolbar: true,\n      group: 'Options',\n    },\n  } as const),\n  /**\n   * Action that toggles whether hidden files are shown to the user or not.\n   */\n  ToggleHiddenFiles: defineFileAction({\n    id: 'toggle_hidden_files',\n    hotkeys: ['ctrl+h'],\n    option: {\n      id: OptionIds.ShowHiddenFiles,\n      defaultValue: true,\n    },\n    button: {\n      name: 'Show hidden files',\n      toolbar: true,\n      group: 'Options',\n    },\n  } as const),\n  /**\n   * Action that toggles whether folders should appear before files regardless of\n   * current sort function.\n   */\n  ToggleShowFoldersFirst: defineFileAction({\n    id: 'toggle_show_folders_first',\n    option: {\n      id: OptionIds.ShowFoldersFirst,\n      defaultValue: true,\n    },\n    button: {\n      name: 'Show folders first',\n      toolbar: true,\n      group: 'Options',\n    },\n  } as const),\n  /**\n   * Action that focuses the search input when it is dispatched.\n   */\n  FocusSearchInput: defineFileAction(\n    {\n      id: 'focus_search_input',\n      hotkeys: ['ctrl+f'],\n    } as const,\n    ({ getReduxState }) => {\n      const focusSearchInput = selectFocusSearchInput(getReduxState());\n      if (focusSearchInput) focusSearchInput();\n    },\n  ),\n  /**\n   * Action that enables List view.\n   */\n  ToggleDarkMode: defineFileAction({\n    id: 'enable_dark_mode',\n    option: {\n      id: OptionIds.DarkMode,\n      defaultValue: false,\n    },\n    button: {\n      name: 'Enable dark mode',\n      toolbar: true,\n      icon: ChonkyIconName.list,\n      iconOnly: true,\n    },\n  } as const),\n};\n","import { ChonkyIconName } from '../types/icons.types';\nimport { defineFileAction } from '../util/helpers';\n\nexport const ExtraActions = {\n  /**\n   * Action that adds a button and shortcut to copy files.\n   */\n  CopyFiles: defineFileAction({\n    id: 'copy_files',\n    requiresSelection: true,\n    hotkeys: ['ctrl+c'],\n    button: {\n      name: 'Copy selection',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.copy,\n    },\n  } as const),\n  /**\n   * Action that adds a button to create a new folder.\n   */\n  CreateFolder: defineFileAction({\n    id: 'create_folder',\n    button: {\n      name: 'Create folder',\n      toolbar: true,\n      tooltip: 'Create a folder',\n      icon: ChonkyIconName.folderCreate,\n    },\n  } as const),\n  /**\n   * Action that adds a button to upload files.\n   */\n  UploadFiles: defineFileAction({\n    id: 'upload_files',\n    button: {\n      name: 'Upload files',\n      toolbar: true,\n      tooltip: 'Upload files',\n      icon: ChonkyIconName.upload,\n    },\n  } as const),\n  /**\n   * Action that adds a button to download files.\n   */\n  DownloadFiles: defineFileAction({\n    id: 'download_files',\n    requiresSelection: true,\n    button: {\n      name: 'Download files',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.download,\n    },\n  } as const),\n  /**\n   * Action that adds a button and shortcut to delete files.\n   */\n  DeleteFiles: defineFileAction({\n    id: 'delete_files',\n    requiresSelection: true,\n    hotkeys: ['delete'],\n    button: {\n      name: 'Delete files',\n      toolbar: true,\n      contextMenu: true,\n      group: 'Actions',\n      icon: ChonkyIconName.trash,\n    },\n  } as const),\n};\n","import { DefaultActions } from './default';\nimport { EssentialActions } from './essential';\nimport { ExtraActions } from './extra';\n\nexport { OptionIds } from './option-ids';\n\nexport const ChonkyActions = {\n  ...EssentialActions,\n  ...DefaultActions,\n  ...ExtraActions,\n};\n\nexport const EssentialFileActions = [\n  ChonkyActions.MouseClickFile,\n  ChonkyActions.KeyboardClickFile,\n  ChonkyActions.StartDragNDrop,\n  ChonkyActions.EndDragNDrop,\n  ChonkyActions.MoveFiles,\n  ChonkyActions.ChangeSelection,\n  ChonkyActions.OpenFiles,\n  ChonkyActions.OpenParentFolder,\n  ChonkyActions.OpenFileContextMenu,\n];\n\nexport const DefaultFileActions = [\n  ChonkyActions.OpenSelection,\n  ChonkyActions.SelectAllFiles,\n  ChonkyActions.ClearSelection,\n  ChonkyActions.EnableListView,\n  // TODO: Don't enable until compact view is fully supported\n  // ChonkyActions.EnableCompactView,\n  ChonkyActions.EnableGridView,\n  ChonkyActions.SortFilesByName,\n  ChonkyActions.SortFilesBySize,\n  ChonkyActions.SortFilesByDate,\n  ChonkyActions.ToggleHiddenFiles,\n  ChonkyActions.ToggleShowFoldersFirst,\n  ChonkyActions.FocusSearchInput,\n];\n","import { ChonkyActions } from '../action-definitions/index';\nimport { RootState } from '../types/redux.types';\nimport { SortOrder } from '../types/sort.types';\n\nexport const initialRootState: RootState = {\n  instanceId: 'CHONKY_INVALID_ID', // should be overwritten by preloaded state\n\n  externalFileActionHandler: null,\n\n  rawFileActions: [],\n  fileActionsErrorMessages: [],\n  fileActionMap: {},\n  fileActionIds: [],\n  toolbarItems: [],\n  contextMenuItems: [],\n\n  rawFolderChain: null,\n  folderChainErrorMessages: [],\n  folderChain: [],\n\n  rawFiles: [],\n  filesErrorMessages: [],\n  fileMap: {},\n  fileIds: [],\n  cleanFileIds: [],\n\n  sortedFileIds: [],\n  hiddenFileIdMap: {},\n\n  focusSearchInput: null,\n  searchString: '',\n  searchMode: 'currentFolder',\n\n  selectionMap: {},\n  disableSelection: false,\n\n  fileViewConfig: ChonkyActions.EnableGridView.fileViewConfig,\n\n  sortActionId: null,\n  sortOrder: SortOrder.ASC,\n\n  optionMap: {},\n\n  thumbnailGenerator: null,\n  doubleClickDelay: 300,\n  disableDragAndDrop: false,\n  clearSelectionOnOutsideClick: true,\n  forceEnableOpenParent: false,\n  hideToolbarInfo: false,\n\n  lastClick: null,\n\n  contextMenuMounted: false,\n  contextMenuConfig: null,\n};\n","import { Nilable, Nullable } from 'tsdef';\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { GenericFileActionHandler } from '../types/action-handler.types';\nimport { FileActionMenuItem } from '../types/action-menus.types';\nimport { FileAction, FileActionMap } from '../types/action.types';\nimport { ContextMenuConfig } from '../types/context-menu.types';\nimport { FileViewConfig } from '../types/file-view.types';\nimport { FileArray, FileIdTrueMap, FileMap } from '../types/file.types';\nimport { OptionMap } from '../types/options.types';\nimport { RootState } from '../types/redux.types';\nimport { SortOrder } from '../types/sort.types';\nimport { ThumbnailGenerator } from '../types/thumbnails.types';\nimport { FileHelper } from '../util/file-helper';\nimport { sanitizeInputArray } from './files-transforms';\nimport { initialRootState } from './state';\n\nconst reducers = {\n  setExternalFileActionHandler(state: RootState, action: PayloadAction<Nilable<GenericFileActionHandler<FileAction>>>) {\n    state.externalFileActionHandler = action.payload ?? null;\n  },\n  setRawFileActions(state: RootState, action: PayloadAction<FileAction[] | any>) {\n    state.rawFileActions = action.payload;\n  },\n  setFileActionsErrorMessages(state: RootState, action: PayloadAction<string[]>) {\n    state.fileActionsErrorMessages = action.payload;\n  },\n  setFileActions(state: RootState, action: PayloadAction<FileAction[]>) {\n    const fileActionMap: FileActionMap = {};\n    action.payload.map((a) => (fileActionMap[a.id] = a));\n    const fileIds = action.payload.map((a) => a.id);\n\n    state.fileActionMap = fileActionMap as FileMap;\n    state.fileActionIds = fileIds;\n  },\n  updateFileActionMenuItems(state: RootState, action: PayloadAction<[FileActionMenuItem[], FileActionMenuItem[]]>) {\n    [state.toolbarItems, state.contextMenuItems] = action.payload;\n  },\n  setRawFolderChain(state: RootState, action: PayloadAction<FileArray | any>) {\n    const rawFolderChain = action.payload;\n    const { sanitizedArray: folderChain, errorMessages } = sanitizeInputArray('folderChain', rawFolderChain);\n    state.rawFolderChain = rawFolderChain;\n    state.folderChain = folderChain;\n    state.folderChainErrorMessages = errorMessages;\n  },\n  setRawFiles(state: RootState, action: PayloadAction<FileArray | any>) {\n    const rawFiles = action.payload;\n    const { sanitizedArray: files, errorMessages } = sanitizeInputArray('files', rawFiles);\n    state.rawFiles = rawFiles;\n    state.filesErrorMessages = errorMessages;\n\n    const fileMap: FileMap = {};\n    files.forEach((f) => {\n      if (f) fileMap[f.id] = f;\n    });\n    const fileIds = files.map((f) => (f ? f.id : null));\n    const cleanFileIds = fileIds.filter((f) => !!f) as string[];\n\n    state.fileMap = fileMap;\n    state.fileIds = fileIds;\n    state.cleanFileIds = cleanFileIds;\n\n    // Cleanup selection\n    for (const selectedFileId of Object.keys(state.selectionMap)) {\n      if (!fileMap[selectedFileId]) {\n        delete state.selectionMap[selectedFileId];\n      }\n    }\n  },\n  setSortedFileIds(state: RootState, action: PayloadAction<Nullable<string>[]>) {\n    state.sortedFileIds = action.payload;\n  },\n  setHiddenFileIds(state: RootState, action: PayloadAction<FileIdTrueMap>) {\n    state.hiddenFileIdMap = action.payload;\n\n    // Cleanup selection\n    for (const selectedFileId of Object.keys(state.selectionMap)) {\n      if (state.hiddenFileIdMap[selectedFileId]) {\n        delete state.selectionMap[selectedFileId];\n      }\n    }\n  },\n  setFocusSearchInput(state: RootState, action: PayloadAction<Nullable<() => void>>) {\n    state.focusSearchInput = action.payload;\n  },\n  setSearchString(state: RootState, action: PayloadAction<string>) {\n    state.searchString = action.payload;\n  },\n  selectAllFiles(state: RootState) {\n    state.fileIds\n      .filter((id) => id && FileHelper.isSelectable(state.fileMap[id]))\n      .map((id) => (id ? (state.selectionMap[id] = true) : null));\n  },\n  selectFiles(state: RootState, action: PayloadAction<{ fileIds: string[]; reset: boolean }>) {\n    if (state.disableSelection) return;\n    if (action.payload.reset) state.selectionMap = {};\n    action.payload.fileIds\n      .filter((id) => id && FileHelper.isSelectable(state.fileMap[id]))\n      .map((id) => (state.selectionMap[id] = true));\n  },\n  toggleSelection(state: RootState, action: PayloadAction<{ fileId: string; exclusive: boolean }>) {\n    if (state.disableSelection) return;\n    const oldValue = !!state.selectionMap[action.payload.fileId];\n    if (action.payload.exclusive) state.selectionMap = {};\n    if (oldValue) delete state.selectionMap[action.payload.fileId];\n    else if (FileHelper.isSelectable(state.fileMap[action.payload.fileId])) {\n      state.selectionMap[action.payload.fileId] = true;\n    }\n  },\n  clearSelection(state: RootState) {\n    if (state.disableSelection) return;\n    if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n  },\n  setSelectionDisabled(state: RootState, action: PayloadAction<boolean>) {\n    state.disableSelection = action.payload;\n    if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n  },\n  setFileViewConfig(state: RootState, action: PayloadAction<FileViewConfig>) {\n    state.fileViewConfig = action.payload;\n  },\n  setSort(state: RootState, action: PayloadAction<{ actionId: string; order: SortOrder }>) {\n    state.sortActionId = action.payload.actionId;\n    state.sortOrder = action.payload.order;\n  },\n  setOptionDefaults(state: RootState, action: PayloadAction<OptionMap>) {\n    for (const optionId of Object.keys(action.payload)) {\n      if (optionId in state.optionMap) continue;\n      state.optionMap[optionId] = action.payload[optionId];\n    }\n  },\n  toggleOption(state: RootState, action: PayloadAction<string>) {\n    state.optionMap[action.payload] = !state.optionMap[action.payload];\n  },\n  setThumbnailGenerator(state: RootState, action: PayloadAction<Nullable<ThumbnailGenerator>>) {\n    state.thumbnailGenerator = action.payload;\n  },\n  setDoubleClickDelay(state: RootState, action: PayloadAction<number>) {\n    state.doubleClickDelay = action.payload;\n  },\n  setDisableDragAndDrop(state: RootState, action: PayloadAction<boolean>) {\n    state.disableDragAndDrop = action.payload;\n  },\n  setForceEnableOpenParent(state: RootState, action: PayloadAction<boolean>) {\n    state.forceEnableOpenParent = action.payload;\n  },\n  setHideToolbarInfo(state: RootState, action: PayloadAction<boolean>) {\n    state.hideToolbarInfo = action.payload;\n  },\n  setClearSelectionOnOutsideClick(state: RootState, action: PayloadAction<boolean>) {\n    state.clearSelectionOnOutsideClick = action.payload;\n  },\n  setLastClickIndex(state: RootState, action: PayloadAction<Nullable<{ index: number; fileId: string }>>) {\n    state.lastClick = action.payload;\n  },\n  setContextMenuMounted(state: RootState, action: PayloadAction<boolean>) {\n    state.contextMenuMounted = action.payload;\n  },\n  showContextMenu(state: RootState, action: PayloadAction<ContextMenuConfig>) {\n    state.contextMenuConfig = action.payload;\n  },\n  hideContextMenu(state: RootState) {\n    if (!state.contextMenuConfig) return;\n    state.contextMenuConfig = null;\n  },\n};\n\nexport const { actions: reduxActions, reducer: rootReducer } = createSlice({\n  name: 'root',\n  initialState: initialRootState,\n  reducers,\n});\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport { RootState } from '../types/redux.types';\nimport { useStaticValue } from '../util/hooks-helpers';\nimport { rootReducer } from './reducers';\nimport { initialRootState } from './state';\nimport { useStoreWatchers } from './watchers';\n\nexport const useChonkyStore = (chonkyInstanceId: string) => {\n  const store = useStaticValue(() => {\n    const preloadedState: RootState = {\n      ...initialRootState,\n      instanceId: chonkyInstanceId,\n    };\n\n    return configureStore({\n      preloadedState: preloadedState as any,\n      reducer: rootReducer,\n      middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({\n          serializableCheck: false,\n        }),\n      devTools: { name: `chonky_${chonkyInstanceId}` },\n    });\n  });\n  useStoreWatchers(store);\n  return store;\n};\n\n/**\n * Hook that can be used with parametrized selectors.\n */\nexport const useParamSelector = <Args extends Array<any>, Value>(\n  parametrizedSelector: (...args: Args) => (state: RootState) => Value,\n  ...selectorParams: Args\n) => {\n  const selector = useCallback(\n    (state: RootState) => parametrizedSelector(...selectorParams)(state),\n    // eslint-disable-next-line\n    [parametrizedSelector, ...selectorParams],\n  );\n  return useSelector(selector);\n};\n\n/**\n * DTE - DispatchThunkEffect. This method is used to decrease code duplication in\n * main Chonky method.\n */\nexport const useDTE = <Args extends Array<any>>(actionCreator: (...args: Args) => any, ...selectorParams: Args) => {\n  const dispatch = useDispatch();\n  useEffect(\n    () => {\n      dispatch(actionCreator(...selectorParams));\n    },\n    // eslint-disable-next-line\n    [dispatch, actionCreator, ...selectorParams],\n  );\n};\n\nexport const usePropReduxUpdate = <Payload extends any>(actionCreator: (payload: Payload) => any, payload: Payload) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(actionCreator(payload));\n  }, [dispatch, actionCreator, payload]);\n};\n","import { useEffect } from 'react';\nimport watch from 'redux-watch';\n\nimport { Store } from '@reduxjs/toolkit';\n\nimport { ChonkyActions } from '../action-definitions';\nimport { RootState } from '../types/redux.types';\nimport { FileSelection } from '../types/selection.types';\nimport { selectSelectedFileIds, selectSelectionMap } from './selectors';\nimport { thunkRequestFileAction } from './thunks/dispatchers.thunks';\n\nexport const useStoreWatchers = (store: Store<RootState>) => {\n  useEffect(() => {\n    const selectionWatcher = watch(() => selectSelectionMap(store.getState()));\n    const onSelectionChange = (newSelection: FileSelection, oldSelection: FileSelection) => {\n      // We don't check for deep equality here as we expect the\n      // reducers to prevent all unnecessary updates.\n      if (newSelection === oldSelection) return;\n\n      // Notify users the selection has changed.\n      const selectedFilesIds = selectSelectedFileIds(store.getState());\n      const selection = new Set<string>(selectedFilesIds);\n      store.dispatch(\n        thunkRequestFileAction(ChonkyActions.ChangeSelection, {\n          selection,\n        }) as any,\n      );\n    };\n\n    const unsubscribeCallbacks = [store.subscribe(selectionWatcher(onSelectionChange))];\n    return () => {\n      for (const unsubscribe of unsubscribeCallbacks) unsubscribe();\n    };\n  }, [store]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { ChonkyIconProps } from '../../types/icons.types';\n\nexport const ChonkyIconPlaceholder: React.FC<ChonkyIconProps> = () => {\n  // This component should not be rendered unless the user has misconfigured Chonky\n  const title =\n    'No icon component found. Please follow Chonky installation instructions to ' +\n    'provide a pre-made icon component (or a custom icon).';\n  return <span title={title}>⚠️</span>;\n};\n","import { ChonkyActions } from '../action-definitions/index';\nimport { ChonkyIconPlaceholder } from '../components/internal/ChonkyIconPlaceholder';\nimport { FileBrowserProps } from '../types/file-browser.types';\n\nexport type ChonkyConfig = Pick<\n  FileBrowserProps,\n  | 'fileActions'\n  | 'onFileAction'\n  | 'thumbnailGenerator'\n  | 'doubleClickDelay'\n  | 'disableSelection'\n  | 'disableDefaultFileActions'\n  | 'hideToolbarInfo'\n  | 'forceEnableOpenParent'\n  | 'disableDragAndDrop'\n  | 'disableDragAndDropProvider'\n  | 'defaultSortActionId'\n  | 'defaultFileViewActionId'\n  | 'clearSelectionOnOutsideClick'\n  | 'iconComponent'\n  | 'darkMode'\n  | 'i18n'\n>;\n\nexport const defaultConfig: ChonkyConfig = {\n  fileActions: null,\n  onFileAction: null,\n  thumbnailGenerator: null,\n  doubleClickDelay: 300,\n  disableSelection: false,\n  disableDefaultFileActions: false,\n  forceEnableOpenParent: false,\n  hideToolbarInfo: false,\n  disableDragAndDrop: false,\n  disableDragAndDropProvider: false,\n  defaultSortActionId: ChonkyActions.SortFilesByName.id,\n  defaultFileViewActionId: ChonkyActions.EnableListView.id,\n  clearSelectionOnOutsideClick: true,\n  iconComponent: ChonkyIconPlaceholder,\n  darkMode: false,\n  i18n: {},\n};\n\nexport const setChonkyDefaults = (config: Partial<ChonkyConfig>) => {\n  for (const key of Object.keys(defaultConfig)) {\n    if (key in config) {\n      defaultConfig[key as keyof ChonkyConfig] = config[key as keyof ChonkyConfig] as any;\n    }\n  }\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2019\n * @license MIT\n */\n\nimport { createContext, ElementType, useMemo } from 'react';\n\nimport ExactTrie from 'exact-trie';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyIconPlaceholder } from '../components/internal/ChonkyIconPlaceholder';\nimport { FileData } from '../types/file.types';\nimport { ChonkyIconName, ChonkyIconProps, FileIconData } from '../types/icons.types';\n\nexport const ChonkyIconContext = createContext<ElementType<ChonkyIconProps>>(ChonkyIconPlaceholder);\n\nexport const VideoExtensions: string[] = [\n  '3g2',\n  '3gp',\n  '3gpp',\n  'asf',\n  'asx',\n  'avi',\n  'dvb',\n  'f4v',\n  'fli',\n  'flv',\n  'fvt',\n  'h261',\n  'h263',\n  'h264',\n  'jpgm',\n  'jpgv',\n  'jpm',\n  'm1v',\n  'm2v',\n  'm4u',\n  'm4v',\n  'mj2',\n  'mjp2',\n  'mk3d',\n  'mks',\n  'mkv',\n  'mng',\n  'mov',\n  'movie',\n  'mp4',\n  'mp4v',\n  'mpe',\n  'mpeg',\n  'mpg',\n  'mpg4',\n  'mxu',\n  'ogv',\n  'pyv',\n  'qt',\n  'smv',\n  'ts',\n  'uvh',\n  'uvm',\n  'uvp',\n  'uvs',\n  'uvu',\n  'uvv',\n  'uvvh',\n  'uvvm',\n  'uvvp',\n  'uvvs',\n  'uvvu',\n  'uvvv',\n  'viv',\n  'vob',\n  'webm',\n  'wm',\n  'wmv',\n  'wmx',\n  'wvx',\n];\nexport const ImageExtensions: string[] = [\n  '3ds',\n  'apng',\n  'azv',\n  'bmp',\n  'bmp',\n  'btif',\n  'cgm',\n  'cmx',\n  'djv',\n  'djvu',\n  'drle',\n  'dwg',\n  'dxf',\n  'emf',\n  'exr',\n  'fbs',\n  'fh',\n  'fh4',\n  'fh5',\n  'fh7',\n  'fhc',\n  'fits',\n  'fpx',\n  'fst',\n  'g3',\n  'gif',\n  'heic',\n  'heics',\n  'heif',\n  'heifs',\n  'ico',\n  'ico',\n  'ief',\n  'jls',\n  'jng',\n  'jp2',\n  'jpe',\n  'jpeg',\n  'jpf',\n  'jpg',\n  'jpg2',\n  'jpm',\n  'jpx',\n  'jxr',\n  'ktx',\n  'mdi',\n  'mmr',\n  'npx',\n  'pbm',\n  'pct',\n  'pcx',\n  'pcx',\n  'pgm',\n  'pic',\n  'png',\n  'pnm',\n  'ppm',\n  'psd',\n  'pti',\n  'ras',\n  'rgb',\n  'rlc',\n  'sgi',\n  'sid',\n  'sub',\n  'svg',\n  'svgz',\n  't38',\n  'tap',\n  'tfx',\n  'tga',\n  'tif',\n  'tiff',\n  'uvg',\n  'uvi',\n  'uvvg',\n  'uvvi',\n  'vtf',\n  'wbmp',\n  'wdp',\n  'webp',\n  'wmf',\n  'xbm',\n  'xif',\n  'xpm',\n  'xwd',\n];\nexport const AudioExtensions: string[] = [\n  '3gpp',\n  'aac',\n  'adp',\n  'aif',\n  'aifc',\n  'aiff',\n  'au',\n  'caf',\n  'dra',\n  'dts',\n  'dtshd',\n  'ecelp4800',\n  'ecelp7470',\n  'ecelp9600',\n  'eol',\n  'flac',\n  'kar',\n  'lvp',\n  'm2a',\n  'm3a',\n  'm3u',\n  'm4a',\n  'm4a',\n  'mid',\n  'midi',\n  'mka',\n  'mp2',\n  'mp2a',\n  'mp3',\n  'mp3',\n  'mp4a',\n  'mpga',\n  'oga',\n  'ogg',\n  'pya',\n  'ra',\n  'ra',\n  'ram',\n  'rip',\n  'rmi',\n  'rmp',\n  's3m',\n  'sil',\n  'snd',\n  'spx',\n  'uva',\n  'uvva',\n  'wav',\n  'wav',\n  'wav',\n  'wax',\n  'weba',\n  'wma',\n  'xm',\n];\nexport const ColorsLight: string[] = [\n  '#bbbbbb',\n  '#d65c5c',\n  '#d6665c',\n  '#d6705c',\n  '#d67a5c',\n  '#d6855c',\n  '#d68f5c',\n  '#d6995c',\n  '#d6a35c',\n  '#d6ad5c',\n  '#d6b85c',\n  '#d6c25c',\n  '#d6cc5c',\n  '#d6d65c',\n  '#ccd65c',\n  '#c2d65c',\n  '#b8d65c',\n  '#add65c',\n  '#a3d65c',\n  '#99d65c',\n  '#8fd65c',\n  '#85d65c',\n  '#7ad65c',\n  '#70d65c',\n  '#66d65c',\n  '#5cd65c',\n  '#5cd666',\n  '#5cd670',\n  '#5cd67a',\n  '#5cd685',\n  '#5cd68f',\n  '#5cd699',\n  '#5cd6a3',\n  '#5cd6ad',\n  '#5cd6b8',\n  '#5cd6c2',\n  '#5cd6cc',\n  '#5cd6d6',\n  '#5cccd6',\n  '#5cc2d6',\n  '#5cb8d6',\n  '#5cadd6',\n  '#5ca3d6',\n  '#5c99d6',\n  '#5c8fd6',\n  '#5c85d6',\n  '#5c7ad6',\n  '#5c70d6',\n  '#5c66d6',\n  '#5c5cd6',\n  '#665cd6',\n  '#705cd6',\n  '#7a5cd6',\n  '#855cd6',\n  '#8f5cd6',\n  '#995cd6',\n  '#a35cd6',\n  '#ad5cd6',\n  '#b85cd6',\n  '#c25cd6',\n  '#cc5cd6',\n  '#d65cd6',\n  '#d65ccc',\n  '#d65cc2',\n  '#d65cb8',\n  '#d65cad',\n  '#d65ca3',\n  '#d65c99',\n  '#d65c8f',\n  '#d65c85',\n  '#d65c7a',\n  '#d65c70',\n  '#d65c66',\n];\nexport const ColorsDark: string[] = [\n  '#777',\n  '#8f3d3d',\n  '#8f443d',\n  '#8f4b3d',\n  '#8f523d',\n  '#8f583d',\n  '#8f5f3d',\n  '#8f663d',\n  '#8f6d3d',\n  '#8f743d',\n  '#8f7a3d',\n  '#8f813d',\n  '#8f883d',\n  '#8f8f3d',\n  '#888f3d',\n  '#818f3d',\n  '#7a8f3d',\n  '#748f3d',\n  '#6d8f3d',\n  '#668f3d',\n  '#5f8f3d',\n  '#588f3d',\n  '#528f3d',\n  '#4b8f3d',\n  '#448f3d',\n  '#3d8f3d',\n  '#3d8f44',\n  '#3d8f4b',\n  '#3d8f52',\n  '#3d8f58',\n  '#3d8f5f',\n  '#3d8f66',\n  '#3d8f6d',\n  '#3d8f74',\n  '#3d8f7a',\n  '#3d8f81',\n  '#3d8f88',\n  '#3d8f8f',\n  '#3d888f',\n  '#3d818f',\n  '#3d7a8f',\n  '#3d748f',\n  '#3d6d8f',\n  '#3d668f',\n  '#3d5f8f',\n  '#3d588f',\n  '#3d528f',\n  '#3d4b8f',\n  '#3d448f',\n  '#3d3d8f',\n  '#443d8f',\n  '#4b3d8f',\n  '#523d8f',\n  '#583d8f',\n  '#5f3d8f',\n  '#663d8f',\n  '#6d3d8f',\n  '#743d8f',\n  '#7a3d8f',\n  '#813d8f',\n  '#883d8f',\n  '#8f3d8f',\n  '#8f3d88',\n  '#8f3d81',\n  '#8f3d7a',\n  '#8f3d74',\n  '#8f3d6d',\n  '#8f3d66',\n  '#8f3d5f',\n  '#8f3d58',\n  '#8f3d52',\n  '#8f3d4b',\n  '#8f3d44',\n];\n\nconst getIconTrie = () => {\n  let colourIndex = 0;\n  const step = 5;\n\n  const IconsToExtensions = [\n    // Generic file types\n    [ChonkyIconName.license, ['license']],\n    [ChonkyIconName.config, ['sfk', 'ini', 'yml', 'toml', 'iml']],\n    [ChonkyIconName.model, ['3ds', 'obj', 'ply', 'fbx']],\n    [ChonkyIconName.database, ['csv', 'json', 'sql', 'sqlite', 'sqlite3', 'npy', 'npz', 'rec', 'idx', 'hdf5']],\n    [ChonkyIconName.text, ['txt', 'md', 'mdx']],\n    [ChonkyIconName.archive, ['zip', 'rar', 'tar', 'tar.gz', '7z']],\n    [ChonkyIconName.image, ImageExtensions],\n    [ChonkyIconName.video, VideoExtensions],\n    [ChonkyIconName.code, ['html', 'php', 'css', 'sass', 'scss', 'less', 'cpp', 'h', 'hpp', 'c', 'xml']],\n    [ChonkyIconName.info, ['bib', 'readme', 'nfo']],\n    [ChonkyIconName.key, ['pem', 'pub']],\n    [ChonkyIconName.lock, ['lock', 'lock.json', 'shrinkwrap.json']],\n    [ChonkyIconName.music, AudioExtensions],\n    [ChonkyIconName.terminal, ['run', 'sh']],\n    [ChonkyIconName.trash, ['.Trashes']],\n    [ChonkyIconName.users, ['authors', 'contributors']],\n\n    // OS file types\n    [ChonkyIconName.linux, ['AppImage']],\n    [ChonkyIconName.ubuntu, ['deb']],\n    [ChonkyIconName.windows, ['exe']],\n\n    // Programming language file types\n    [ChonkyIconName.rust, ['rs', 'rlib']],\n    [ChonkyIconName.python, ['py', 'ipynb']],\n    [ChonkyIconName.nodejs, ['js', 'jsx', 'ts', 'tsx', 'd.ts']],\n    [ChonkyIconName.php, ['php']],\n\n    // Development tools file types\n    [ChonkyIconName.git, ['.gitignore']],\n\n    // Other program file types\n    [ChonkyIconName.pdf, ['pdf']],\n    [ChonkyIconName.excel, ['xls', 'xlsx']],\n    [ChonkyIconName.word, ['doc', 'docx', 'odt']],\n    [ChonkyIconName.flash, ['swf']],\n  ] as const;\n\n  const exactTrie = new ExactTrie({ ignoreCase: true });\n  for (const pair of IconsToExtensions) {\n    const [icon, extensions] = pair;\n\n    for (let i = 0; i < extensions.length; ++i) {\n      colourIndex += step;\n      const colorCode = (colourIndex % (ColorsLight.length - 1)) + 1;\n      const iconData: FileIconData = {\n        icon,\n        colorCode,\n      };\n      exactTrie.put(extensions[i], iconData, true);\n    }\n  }\n\n  return exactTrie;\n};\n\nconst iconTrie = getIconTrie();\n\nexport const useIconData = (file: Nullable<FileData>): FileIconData => {\n  return useMemo(() => {\n    if (!file) return { icon: ChonkyIconName.loading, colorCode: 0 };\n    if (file.isDir === true) return { icon: ChonkyIconName.folder, colorCode: 0 };\n\n    const match = iconTrie.getWithCheckpoints(file.name, '.', true);\n    return match ? match : { icon: ChonkyIconName.file, colorCode: 32 };\n  }, [file]);\n};\n","import { Theme as MuiTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { DeepPartial } from 'tsdef';\n\nexport const lightTheme = {\n  colors: {\n    debugRed: '#fabdbd',\n    debugBlue: '#bdd8fa',\n    debugGreen: '#d2fabd',\n    debugPurple: '#d2bdfa',\n    debugYellow: '#fae9bd',\n\n    textActive: '#09f',\n  },\n\n  fontSizes: {\n    rootPrimary: 15,\n  },\n\n  margins: {\n    rootLayoutMargin: 8,\n  },\n\n  root: {\n    borderRadius: 4,\n    borderStyle: 'solid 1px',\n    height: '100%',\n  },\n\n  toolbar: {\n    size: 30,\n    lineHeight: '30px', // `px` suffix is required for `line-height` fields to work\n    buttonPadding: 8,\n    fontSize: 15,\n    buttonRadius: 4,\n  },\n\n  dnd: {\n    canDropColor: 'green',\n    cannotDropColor: 'red',\n    canDropMask: 'rgba(180, 235, 180, 0.75)',\n    cannotDropMask: 'rgba(235, 180, 180, 0.75)',\n    fileListCanDropMaskOne: 'rgba(180, 235, 180, 0.1)',\n    fileListCanDropMaskTwo: 'rgba(180, 235, 180, 0.2)',\n    fileListCannotDropMaskOne: 'rgba(235, 180, 180, 0.1)',\n    fileListCannotDropMaskTwo: 'rgba(235, 180, 180, 0.2)',\n  },\n\n  dragLayer: {\n    border: 'solid 2px #09f',\n    padding: '7px 10px',\n    borderRadius: 2,\n  },\n\n  fileList: {\n    desktopGridGutter: 8,\n    mobileGridGutter: 5,\n  },\n\n  gridFileEntry: {\n    childrenCountSize: '1.6em',\n    iconColorFocused: '#000',\n    iconSize: '2.4em',\n    iconColor: '#fff',\n    borderRadius: 5,\n    fontSize: 14,\n\n    fileColorTint: 'rgba(255, 255, 255, 0.4)',\n    folderBackColorTint: 'rgba(255, 255, 255, 0.1)',\n    folderFrontColorTint: 'rgba(255, 255, 255, 0.4)',\n  },\n\n  listFileEntry: {\n    propertyFontSize: 14,\n    iconFontSize: '1.1em',\n    iconBorderRadius: 5,\n    fontSize: 14,\n  },\n};\n\nexport type ChonkyTheme = typeof lightTheme;\n\nexport const darkThemeOverride: DeepPartial<ChonkyTheme> = {\n  gridFileEntry: {\n    fileColorTint: 'rgba(50, 50, 50, 0.4)',\n    folderBackColorTint: 'rgba(50, 50, 50, 0.4)',\n    folderFrontColorTint: 'rgba(50, 50, 50, 0.15)',\n  },\n};\n\nexport const mobileThemeOverride: DeepPartial<ChonkyTheme> = {\n  fontSizes: {\n    rootPrimary: 13,\n  },\n  margins: {\n    rootLayoutMargin: 4,\n  },\n  toolbar: {\n    size: 28,\n    lineHeight: '28px',\n    fontSize: 13,\n  },\n  gridFileEntry: {\n    fontSize: 13,\n  },\n  listFileEntry: {\n    propertyFontSize: 12,\n    iconFontSize: '1em',\n    fontSize: 13,\n  },\n};\n\nexport const useIsMobileBreakpoint = () => {\n  return useMediaQuery('(max-width:480px)');\n};\n\nexport const getStripeGradient = (colorOne: string, colorTwo: string) =>\n  'repeating-linear-gradient(' +\n  '45deg,' +\n  `${colorOne},` +\n  `${colorOne} 10px,` +\n  `${colorTwo} 0,` +\n  `${colorTwo} 20px` +\n  ')';\n\nexport const makeLocalChonkyStyles = <C extends string = string>(\n  styles: (theme: ChonkyTheme & MuiTheme) => any,\n  // @ts-ignore\n): any => createUseStyles<ChonkyTheme, C>(styles);\n\nexport const makeGlobalChonkyStyles = <C extends string = string>(\n  makeStyles: (theme: ChonkyTheme & MuiTheme) => any,\n) => {\n  const selectorMapping = {};\n  const makeGlobalStyles = (theme: ChonkyTheme) => {\n    const localStyles = makeStyles(theme as any);\n    const globalStyles = {};\n    const localSelectors = Object.keys(localStyles);\n    localSelectors.map((localSelector) => {\n      const globalSelector = `chonky-${localSelector}`;\n      const jssSelector = `@global .${globalSelector}`;\n      // @ts-ignore\n      globalStyles[jssSelector] = localStyles[localSelector];\n      // @ts-ignore\n      selectorMapping[localSelector] = globalSelector;\n    });\n    return globalStyles;\n  };\n\n  // @ts-ignore\n  const useStyles = createUseStyles<ChonkyTheme, C>(makeGlobalStyles as any);\n  return (...args: any[]): any => {\n    const styles = useStyles(...args);\n    const classes = {};\n    Object.keys(selectorMapping).map((localSelector) => {\n      // @ts-ignore\n      classes[localSelector] = selectorMapping[localSelector];\n    });\n    return { ...classes, ...styles };\n  };\n};\n\nexport const important = <T>(value: T) => [value, '!important'];\n\nexport const c: (...args: classNames.ArgumentArray) => string = classnames.default;\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { initialRootState } from '../../redux/state';\nimport { useDTE, usePropReduxUpdate } from '../../redux/store';\nimport {\n  thunkActivateSortAction,\n  thunkUpdateDefaultFileViewActionId,\n  thunkUpdateRawFileActions,\n} from '../../redux/thunks/file-actions.thunks';\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { defaultConfig } from '../../util/default-config';\nimport { useFileBrowserHandle } from '../../util/file-browser-handle';\nimport { getValueOrFallback } from '../../util/helpers';\n\nexport const ChonkyBusinessLogicInner = React.memo(\n  React.forwardRef<FileBrowserHandle, FileBrowserProps>((props, ref) => {\n    // ==== Update Redux state\n    usePropReduxUpdate(reduxActions.setRawFiles, props.files ?? initialRootState.rawFiles);\n    usePropReduxUpdate(reduxActions.setRawFolderChain, props.folderChain);\n    useDTE(\n      thunkUpdateRawFileActions,\n      getValueOrFallback(props.fileActions, defaultConfig.fileActions),\n      getValueOrFallback(props.disableDefaultFileActions, defaultConfig.disableDefaultFileActions),\n    );\n    useDTE(\n      reduxActions.setExternalFileActionHandler,\n      getValueOrFallback(props.onFileAction, defaultConfig.onFileAction) as any,\n    );\n    useDTE(\n      reduxActions.setSelectionDisabled,\n      getValueOrFallback(props.disableSelection, defaultConfig.disableSelection, 'boolean'),\n    );\n    useDTE(thunkActivateSortAction, getValueOrFallback(props.defaultSortActionId, defaultConfig.defaultSortActionId));\n    useDTE(\n      thunkUpdateDefaultFileViewActionId,\n      getValueOrFallback(props.defaultFileViewActionId, defaultConfig.defaultFileViewActionId, 'string'),\n    );\n\n    useDTE(\n      reduxActions.setThumbnailGenerator,\n      getValueOrFallback(props.thumbnailGenerator, defaultConfig.thumbnailGenerator),\n    );\n    useDTE(\n      reduxActions.setDoubleClickDelay,\n      getValueOrFallback(props.doubleClickDelay, defaultConfig.doubleClickDelay, 'number'),\n    );\n    useDTE(\n      reduxActions.setForceEnableOpenParent,\n      getValueOrFallback(props.forceEnableOpenParent, defaultConfig.forceEnableOpenParent, 'boolean'),\n    );\n    useDTE(\n      reduxActions.setHideToolbarInfo,\n      getValueOrFallback(props.hideToolbarInfo, defaultConfig.hideToolbarInfo, 'boolean'),\n    );\n    useDTE(\n      reduxActions.setDisableDragAndDrop,\n      getValueOrFallback(props.disableDragAndDrop, defaultConfig.disableDragAndDrop, 'boolean'),\n    );\n    useDTE(\n      reduxActions.setClearSelectionOnOutsideClick,\n      getValueOrFallback(props.clearSelectionOnOutsideClick, defaultConfig.clearSelectionOnOutsideClick, 'boolean'),\n    );\n\n    // ==== Setup the imperative handle for external use\n    useFileBrowserHandle(ref);\n\n    return null;\n  }),\n);\nChonkyBusinessLogicInner.displayName = 'ChonkyBusinessLogicInner';\n\nexport const ChonkyBusinessLogic = React.memo(ChonkyBusinessLogicInner);\nChonkyBusinessLogic.displayName = 'ChonkyBusinessLogic';\n","import React, { useImperativeHandle } from 'react';\nimport { useDispatch, useStore } from 'react-redux';\n\nimport { reduxActions } from '../redux/reducers';\nimport { selectSelectionMap } from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { FileAction } from '../types/action.types';\nimport { FileBrowserHandle } from '../types/file-browser.types';\nimport { ChonkyDispatch, RootState } from '../types/redux.types';\n\nexport const useFileBrowserHandle = (ref: React.Ref<FileBrowserHandle>) => {\n  const store = useStore<RootState>();\n  const dispatch: ChonkyDispatch = useDispatch();\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      getFileSelection(): Set<string> {\n        const selectionMap = selectSelectionMap(store.getState());\n        const selectionSet = new Set(Object.keys(selectionMap));\n        return selectionSet;\n      },\n      setFileSelection(selection, reset = true): void {\n        const fileIds = Array.from(selection);\n        dispatch(reduxActions.selectFiles({ fileIds, reset }));\n      },\n      async requestFileAction<Action extends FileAction>(\n        action: Action,\n        payload: Action['__payloadType'],\n      ): Promise<void> {\n        return Promise.resolve(dispatch(thunkRequestFileAction(action, payload)));\n      },\n    }),\n    [store, dispatch],\n  );\n};\n","import { useCallback, useContext } from 'react';\nimport { DndContext, useDrag, useDrop } from 'react-dnd';\n\nexport const useDndContextAvailable = () => {\n  const dndContext = useContext(DndContext);\n  const { dragDropManager } = dndContext;\n  return !!dragDropManager;\n};\n\nexport const useDragIfAvailable: typeof useDrag = (...args) => {\n  // This is an ugly hack to make `useDrag` not throw if a `DndContext` is not available.\n  // See: https://github.com/react-dnd/react-dnd/issues/2212\n  const dndContextAvailable = useDndContextAvailable();\n  const mockHook = useCallback(() => [{} as any, () => null, () => null], []);\n  // @ts-ignore\n  const useHook: typeof useDrag = dndContextAvailable ? useDrag : mockHook;\n  return useHook(...args);\n};\n\nexport const useDropIfAvailable: typeof useDrop = (...args) => {\n  const dndContextAvailable = useDndContextAvailable();\n  const mockHook = useCallback(() => [{} as any, () => null], []);\n  // @ts-ignore\n  const useHook: typeof useDrop = dndContextAvailable ? useDrop : mockHook;\n  return useHook(...args);\n};\n","import { Nilable } from 'tsdef';\n\nimport { StartDragNDropPayload } from './action-payloads.types';\nimport { FileData } from './file.types';\n\nexport interface ChonkyDndDropResult {\n  dropTarget: Nilable<FileData> | any;\n  dropEffect: 'move' | 'copy';\n}\n\n// any: used to be DragObjectWithType (removed from react-dnd)\nexport type ChonkyDndFileEntryItem = any & {\n  payload: StartDragNDropPayload;\n};\nexport const ChonkyDndFileEntryType = 'dnd-chonky-file-entry';\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { useDragLayer } from 'react-dnd';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyDndFileEntryItem, ChonkyDndFileEntryType } from '../../types/dnd.types';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface DnDFileListDragLayerProps {}\n\nconst layerStyles: React.CSSProperties = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%',\n};\nconst getItemStyles = (\n  initialCursorOffset: Nullable<{ x: number; y: number }>,\n  initialFileOffset: Nullable<{ x: number; y: number }>,\n  currentFileOffset: Nullable<{ x: number; y: number }>,\n) => {\n  if (!initialCursorOffset || !initialFileOffset || !currentFileOffset) {\n    return {\n      display: 'none',\n    };\n  }\n  const x = initialCursorOffset.x + (currentFileOffset.x - initialFileOffset.x);\n  const y = initialCursorOffset.y + (currentFileOffset.y - initialFileOffset.y);\n  const transform = `translate(${x}px, ${y}px)`;\n  return {\n    transform,\n    WebkitTransform: transform,\n  };\n};\n\nexport const DnDFileListDragLayer: React.FC<DnDFileListDragLayerProps> = () => {\n  const classes = useStyles();\n\n  const { itemType, item, initialCursorOffset, initialFileOffset, currentFileOffset, isDragging } = useDragLayer(\n    (monitor) => ({\n      item: monitor.getItem() as ChonkyDndFileEntryItem,\n      itemType: monitor.getItemType(),\n      initialCursorOffset: monitor.getInitialClientOffset(),\n      initialFileOffset: monitor.getInitialSourceClientOffset(),\n      currentFileOffset: monitor.getSourceClientOffset(),\n      isDragging: monitor.isDragging(),\n    }),\n  );\n  if (!isDragging || itemType !== ChonkyDndFileEntryType || !item.payload) {\n    return null;\n  }\n\n  const selectionSize = item.payload.selectedFiles.length;\n  return (\n    <div style={layerStyles}>\n      <div style={getItemStyles(initialCursorOffset, initialFileOffset, currentFileOffset)}>\n        <div className={classes.fileDragPreview}>\n          <b>{item.payload.draggedFile.name}</b>\n          {selectionSize > 1 && (\n            <>\n              {' and '}\n              <strong>\n                {selectionSize - 1} other file\n                {selectionSize - 1 !== 1 ? 's' : ''}\n              </strong>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeGlobalChonkyStyles((theme) => ({\n  fileDragPreview: {\n    boxShadow: `2px 2px 5px ${theme.palette.divider}`,\n    backgroundColor: theme.palette.background.default,\n    borderRadius: theme.dragLayer.borderRadius,\n    fontSize: theme.fontSizes.rootPrimary,\n    color: theme.palette.text.primary,\n    padding: theme.dragLayer.padding,\n    border: theme.dragLayer.border,\n    display: 'inline-block',\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport hotkeys from 'hotkeys-js';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { ChonkyDispatch } from '../../types/redux.types';\n\nexport interface HotkeyListenerProps {\n  fileActionId: string;\n}\n\nexport const HotkeyListener: React.FC<HotkeyListenerProps> = React.memo((props) => {\n  const { fileActionId } = props;\n\n  const dispatch: ChonkyDispatch = useDispatch();\n  const fileAction = useParamSelector(selectFileActionData, fileActionId);\n\n  useEffect(() => {\n    if (!fileAction || !fileAction.hotkeys || fileAction.hotkeys.length === 0) {\n      return;\n    }\n\n    const hotkeysStr = fileAction.hotkeys.join(',');\n    const hotkeyCallback = (event: KeyboardEvent) => {\n      event.preventDefault();\n      dispatch(thunkRequestFileAction(fileAction, undefined));\n    };\n    hotkeys(hotkeysStr, hotkeyCallback);\n    return () => hotkeys.unbind(hotkeysStr, hotkeyCallback);\n  }, [dispatch, fileAction]);\n\n  return null;\n});\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Box from '@mui/material/Box';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { selectClearSelectionOnOutsideClick, selectFileActionIds, selectIsDnDDisabled } from '../../redux/selectors';\nimport { ChonkyDispatch } from '../../types/redux.types';\nimport { useDndContextAvailable } from '../../util/dnd-fallback';\nimport { elementIsInsideButton } from '../../util/helpers';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { useContextMenuTrigger } from '../external/FileContextMenu-hooks';\nimport { DnDFileListDragLayer } from '../file-list/DnDFileListDragLayer';\nimport { HotkeyListener } from './HotkeyListener';\n\nexport interface ChonkyPresentationLayerProps {\n  children?: React.ReactNode;\n}\n\nexport const ChonkyPresentationLayer: React.FC<ChonkyPresentationLayerProps> = ({ children }) => {\n  const dispatch: ChonkyDispatch = useDispatch();\n  const fileActionIds = useSelector(selectFileActionIds);\n  const dndDisabled = useSelector(selectIsDnDDisabled);\n  const clearSelectionOnOutsideClick = useSelector(selectClearSelectionOnOutsideClick);\n\n  // Deal with clicks outside of Chonky\n  const handleClickAway = useCallback(\n    (event: MouseEvent | TouchEvent) => {\n      if (!clearSelectionOnOutsideClick || elementIsInsideButton(event.target)) {\n        // We only clear out the selection on outside click if the click target\n        // was not a button. We don't want to clear out the selection when a\n        // button is clicked because Chonky users might want to trigger some\n        // selection-related action on that button click.\n        return;\n      }\n      dispatch(reduxActions.clearSelection());\n    },\n    [dispatch, clearSelectionOnOutsideClick],\n  );\n\n  // Generate necessary components\n  const hotkeyListenerComponents = useMemo(\n    () =>\n      fileActionIds.map((actionId) => (\n        <HotkeyListener key={`file-action-listener-${actionId}`} fileActionId={actionId} />\n      )),\n    [fileActionIds],\n  );\n\n  const dndContextAvailable = useDndContextAvailable();\n  const showContextMenu = useContextMenuTrigger();\n\n  const classes = useStyles();\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <Box className={classes.chonkyRoot} onContextMenu={showContextMenu}>\n        {!dndDisabled && dndContextAvailable && <DnDFileListDragLayer />}\n        {hotkeyListenerComponents}\n        {children ? children : null}\n      </Box>\n    </ClickAwayListener>\n  );\n};\n\nconst useStyles = makeGlobalChonkyStyles((theme) => ({\n  chonkyRoot: {\n    backgroundColor: theme.palette.background.paper,\n    border: theme.root.borderStyle ? `${theme.root.borderStyle} ${theme.palette.divider}` : undefined,\n    padding: theme.margins.rootLayoutMargin,\n    fontSize: theme.fontSizes.rootPrimary,\n    color: theme.palette.text.primary,\n    touchAction: 'manipulation', // Disabling zoom on double tap\n    fontFamily: 'sans-serif',\n    flexDirection: 'column',\n    boxSizing: 'border-box',\n    textAlign: 'left',\n    borderRadius: theme.root.borderRadius,\n    display: 'flex',\n    height: theme.root.height,\n\n    // Disabling select\n    webkitTouchCallout: 'none',\n    webkitUserSelect: 'none',\n    mozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none',\n  },\n}));\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { reduxActions } from '../../redux/reducers';\nimport { selectContextMenuMounted } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { ChonkyDispatch } from '../../types/redux.types';\nimport { findElementAmongAncestors } from '../../util/helpers';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\n\nexport const findClosestChonkyFileId = (element: HTMLElement | any): Nullable<string> => {\n  const fileEntryWrapperDiv = findElementAmongAncestors(\n    element,\n    (element: any) =>\n      element.tagName && element.tagName.toLowerCase() === 'div' && element.dataset && element.dataset.chonkyFileId,\n  );\n  return fileEntryWrapperDiv ? fileEntryWrapperDiv.dataset.chonkyFileId! : null;\n};\n\nexport const useContextMenuTrigger = () => {\n  const dispatch: ChonkyDispatch = useDispatch();\n  const contextMenuMountedRef = useInstanceVariable(useSelector(selectContextMenuMounted));\n  return useCallback(\n    (event: React.MouseEvent<HTMLDivElement>) => {\n      // Use default browser context menu when Chonky context menu component\n      // is not mounted.\n      if (!contextMenuMountedRef.current) return;\n      // Users can use Alt+Right Click to bring up browser's default\n      // context menu instead of Chonky's context menu.\n      if (event.altKey) return;\n\n      event.preventDefault();\n\n      const triggerFileId = findClosestChonkyFileId(event.target);\n      dispatch(\n        thunkRequestFileAction(ChonkyActions.OpenFileContextMenu, {\n          clientX: event.clientX,\n          clientY: event.clientY,\n          triggerFileId,\n        }),\n      );\n    },\n    [contextMenuMountedRef, dispatch],\n  );\n};\n\nexport const useContextMenuDismisser = () => {\n  const dispatch: ChonkyDispatch = useDispatch();\n  return useCallback(() => dispatch(reduxActions.hideContextMenu()), [dispatch]);\n};\n","import merge from 'deepmerge';\nimport React, { ReactNode, useMemo } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { IntlProvider } from 'react-intl';\nimport { ThemeProvider } from 'react-jss';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport shortid from 'shortid';\nimport {\n  createTheme,\n  ThemeProvider as MuiThemeProvider,\n  StyledEngineProvider,\n  ThemeOptions,\n} from '@mui/material/styles';\n\nimport { useChonkyStore } from '../../redux/store';\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { defaultConfig } from '../../util/default-config';\nimport { getValueOrFallback } from '../../util/helpers';\nimport { useStaticValue } from '../../util/hooks-helpers';\nimport { ChonkyFormattersContext, defaultFormatters } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { darkThemeOverride, lightTheme, mobileThemeOverride, useIsMobileBreakpoint } from '../../util/styles';\nimport { ChonkyBusinessLogic } from '../internal/ChonkyBusinessLogic';\nimport { ChonkyIconPlaceholder } from '../internal/ChonkyIconPlaceholder';\nimport { ChonkyPresentationLayer } from '../internal/ChonkyPresentationLayer';\n\n// if (process.env.NODE_ENV === 'development') {\n//     const whyDidYouRender = require('@welldone-software/why-did-you-render');\n//     whyDidYouRender(React, {\n//         trackAllPureComponents: true,\n//     });\n// }\n\nexport const FileBrowser = React.forwardRef<FileBrowserHandle, FileBrowserProps & { children?: ReactNode }>(\n  (props, ref) => {\n    const { instanceId, iconComponent, children } = props;\n    const disableDragAndDrop = getValueOrFallback(\n      props.disableDragAndDrop,\n      defaultConfig.disableDragAndDrop,\n      'boolean',\n    );\n    const disableDragAndDropProvider = getValueOrFallback(\n      props.disableDragAndDropProvider,\n      defaultConfig.disableDragAndDropProvider,\n      'boolean',\n    );\n    const darkMode = getValueOrFallback(props.darkMode, defaultConfig.darkMode, 'boolean');\n    const i18n = getValueOrFallback(props.i18n, defaultConfig.i18n);\n    const formatters = useMemo(() => ({ ...defaultFormatters, ...i18n?.formatters }), [i18n]);\n\n    const chonkyInstanceId = useStaticValue(() => instanceId ?? shortid.generate());\n    const store = useChonkyStore(chonkyInstanceId);\n\n    const isMobileBreakpoint = useIsMobileBreakpoint();\n    const theme = useMemo(() => {\n      let muiOptions: ThemeOptions = {\n        palette: { mode: darkMode ? 'dark' : 'light' },\n      };\n      if (props.muiThemeOptions) {\n        muiOptions = merge(muiOptions, props.muiThemeOptions);\n      }\n      const muiTheme = createTheme(muiOptions);\n      const combinedTheme = merge(\n        muiTheme,\n        merge(merge(lightTheme, darkMode ? darkThemeOverride : {}), props.theme || {}),\n      );\n      return isMobileBreakpoint ? merge(combinedTheme, mobileThemeOverride) : combinedTheme;\n    }, [darkMode, isMobileBreakpoint]);\n\n    const chonkyComps = (\n      <>\n        <ChonkyBusinessLogic ref={ref} {...props} />\n        <ChonkyPresentationLayer>{children}</ChonkyPresentationLayer>\n      </>\n    );\n\n    return (\n      <IntlProvider locale=\"en\" defaultLocale=\"en\" {...i18n}>\n        <ChonkyFormattersContext.Provider value={formatters}>\n          <ReduxProvider store={store}>\n            <ThemeProvider theme={theme}>\n              <StyledEngineProvider injectFirst>\n                <MuiThemeProvider theme={theme}>\n                  <ChonkyIconContext.Provider\n                    value={iconComponent ?? defaultConfig.iconComponent ?? ChonkyIconPlaceholder}\n                  >\n                    {disableDragAndDrop || disableDragAndDropProvider ? (\n                      chonkyComps\n                    ) : (\n                      <DndProvider backend={HTML5Backend}>{chonkyComps}</DndProvider>\n                    )}\n                  </ChonkyIconContext.Provider>\n                </MuiThemeProvider>\n              </StyledEngineProvider>\n            </ThemeProvider>\n          </ReduxProvider>\n        </ChonkyFormattersContext.Provider>\n      </IntlProvider>\n    );\n  },\n);\nFileBrowser.displayName = 'FileBrowser';\n","import { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectFolderChain } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { FileData } from '../../types/file.types';\nimport { ChonkyDispatch } from '../../types/redux.types';\nimport { FileHelper } from '../../util/file-helper';\n\nexport interface FolderChainItem {\n  file: Nullable<FileData>;\n  disabled: boolean;\n  onClick?: () => void;\n}\n\nexport const useFolderChainItems = (): FolderChainItem[] => {\n  const folderChain = useSelector(selectFolderChain);\n  const dispatch: ChonkyDispatch = useDispatch();\n\n  const folderChainItems = useMemo(() => {\n    const items: FolderChainItem[] = [];\n    if (!folderChain) return items;\n\n    for (let i = 0; i < folderChain.length; ++i) {\n      const file = folderChain[i];\n      items.push({\n        file,\n        disabled: !file,\n        onClick:\n          !FileHelper.isOpenable(file) || i === folderChain.length - 1\n            ? undefined\n            : () =>\n                dispatch(\n                  thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                    targetFile: file,\n                    files: [file],\n                  }),\n                ),\n      });\n    }\n    return items;\n  }, [dispatch, folderChain]);\n  return folderChainItems;\n};\n","import { MaybePromise, Nullable } from 'tsdef';\n\nimport { FileActionState } from './action-handler.types';\nimport { FileViewConfig } from './file-view.types';\nimport { FileFilter, FileMap } from './file.types';\nimport { ChonkyIconName } from './icons.types';\nimport { ChonkyDispatch, RootState } from './redux.types';\nimport { FileSortKeySelector } from './sort.types';\n\nexport interface FileAction {\n  /**\n   * Unique file action ID. If you set the action ID to one of the built-in Chonky\n   * action action IDs, you custom action definition will override the built-in\n   * definition.\n   */\n  id: string;\n  /**\n   * When set to `true`, the action will only be active (dispatchable) when user\n   * selects one or more files. If `fileFilter` is defined, it will be applied to\n   * selection before checking if its empty.\n   */\n  requiresSelection?: boolean; // Requires selection of 1+ files\n  /**\n   * A predicate that determines whether a file should be included in the selection\n   * for this action.\n   */\n  fileFilter?: FileFilter;\n  /**\n   * List of hotkeys that should trigger this action, defined using `hotkey-js`\n   * notation.\n   * @see https://www.npmjs.com/package/hotkeys-js\n   */\n  hotkeys?: string[] | readonly string[];\n  /**\n   * When button is defined and `toolbar` or `contextMenu` is set to `true`, a\n   * button will be added to the relevant UI component. Clicking on this button\n   * will active this action. The appearance of the button will change based on\n   * the action definition and the current Chonky state.\n   */\n  button?: FileActionButton;\n  /**\n   * When `sortKeySelector` is specified, the action becomes a sorting toggle. When\n   * this action is activated, it will sort files using the key selector, toggling\n   * between Ascending and Descending orders.\n   */\n  sortKeySelector?: FileSortKeySelector;\n  /**\n   * When `fileViewConfig` is specified, triggering this action will apply the\n   * provided config to Chonky's file view.\n   */\n  fileViewConfig?: FileViewConfig;\n  /**\n   * When `option` is specified, the action becomes an option toggle. When the action\n   * is activated, the boolean value of the option will be toggled.\n   */\n  option?: FileActionOption;\n  /**\n   * When selection transform is defined, activating this action will update the file\n   * selection. If the transform function returns `null`, selection will be left\n   * untouched.\n   */\n  selectionTransform?: FileSelectionTransform;\n  /**\n   * When effect is defined, it will be called right before dispatching the action to\n   * the user defined action handler. If the effect function returns a promise, Chonky\n   * will wait for the promise to resolve or fail before dispatching the action to the\n   * handler. If this function returns `true`, the file action will NOT be dispatched\n   * the the handler.\n   */\n  effect?: FileActionEffect;\n  /**\n   * When customVisibility is defined, it will change the display state of the file action\n   * The function must return the visibility as one of the CustomVisibilityState values:\n   *  - Hidden\n   *  - Disabled\n   *  - Default\n   *  - Active\n   */\n  customVisibility?: () => CustomVisibilityState;\n  /**\n   * Field used to infer the type of action payload. It is used solely for Typescript\n   * type inference and action validation.\n   */\n  __payloadType?: any;\n  /**\n   * Field used to infer the type of extra state for this action. It is used solely\n   * for Typescript type inference and action validation.\n   */\n  __extraStateType?: any;\n}\n\nexport interface FileActionButton {\n  name: string; // Button name\n  toolbar?: boolean; // Whether to show the button in the toolbar\n  contextMenu?: boolean; // Whether to show the button in the context menu\n  group?: string; // Button group (dropdown in toolbar or section in context menu)\n  tooltip?: string; // Help tooltip text\n  icon?: ChonkyIconName | string | any; // Icon name\n  iconOnly?: boolean; // Whether to only display the icon\n}\n\nexport interface FileActionOption {\n  id: string; // Unique option ID\n  defaultValue: boolean; // Whether the option is enabled by default (required)\n}\n\nexport type FileSelectionTransform = (data: {\n  prevSelection: Set<string>;\n  fileIds: ReadonlyArray<string>;\n  fileMap: Readonly<FileMap>;\n  hiddenFileIds: Set<string>;\n}) => Nullable<Set<string>>;\n\nexport type FileActionEffect<Action extends FileAction = any> = (data: {\n  action: Action;\n  payload: Action['__payloadType'];\n  state: FileActionState<{}>; // extra state is empty on purpose\n  reduxDispatch: ChonkyDispatch;\n  getReduxState: () => RootState;\n}) => MaybePromise<undefined | boolean | void>;\n\nexport type FileActionMap = { [actonId: string]: FileAction };\n\nexport enum CustomVisibilityState {\n  Hidden,\n  Disabled,\n  Default,\n  Active,\n}\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { DragSourceMonitor, DropTargetMonitor } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { ExcludeKeys, Nullable } from 'tsdef';\n\nimport { EssentialActions } from '../action-definitions/essential';\nimport { ChonkyActions } from '../action-definitions/index';\nimport { selectCurrentFolder, selectFolderChain, selectInstanceId, selectSelectedFiles } from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { StartDragNDropPayload } from '../types/action-payloads.types';\nimport { ChonkyDndDropResult, ChonkyDndFileEntryItem, ChonkyDndFileEntryType } from '../types/dnd.types';\nimport { DndEntryState } from '../types/file-list.types';\nimport { FileData } from '../types/file.types';\nimport { ChonkyDispatch, ChonkyStore, RootState } from '../types/redux.types';\nimport { useDragIfAvailable, useDropIfAvailable } from './dnd-fallback';\nimport { FileHelper } from './file-helper';\nimport { useInstanceVariable } from './hooks-helpers';\n\nexport const useFileDrag = (file: Nullable<FileData>) => {\n  // Prepare the dnd payload\n  const store: ChonkyStore = useStore<RootState>();\n  const fileRef = useInstanceVariable(file);\n  const getDndStartPayload = useCallback<() => StartDragNDropPayload>(() => {\n    const reduxState = store.getState();\n    return {\n      sourceInstanceId: selectInstanceId(reduxState),\n      source: selectCurrentFolder(reduxState),\n      // We force non-null type below because by convention, if drag & drop for\n      // this file was possible, it must have been non-null.\n      draggedFile: fileRef.current!,\n      selectedFiles: selectSelectedFiles(reduxState),\n    };\n  }, [store, fileRef]);\n\n  // For drag source\n  const dispatch: ChonkyDispatch = useDispatch();\n  const canDrag = useCallback(() => FileHelper.isDraggable(fileRef.current), [fileRef]);\n  const onDragStart = useCallback((): ChonkyDndFileEntryItem => {\n    const item: ChonkyDndFileEntryItem = {\n      type: ChonkyDndFileEntryType,\n      payload: getDndStartPayload(),\n    };\n    dispatch(thunkRequestFileAction(ChonkyActions.StartDragNDrop, item.payload));\n    return item;\n  }, [dispatch, getDndStartPayload]);\n  const onDragEnd = useCallback(\n    (item: ChonkyDndFileEntryItem, monitor: DragSourceMonitor) => {\n      const dropResult = monitor.getDropResult() as ChonkyDndDropResult;\n      if (!FileHelper.isDraggable(item.payload.draggedFile) || !dropResult || !dropResult.dropTarget) {\n        return;\n      }\n\n      dispatch(\n        thunkRequestFileAction(ChonkyActions.EndDragNDrop, {\n          ...item.payload,\n          destination: dropResult.dropTarget,\n          copy: dropResult.dropEffect === 'copy',\n        }),\n      );\n    },\n    [dispatch],\n  );\n\n  // Create refs for react-dnd hooks\n  const collect = useCallback((monitor: DragSourceMonitor) => ({ isDragging: monitor.isDragging() }), []);\n  const [{ isDragging: dndIsDragging }, drag, preview] = useDragIfAvailable({\n    item: onDragStart,\n    type: ChonkyDndFileEntryType,\n    canDrag,\n    // @ts-ignore\n    end: onDragEnd,\n    collect,\n  });\n\n  useEffect(() => {\n    // Set drag preview to an empty image because `DnDFileListDragLayer` will\n    // provide its own preview.\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, [preview]);\n\n  return { dndIsDragging, drag };\n};\n\ninterface UseFileDropParams {\n  file: Nullable<FileData>;\n  forceDisableDrop?: boolean;\n  includeChildrenDrops?: boolean;\n}\n\nexport const useFileDrop = ({ file, forceDisableDrop, includeChildrenDrops }: UseFileDropParams) => {\n  const folderChainRef = useInstanceVariable(useSelector(selectFolderChain));\n  const onDrop = useCallback(\n    (_item: ChonkyDndFileEntryItem, monitor: DropTargetMonitor) => {\n      if (!monitor.canDrop()) return;\n      const customDropResult: ExcludeKeys<ChonkyDndDropResult, 'dropEffect'> = {\n        dropTarget: file,\n      };\n      return customDropResult;\n    },\n    [file],\n  );\n  const canDrop = useCallback(\n    (item: ChonkyDndFileEntryItem, monitor: DropTargetMonitor) => {\n      if (\n        forceDisableDrop ||\n        !FileHelper.isDroppable(file) ||\n        (!monitor.isOver({ shallow: true }) && !includeChildrenDrops)\n      ) {\n        return false;\n      }\n      const { source, draggedFile, selectedFiles } = item.payload;\n\n      // We prevent folders from being dropped into themselves. We also prevent\n      // any folder from current folder chain being moved - we can't move the\n      // folder that we are currently in.\n      const prohibitedFileIds = new Set<string>();\n      prohibitedFileIds.add(file.id);\n      folderChainRef.current.map((folder) => {\n        if (folder) prohibitedFileIds.add(folder.id);\n      });\n      const movedFiles: FileData[] = [draggedFile, ...selectedFiles];\n      for (const currFile of movedFiles) {\n        if (prohibitedFileIds.has(currFile.id)) return false;\n      }\n\n      // Finally, prohibit files from being moved into their parent folder\n      // (which is a no-op).\n      return file.id !== source?.id;\n    },\n    [forceDisableDrop, file, includeChildrenDrops, folderChainRef],\n  );\n  const collect = useCallback(\n    (monitor: DropTargetMonitor) => ({\n      isOver: monitor.isOver(),\n      isOverCurrent: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop(),\n    }),\n    [],\n  );\n  const [{ isOver: dndIsOver, isOverCurrent: dndIsOverCurrent, canDrop: dndCanDrop }, drop] = useDropIfAvailable({\n    accept: ChonkyDndFileEntryType,\n    drop: onDrop,\n    canDrop,\n    collect,\n  });\n  return { dndIsOver, dndIsOverCurrent, dndCanDrop, drop };\n};\n\nexport const useFileEntryDnD = (file: Nullable<FileData>) => {\n  const { dndIsDragging, drag } = useFileDrag(file);\n  const { dndIsOver, dndCanDrop, drop } = useFileDrop({ file });\n  const dndState = useMemo<DndEntryState>(\n    () => ({\n      dndIsDragging,\n      dndIsOver,\n      dndCanDrop,\n    }),\n    [dndCanDrop, dndIsDragging, dndIsOver],\n  );\n  return {\n    drop,\n    drag,\n    dndState,\n  };\n};\n\nexport const useDndHoverOpen = (file: Nullable<FileData>, dndState: DndEntryState) => {\n  const dispatch: ChonkyDispatch = useDispatch();\n  const currentFolderRef = useInstanceVariable(useSelector(selectCurrentFolder));\n  useEffect(() => {\n    let timeout: Nullable<any> = null;\n    if (dndState.dndIsOver && FileHelper.isDndOpenable(file) && file.id !== currentFolderRef.current?.id) {\n      timeout = setTimeout(\n        () =>\n          dispatch(\n            thunkRequestFileAction(EssentialActions.OpenFiles, {\n              targetFile: file,\n              files: [file],\n            }),\n          ),\n        // TODO: Make this timeout configurable\n        1500,\n      );\n    }\n    return () => {\n      if (timeout) clearTimeout(timeout);\n    };\n  }, [dispatch, file, dndState.dndIsOver, currentFolderRef]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { makeLocalChonkyStyles } from '../../util/styles';\n\nexport interface TextPlaceholderProps {\n  minLength: number;\n  maxLength: number;\n}\n\nconst getRandomInt = (min: number, max: number) => {\n  return min + Math.floor(Math.random() * Math.floor(max - min));\n};\nexport const TextPlaceholder: React.FC<TextPlaceholderProps> = React.memo((props) => {\n  const { minLength, maxLength } = props;\n\n  const placeholderLength = getRandomInt(minLength, maxLength);\n  const whitespace = '&nbsp;'.repeat(placeholderLength);\n\n  const classes = useStyles();\n  return <span className={classes.textPlaceholder} dangerouslySetInnerHTML={{ __html: whitespace }} />;\n});\n\nconst useStyles = makeLocalChonkyStyles(() => ({\n  '@keyframes loading-placeholder': {\n    '0%': { opacity: 0.2 },\n    '50%': { opacity: 0.4 },\n    '100%': { opacity: 0.2 },\n  },\n  textPlaceholder: {\n    animationName: '$loading-placeholder',\n    animationIterationCount: 'infinite',\n    animationTimingFunction: 'linear',\n    animationDuration: '1.5s',\n    backgroundColor: '#ccc',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    borderRadius: 4,\n    maxWidth: '40%',\n    minWidth: 20,\n  },\n}));\n","import React, { HTMLProps, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable, Undefinable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectThumbnailGenerator } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { DndEntryState } from '../../types/file-list.types';\nimport { FileData } from '../../types/file.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { ChonkyDispatch } from '../../types/redux.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { ChonkyIconContext, ColorsDark, ColorsLight, useIconData } from '../../util/icon-helper';\nimport { Logger } from '../../util/logger';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport { KeyboardClickEvent, MouseClickEvent } from '../internal/ClickableWrapper';\nimport { FileEntryState } from './GridEntryPreview';\n\nexport const useFileEntryHtmlProps = (file: Nullable<FileData>): HTMLProps<HTMLDivElement> => {\n  return useMemo(() => {\n    const dataProps: { [prop: string]: Undefinable<string> } = {\n      'data-test-id': 'file-entry',\n      'data-chonky-file-id': file ? file.id : undefined,\n    };\n\n    return {\n      role: 'listitem',\n      ...dataProps,\n    };\n  }, [file]);\n};\n\nexport const useFileEntryState = (file: Nullable<FileData>, selected: boolean, focused: boolean) => {\n  const iconData = useIconData(file);\n  const { thumbnailUrl, thumbnailLoading } = useThumbnailUrl(file);\n\n  return useMemo<FileEntryState>(() => {\n    const fileColor = thumbnailUrl ? ColorsDark[iconData.colorCode] : ColorsLight[iconData.colorCode];\n    const iconSpin = thumbnailLoading || !file;\n    const icon = thumbnailLoading ? ChonkyIconName.loading : iconData.icon;\n\n    return {\n      childrenCount: FileHelper.getChildrenCount(file),\n      icon: file && file.icon !== undefined ? file.icon : icon,\n      iconSpin: iconSpin,\n      thumbnailUrl: thumbnailUrl,\n      color: file && file.color !== undefined ? file.color : fileColor,\n      selected: selected,\n      focused: !!focused,\n    };\n  }, [file, focused, iconData, selected, thumbnailLoading, thumbnailUrl]);\n};\n\nexport const useDndIcon = (dndState: DndEntryState) => {\n  let dndIconName: Nullable<ChonkyIconName> = null;\n  if (dndState.dndIsOver) {\n    const showDropIcon = dndState.dndCanDrop;\n    dndIconName = showDropIcon ? ChonkyIconName.dndCanDrop : ChonkyIconName.dndCannotDrop;\n  } else if (dndState.dndIsDragging) {\n    dndIconName = ChonkyIconName.dndDragging;\n  }\n\n  return dndIconName;\n};\n\nexport const useModifierIconComponents = (file: Nullable<FileData>) => {\n  const modifierIcons: ChonkyIconName[] = useMemo(() => {\n    const modifierIcons: ChonkyIconName[] = [];\n    if (FileHelper.isHidden(file)) modifierIcons.push(ChonkyIconName.hidden);\n    if (FileHelper.isSymlink(file)) modifierIcons.push(ChonkyIconName.symlink);\n    if (FileHelper.isEncrypted(file)) modifierIcons.push(ChonkyIconName.lock);\n    return modifierIcons;\n  }, [file]);\n  const ChonkyIcon = useContext(ChonkyIconContext);\n  const modifierIconComponents = useMemo(\n    () => modifierIcons.map((icon, index) => <ChonkyIcon key={`file-modifier-${index}`} icon={icon} />),\n    // For some reason ESLint marks `ChonkyIcon` as an unnecessary dependency,\n    // but we expect it can change at runtime so we disable the check.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [ChonkyIcon, modifierIcons],\n  );\n  return modifierIconComponents;\n};\n\nconst _extname = (fileName: string) => {\n  const parts = fileName.split('.');\n  if (parts.length) {\n    return `.${parts[parts.length - 1]}`;\n  }\n  return '';\n};\n\nexport const useFileNameComponent = (file: Nullable<FileData>) => {\n  return useMemo(() => {\n    if (!file) return <TextPlaceholder minLength={15} maxLength={20} />;\n\n    let name;\n    let extension = null;\n\n    const isDir = FileHelper.isDirectory(file as FileData);\n    if (isDir) {\n      name = file.name;\n    } else {\n      extension = file.ext ?? _extname(file.name);\n      name = file.name.substring(0, file.name.length - extension.length);\n    }\n\n    return (\n      <>\n        {name}\n        {extension && <span className=\"chonky-file-entry-description-title-extension\">{extension}</span>}\n      </>\n    );\n  }, [file]);\n};\n\nexport const useThumbnailUrl = (file: Nullable<FileData>) => {\n  const thumbnailGenerator = useSelector(selectThumbnailGenerator);\n  const [thumbnailUrl, setThumbnailUrl] = useState<Nullable<string>>(null);\n  const [thumbnailLoading, setThumbnailLoading] = useState<boolean>(false);\n  const loadingAttempts = useRef(0);\n\n  useEffect(() => {\n    let loadingCancelled = false;\n\n    if (file) {\n      if (thumbnailGenerator) {\n        if (loadingAttempts.current === 0) {\n          setThumbnailLoading(true);\n        }\n        loadingAttempts.current++;\n        Promise.resolve()\n          .then(() => thumbnailGenerator(file))\n          .then((thumbnailUrl: any) => {\n            if (loadingCancelled) return;\n            setThumbnailLoading(false);\n\n            if (thumbnailUrl && typeof thumbnailUrl === 'string') {\n              setThumbnailUrl(thumbnailUrl);\n            }\n          })\n          .catch((error) => {\n            if (!loadingCancelled) setThumbnailLoading(false);\n            Logger.error(`User-defined \"thumbnailGenerator\" handler threw an error: ${error.message}`);\n          });\n      } else if (file.thumbnailUrl) {\n        setThumbnailUrl(file.thumbnailUrl);\n      }\n    }\n\n    return () => {\n      loadingCancelled = true;\n    };\n  }, [file, setThumbnailUrl, setThumbnailLoading, thumbnailGenerator]);\n\n  return { thumbnailUrl, thumbnailLoading };\n};\n\nexport const useFileClickHandlers = (file: Nullable<FileData>, displayIndex: number) => {\n  const dispatch: ChonkyDispatch = useDispatch();\n\n  // Prepare base handlers\n  const onMouseClick = useCallback(\n    (event: MouseClickEvent, clickType: 'single' | 'double') => {\n      if (!file) return;\n\n      dispatch(\n        thunkRequestFileAction(ChonkyActions.MouseClickFile, {\n          clickType,\n          file,\n          fileDisplayIndex: displayIndex,\n          altKey: event.altKey,\n          ctrlKey: event.ctrlKey,\n          shiftKey: event.shiftKey,\n        }),\n      );\n    },\n    [dispatch, file, displayIndex],\n  );\n  const onKeyboardClick = useCallback(\n    (event: KeyboardClickEvent) => {\n      if (!file) return;\n\n      dispatch(\n        thunkRequestFileAction(ChonkyActions.KeyboardClickFile, {\n          file,\n          fileDisplayIndex: displayIndex,\n          enterKey: event.enterKey,\n          spaceKey: event.spaceKey,\n          altKey: event.altKey,\n          ctrlKey: event.ctrlKey,\n          shiftKey: event.shiftKey,\n        }),\n      );\n    },\n    [dispatch, file, displayIndex],\n  );\n\n  // Prepare single/double click handlers\n  const onSingleClick = useCallback((event: MouseClickEvent) => onMouseClick(event, 'single'), [onMouseClick]);\n  const onDoubleClick = useCallback((event: MouseClickEvent) => onMouseClick(event, 'double'), [onMouseClick]);\n\n  return {\n    onSingleClick,\n    onDoubleClick,\n    onKeyboardClick,\n  };\n};\n","import { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../action-definitions/index';\nimport {\n  selectFileActionData,\n  selectFileViewConfig,\n  selectForceEnableOpenParent,\n  selectOptionValue,\n  selectParentFolder,\n  selectSelectedFilesForActionCount,\n  selectSortActionId,\n  selectSortOrder,\n} from '../redux/selectors';\nimport { useParamSelector } from '../redux/store';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { CustomVisibilityState } from '../types/action.types';\nimport { SortOrder } from '../types/sort.types';\nimport { FileHelper } from './file-helper';\n\nexport const useFileActionTrigger = (fileActionId: string) => {\n  const dispatch: any = useDispatch();\n  const fileAction = useParamSelector(selectFileActionData, fileActionId);\n  return useCallback(() => dispatch(thunkRequestFileAction(fileAction, undefined)), [dispatch, fileAction]);\n};\n\nexport const useFileActionProps = (\n  fileActionId: string,\n): { icon: Nullable<ChonkyIconName | string>; active: boolean; disabled: boolean } => {\n  const parentFolder = useSelector(selectParentFolder);\n  const forceEnableOpenParent = useSelector(selectForceEnableOpenParent);\n  const fileViewConfig = useSelector(selectFileViewConfig);\n\n  const sortActionId = useSelector(selectSortActionId);\n  const sortOrder = useSelector(selectSortOrder);\n\n  const action = useParamSelector(selectFileActionData, fileActionId);\n  // @ts-ignore\n  const optionValue = useParamSelector(selectOptionValue, action?.option?.id);\n\n  const actionSelectionSize = useParamSelector(selectSelectedFilesForActionCount, fileActionId);\n\n  const actionSelectionEmpty = actionSelectionSize === 0;\n\n  return useMemo(() => {\n    if (!action) return { icon: null, active: false, disabled: true };\n\n    let icon = action.button?.icon ?? null;\n    if (action.sortKeySelector) {\n      if (sortActionId === action.id) {\n        if (sortOrder === SortOrder.ASC) {\n          icon = ChonkyIconName.sortAsc;\n        } else {\n          icon = ChonkyIconName.sortDesc;\n        }\n      } else {\n        icon = ChonkyIconName.placeholder;\n      }\n    } else if (action.option) {\n      if (optionValue) {\n        icon = ChonkyIconName.toggleOn;\n      } else {\n        icon = ChonkyIconName.toggleOff;\n      }\n    }\n\n    const isSortButtonAndCurrentSort = action.id === sortActionId;\n    const isFileViewButtonAndCurrentView = action.fileViewConfig === fileViewConfig;\n    const isOptionAndEnabled = action.option ? !!optionValue : false;\n\n    let customDisabled = false;\n    let customActive = false;\n    if (action.customVisibility !== undefined) {\n      customDisabled = action.customVisibility() === CustomVisibilityState.Disabled;\n      customActive = action.customVisibility() === CustomVisibilityState.Active;\n    }\n    const active = isSortButtonAndCurrentSort || isFileViewButtonAndCurrentView || isOptionAndEnabled || customActive;\n\n    let disabled: boolean = (!!action.requiresSelection && actionSelectionEmpty) || customDisabled;\n\n    if (action.id === ChonkyActions.OpenParentFolder.id) {\n      // We treat `open_parent_folder` file action as a special case as it\n      // requires the parent folder to be present to work, unless the\n      // forceOpenParent prop is set, which forces the action to be available.\n      disabled = disabled || (!forceEnableOpenParent && !FileHelper.isOpenable(parentFolder));\n    }\n\n    return { icon, active, disabled };\n  }, [parentFolder, fileViewConfig, sortActionId, sortOrder, action, optionValue, actionSelectionEmpty]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Button from '@mui/material/Button';\nimport React, { useContext } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { CustomVisibilityState } from '../../types/action.types';\nimport { useFileActionProps, useFileActionTrigger } from '../../util/file-actions';\nimport { useLocalizedFileActionStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarButtonProps {\n  className?: string;\n  text: string;\n  tooltip?: string;\n  active?: boolean;\n  icon?: Nullable<ChonkyIconName | string>;\n  iconOnly?: boolean;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  disabled?: boolean;\n  dropdown?: boolean;\n}\n\nexport const ToolbarButton: React.FC<ToolbarButtonProps> = React.memo((props) => {\n  const { className: externalClassName, text, tooltip, active, icon, iconOnly, onClick, disabled, dropdown } = props;\n  const classes = useStyles();\n  const ChonkyIcon = useContext(ChonkyIconContext);\n\n  const iconComponent =\n    icon || iconOnly ? (\n      <div className={iconOnly ? '' : classes.iconWithText}>\n        <ChonkyIcon icon={icon ? icon : ChonkyIconName.fallbackIcon} fixedWidth={true} />\n      </div>\n    ) : null;\n\n  const className = c({\n    [externalClassName ?? '']: true,\n    [classes.baseButton]: true,\n    [classes.iconOnlyButton]: iconOnly,\n    [classes.activeButton]: !!active,\n  });\n  return (\n    <Button className={className} onClick={onClick} title={tooltip ? tooltip : text} disabled={disabled || !onClick}>\n      {iconComponent}\n      {text && !iconOnly && <span>{text}</span>}\n      {dropdown && text && !iconOnly && (\n        <div className={classes.iconDropdown}>\n          <ChonkyIcon icon={ChonkyIconName.dropdown} fixedWidth={true} />\n        </div>\n      )}\n    </Button>\n  );\n});\n\nconst useStyles = makeGlobalChonkyStyles((theme) => ({\n  baseButton: {\n    fontSize: important(theme.toolbar.fontSize),\n    textTransform: important('none'),\n    letterSpacing: important(0),\n    minWidth: important('auto'),\n    lineHeight: theme.toolbar.lineHeight,\n    height: theme.toolbar.size,\n    paddingBottom: important(0),\n    paddingTop: important(0),\n    paddingLeft: theme.toolbar.buttonPadding,\n    paddingRight: theme.toolbar.buttonPadding,\n  },\n  iconWithText: {\n    marginRight: 8,\n  },\n  iconOnlyButton: {\n    width: theme.toolbar.size,\n    textAlign: 'center',\n  },\n  iconDropdown: {\n    fontSize: '0.7em',\n    marginLeft: 2,\n    marginTop: 1,\n  },\n  activeButton: {\n    color: important(theme.colors.textActive),\n  },\n}));\n\nexport interface SmartToolbarButtonProps {\n  fileActionId: string;\n}\n\nexport const SmartToolbarButton: React.FC<SmartToolbarButtonProps> = React.memo((props) => {\n  const { fileActionId } = props;\n\n  const action = useParamSelector(selectFileActionData, fileActionId);\n  const triggerAction = useFileActionTrigger(fileActionId);\n  const { icon, active, disabled } = useFileActionProps(fileActionId);\n  const { buttonName, buttonTooltip } = useLocalizedFileActionStrings(action);\n\n  if (!action) return null;\n  const { button } = action;\n  if (!button) return null;\n  if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden) return null;\n\n  return (\n    <ToolbarButton\n      text={buttonName}\n      tooltip={buttonTooltip}\n      icon={icon}\n      iconOnly={button.iconOnly}\n      active={active}\n      onClick={triggerAction}\n      disabled={disabled}\n    />\n  );\n});\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext, useMemo } from 'react';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useDndHoverOpen, useFileDrop } from '../../util/dnd';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeLocalChonkyStyles } from '../../util/styles';\nimport { useDndIcon } from '../file-list/FileEntry-hooks';\nimport { FolderChainItem } from './FileNavbar-hooks';\nimport { ToolbarButton } from './ToolbarButton';\n\nexport interface FolderChainButtonProps {\n  first: boolean;\n  current: boolean;\n  item: FolderChainItem;\n}\n\nexport const FolderChainButton: React.FC<FolderChainButtonProps> = React.memo(({ first, current, item }) => {\n  const { file, disabled, onClick } = item;\n  const { dndIsOver, dndCanDrop, drop } = useFileDrop({\n    file,\n    forceDisableDrop: !file || current,\n  });\n  const dndState = useMemo<DndEntryState>(\n    () => ({\n      dndIsOver,\n      dndCanDrop,\n      dndIsDragging: false,\n    }),\n    [dndCanDrop, dndIsOver],\n  );\n  useDndHoverOpen(file, dndState);\n  const dndIconName = useDndIcon(dndState);\n  const ChonkyIcon = useContext(ChonkyIconContext);\n\n  const classes = useStyles(dndState);\n  const className = c({\n    [classes.baseBreadcrumb]: true,\n    [classes.disabledBreadcrumb]: disabled,\n    [classes.currentBreadcrumb]: current,\n  });\n  const text = file ? file.name : 'Loading...';\n  const icon = first && file?.folderChainIcon === undefined ? ChonkyIconName.folder : file?.folderChainIcon;\n\n  return (\n    <div className={classes.buttonContainer} ref={file ? drop : null}>\n      {file && dndIconName && (\n        <div className={classes.dndIndicator}>\n          <ChonkyIcon icon={dndIconName} fixedWidth={true} />\n        </div>\n      )}\n      <ToolbarButton icon={icon} className={className} text={text} disabled={disabled} onClick={onClick} />\n    </div>\n  );\n});\n\nconst useStyles = makeLocalChonkyStyles((theme) => ({\n  buttonContainer: {\n    position: 'relative',\n  },\n  baseBreadcrumb: {\n    color: (dndState: DndEntryState) => {\n      let color = theme.palette.text.primary;\n      if (dndState.dndIsOver) {\n        color = dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor;\n      }\n      return important(color);\n    },\n  },\n  disabledBreadcrumb: {\n    // Constant function here is on purpose. Without the function, the color here\n    // does not override the `baseBreadcrumb` color from above.\n    color: () => important(theme.palette.text.disabled),\n  },\n  currentBreadcrumb: {\n    textDecoration: important('underline'),\n  },\n  dndIndicator: {\n    color: (dndState: DndEntryState) => (dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor),\n    backgroundColor: (dndState: DndEntryState) =>\n      dndState.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask,\n    lineHeight: `calc(${theme.toolbar.lineHeight} - 6px)`,\n    transform: 'translateX(-50%) translateY(-50%)',\n    borderRadius: theme.toolbar.buttonRadius,\n    height: theme.toolbar.size - 6,\n    width: theme.toolbar.size - 6,\n    boxSizing: 'border-box',\n    position: 'absolute',\n    textAlign: 'center',\n    left: '50%',\n    top: '50%',\n    zIndex: 5,\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Box from '@mui/material/Box';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport React, { ReactElement, useMemo } from 'react';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { useFolderChainItems } from './FileNavbar-hooks';\nimport { FolderChainButton } from './FolderChainButton';\nimport { SmartToolbarButton } from './ToolbarButton';\n\nexport interface FileNavbarProps {}\n\nexport const FileNavbar: React.FC<FileNavbarProps> = React.memo(() => {\n  const classes = useStyles();\n  const folderChainItems = useFolderChainItems();\n\n  const folderChainComponents = useMemo(() => {\n    const components: ReactElement[] = [];\n    for (let i = 0; i < folderChainItems.length; ++i) {\n      const key = `folder-chain-${i}`;\n      const component = (\n        <FolderChainButton\n          key={key}\n          first={i === 0}\n          current={i === folderChainItems.length - 1}\n          item={folderChainItems[i]}\n        />\n      );\n      components.push(component);\n    }\n    return components;\n  }, [folderChainItems]);\n\n  return (\n    <Box className={classes.navbarWrapper}>\n      <Box className={classes.navbarContainer}>\n        <SmartToolbarButton fileActionId={ChonkyActions.OpenParentFolder.id} />\n        <Breadcrumbs className={classes.navbarBreadcrumbs} classes={{ separator: classes.separator }}>\n          {folderChainComponents}\n        </Breadcrumbs>\n      </Box>\n    </Box>\n  );\n});\n\nconst useStyles = makeGlobalChonkyStyles((theme) => ({\n  navbarWrapper: {\n    paddingBottom: theme.margins.rootLayoutMargin,\n  },\n  navbarContainer: {\n    display: 'flex',\n  },\n  upDirectoryButton: {\n    fontSize: important(theme.toolbar.fontSize),\n    height: theme.toolbar.size,\n    width: theme.toolbar.size,\n    padding: '0px !important',\n  },\n  navbarBreadcrumbs: {\n    fontSize: important(theme.toolbar.fontSize),\n    flexGrow: 100,\n  },\n  separator: {\n    marginRight: important(4),\n    marginLeft: important(4),\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuItem from '@mui/material/MenuItem';\nimport React, { useCallback, useContext } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { CustomVisibilityState } from '../../types/action.types';\nimport { useFileActionProps, useFileActionTrigger } from '../../util/file-actions';\nimport { useLocalizedFileActionStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarDropdownButtonProps {\n  text: string;\n  active?: boolean;\n  icon?: Nullable<ChonkyIconName | string>;\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\nexport const ToolbarDropdownButton = React.forwardRef(\n  (props: ToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n    const { text, active, icon, onClick, disabled } = props;\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n\n    const className = c({\n      [classes.baseButton]: true,\n      [classes.activeButton]: active,\n    });\n    return (\n      <MenuItem ref={ref} className={className} onClick={onClick} disabled={disabled}>\n        {icon && (\n          <ListItemIcon className={classes.icon}>\n            <ChonkyIcon icon={icon} fixedWidth={true} />\n          </ListItemIcon>\n        )}\n        <ListItemText primaryTypographyProps={{ className: classes.text }}>{text}</ListItemText>\n      </MenuItem>\n    );\n  },\n);\n\nconst useStyles = makeGlobalChonkyStyles((theme) => ({\n  baseButton: {\n    lineHeight: important(theme.toolbar.lineHeight),\n    height: important(theme.toolbar.size),\n    minHeight: important('auto'),\n    minWidth: important('auto'),\n    padding: important(theme.toolbar.buttonPadding),\n  },\n  icon: {\n    fontSize: important(theme.toolbar.fontSize),\n    minWidth: important('auto'),\n    color: important('inherit'),\n    marginRight: 8,\n  },\n  text: {\n    fontSize: important(theme.toolbar.fontSize),\n  },\n  activeButton: {\n    color: important(theme.colors.textActive),\n  },\n}));\n\nexport interface SmartToolbarDropdownButtonProps {\n  fileActionId: string;\n  onClickFollowUp?: () => void;\n}\n\nexport const SmartToolbarDropdownButton = React.forwardRef(\n  (props: SmartToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n    const { fileActionId, onClickFollowUp } = props;\n\n    const action = useParamSelector(selectFileActionData, fileActionId);\n    const triggerAction = useFileActionTrigger(fileActionId);\n    const { icon, active, disabled } = useFileActionProps(fileActionId);\n    const { buttonName } = useLocalizedFileActionStrings(action);\n\n    // Combine external click handler with internal one\n    const handleClick = useCallback(() => {\n      triggerAction();\n      if (onClickFollowUp) onClickFollowUp();\n    }, [onClickFollowUp, triggerAction]);\n\n    if (!action) return null;\n    const { button } = action;\n    if (!button) return null;\n    if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden)\n      return null;\n\n    return (\n      <ToolbarDropdownButton\n        ref={ref}\n        text={buttonName}\n        icon={icon}\n        onClick={handleClick}\n        active={active}\n        disabled={disabled}\n      />\n    );\n  },\n);\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Menu from '@mui/material/Menu';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { FileActionGroup } from '../../types/action-menus.types';\nimport { useLocalizedFileActionGroup } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { ToolbarButton, ToolbarButtonProps } from './ToolbarButton';\nimport { SmartToolbarDropdownButton } from './ToolbarDropdownButton';\n\nexport type ToolbarDropdownProps = FileActionGroup;\n\nexport const ToolbarDropdown: React.FC<ToolbarDropdownProps> = React.memo((props) => {\n  const { name, icon, fileActionIds } = props;\n  const [anchor, setAnchor] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => setAnchor(event.currentTarget),\n    [setAnchor],\n  );\n  const handleClose = useCallback(() => setAnchor(null), [setAnchor]);\n\n  const menuItemComponents = useMemo(\n    () =>\n      fileActionIds.map((id) => (\n        <SmartToolbarDropdownButton key={`menu-item-${id}`} fileActionId={id} onClickFollowUp={handleClose} />\n      )),\n    [fileActionIds, handleClose],\n  );\n\n  const localizedName = useLocalizedFileActionGroup(name);\n  const toolbarButtonProps: ToolbarButtonProps = {\n    text: localizedName,\n    onClick: handleClick,\n    dropdown: true,\n  };\n  if (icon) {\n    toolbarButtonProps.icon = icon;\n    toolbarButtonProps.iconOnly = true;\n    toolbarButtonProps.text = '';\n  }\n\n  const classes = useStyles();\n  return (\n    <>\n      <ToolbarButton {...toolbarButtonProps} />\n      <Menu\n        autoFocus\n        keepMounted\n        elevation={2}\n        anchorEl={anchor}\n        onClose={handleClose}\n        open={Boolean(anchor)}\n        transitionDuration={150}\n        classes={{ list: classes.dropdownList }}\n      >\n        {menuItemComponents}\n      </Menu>\n    </>\n  );\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n  dropdownList: {\n    paddingBottom: important(0),\n    paddingTop: important(0),\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport Typography from '@mui/material/Typography';\n\nimport { selectHiddenFileCount, selectors, selectSelectionSize } from '../../redux/selectors';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarInfoProps {}\n\nexport const ToolbarInfo: React.FC<ToolbarInfoProps> = React.memo(() => {\n  const classes = useStyles();\n\n  const displayFileIds = useSelector(selectors.getDisplayFileIds);\n  const selectionSize = useSelector(selectSelectionSize);\n  const hiddenCount = useSelector(selectHiddenFileCount);\n\n  const intl = useIntl();\n  const fileCountString = intl.formatMessage(\n    {\n      id: getI18nId(I18nNamespace.Toolbar, 'visibleFileCount'),\n      defaultMessage: `{fileCount, plural,\n                =0 {# items}\n                one {# item}\n                other {# items}\n            }`,\n    },\n    { fileCount: displayFileIds.length },\n  );\n  const selectedString = intl.formatMessage(\n    {\n      id: getI18nId(I18nNamespace.Toolbar, 'selectedFileCount'),\n      defaultMessage: `{fileCount, plural,\n                =0 {}\n                other {# selected}\n            }`,\n    },\n    { fileCount: selectionSize },\n  );\n  const hiddenString = intl.formatMessage(\n    {\n      id: getI18nId(I18nNamespace.Toolbar, 'hiddenFileCount'),\n      defaultMessage: `{fileCount, plural,\n                =0 {}\n                other {# hidden}\n            }`,\n    },\n    { fileCount: hiddenCount },\n  );\n\n  return (\n    <div className={classes.infoContainer}>\n      <Typography className={classes.infoText} variant=\"body1\">\n        {fileCountString}\n        {(selectedString || hiddenString) && (\n          <span className={classes.extraInfoSpan}>\n            (<span className={classes.selectionSizeText}>{selectedString}</span>\n            {selectedString && hiddenString && ', '}\n            <span className={classes.hiddenCountText}>{hiddenString}</span>)\n          </span>\n        )}\n      </Typography>\n    </div>\n  );\n});\n\nconst useStyles = makeGlobalChonkyStyles((theme) => ({\n  infoContainer: {\n    height: theme.toolbar.size,\n    display: 'flex',\n  },\n  infoText: {\n    lineHeight: important(theme.toolbar.lineHeight),\n    fontSize: important(theme.toolbar.fontSize),\n    marginLeft: important(12),\n    height: theme.toolbar.size,\n  },\n  extraInfoSpan: {\n    marginRight: important(8),\n    marginLeft: important(8),\n    opacity: 0.8,\n  },\n  selectionSizeText: {\n    color: theme.colors.textActive,\n  },\n  hiddenCountText: {},\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { selectSearchString } from '../../redux/selectors';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useDebounce } from '../../util/hooks-helpers';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { ChonkyDispatch } from '../../types/redux.types';\n\nexport interface ToolbarSearchProps {}\n\nexport const ToolbarSearch: React.FC<ToolbarSearchProps> = React.memo(() => {\n  const intl = useIntl();\n  const searchPlaceholderString = intl.formatMessage({\n    id: getI18nId(I18nNamespace.Toolbar, 'searchPlaceholder'),\n    defaultMessage: 'Search',\n  });\n\n  const classes = useStyles();\n  const ChonkyIcon = useContext(ChonkyIconContext);\n\n  const searchInputRef = useRef<HTMLInputElement>();\n\n  const dispatch: ChonkyDispatch = useDispatch();\n  const reduxSearchString = useSelector(selectSearchString);\n\n  const [localSearchString, setLocalSearchString] = useState(reduxSearchString);\n  const [debouncedLocalSearchString] = useDebounce(localSearchString, 50);\n  const [showLoadingIndicator, setShowLoadingIndicator] = useState(false);\n\n  useEffect(() => {\n    dispatch(\n      reduxActions.setFocusSearchInput(() => {\n        if (searchInputRef.current) searchInputRef.current.focus();\n      }),\n    );\n    return () => {\n      dispatch(reduxActions.setFocusSearchInput(null));\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    setShowLoadingIndicator(false);\n    dispatch(reduxActions.setSearchString(debouncedLocalSearchString));\n  }, [debouncedLocalSearchString, dispatch]);\n\n  const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n    setShowLoadingIndicator(true);\n    setLocalSearchString(event.currentTarget.value);\n  }, []);\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      // Remove focus from the search input field when user presses escape.\n      // Note: We use KeyUp instead of KeyPress because some browser plugins can\n      //       intercept KeyPress events with Escape key.\n      //       @see https://stackoverflow.com/a/37461974\n      if (event.key === 'Escape') {\n        setLocalSearchString('');\n        dispatch(reduxActions.setSearchString(''));\n        if (searchInputRef.current) searchInputRef.current.blur();\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <TextField\n      className={classes.searchFieldContainer}\n      size=\"small\"\n      variant=\"outlined\"\n      value={localSearchString}\n      placeholder={searchPlaceholderString}\n      onChange={handleChange as any}\n      inputRef={searchInputRef}\n      InputProps={{\n        onKeyUp: handleKeyUp,\n        startAdornment: (\n          <InputAdornment className={classes.searchIcon} position=\"start\">\n            <ChonkyIcon\n              icon={showLoadingIndicator ? ChonkyIconName.loading : ChonkyIconName.search}\n              spin={showLoadingIndicator}\n            />\n          </InputAdornment>\n        ),\n        className: classes.searchFieldInput,\n      }}\n      inputProps={{ className: classes.searchFieldInputInner }}\n    />\n  );\n});\n\nconst useStyles = makeGlobalChonkyStyles((theme) => ({\n  searchFieldContainer: {\n    height: theme.toolbar.size,\n    width: 150,\n  },\n  searchIcon: {\n    fontSize: '0.9em',\n    opacity: 0.75,\n  },\n  searchFieldInput: {\n    lineHeight: important(0),\n    padding: important(0),\n    margin: important(0),\n    fontSize: important(theme.toolbar.fontSize),\n    borderRadius: theme.toolbar.buttonRadius,\n    height: theme.toolbar.size - 4,\n    paddingLeft: important(8),\n    marginTop: 2,\n  },\n  searchFieldInputInner: {\n    lineHeight: important(`${theme.toolbar.size - 4}px`),\n    fontSize: important(theme.toolbar.fontSize),\n    height: important(theme.toolbar.size - 4),\n    padding: important([0, 8, 0, 0]),\n    margin: important(0),\n    '-webkit-appearance': 'none',\n  },\n}));\n","import React, { ReactElement, ReactNode, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectToolbarItems, selectHideToolbarInfo } from '../../redux/selectors';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { SmartToolbarButton } from './ToolbarButton';\nimport { ToolbarDropdown } from './ToolbarDropdown';\nimport { ToolbarInfo } from './ToolbarInfo';\nimport { ToolbarSearch } from './ToolbarSearch';\n\nexport interface FileToolbarProps {}\n\nexport const FileToolbar: React.FC<FileToolbarProps & { children?: ReactNode }> = React.memo((props) => {\n  const { children } = props;\n  const classes = useStyles();\n  const toolbarItems = useSelector(selectToolbarItems);\n\n  const toolbarItemComponents = useMemo(() => {\n    const components: ReactElement[] = [];\n    for (let i = 0; i < toolbarItems.length; ++i) {\n      const item = toolbarItems[i];\n\n      const key = `toolbar-item-${typeof item === 'string' ? item : item.name}`;\n      const component =\n        typeof item === 'string' ? (\n          <SmartToolbarButton key={key} fileActionId={item} />\n        ) : (\n          <ToolbarDropdown key={key} {...item} />\n        );\n      components.push(component);\n    }\n    return components;\n  }, [toolbarItems]);\n\n  const hideToolbarInfo = useSelector(selectHideToolbarInfo);\n  return (\n    <div className={classes.toolbarWrapper}>\n      <div className={classes.toolbarContainer}>\n        <div className={classes.toolbarLeft}>\n          <ToolbarSearch />\n          {!hideToolbarInfo && <ToolbarInfo />}\n          {children}\n        </div>\n        <div className={classes.toolbarRight}>{toolbarItemComponents}</div>\n      </div>\n    </div>\n  );\n});\n\nconst useStyles = makeGlobalChonkyStyles((theme) => ({\n  toolbarWrapper: {},\n  toolbarContainer: {\n    flexWrap: 'wrap-reverse',\n    display: 'flex',\n  },\n  toolbarLeft: {\n    paddingBottom: theme.margins.rootLayoutMargin,\n    flexWrap: 'wrap',\n    flexGrow: 10000,\n    display: 'flex',\n  },\n  toolbarLeftFiller: {\n    flexGrow: 10000,\n  },\n  toolbarRight: {\n    paddingBottom: theme.margins.rootLayoutMargin,\n    flexWrap: 'wrap',\n    display: 'flex',\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useContext } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface FileListEmptyProps {\n  width: number;\n  height: number;\n}\n\nexport const FileListEmpty: React.FC<FileListEmptyProps> = (props) => {\n  const { width, height } = props;\n  const classes = useStyles();\n  const ChonkyIcon = useContext(ChonkyIconContext);\n  const style: CSSProperties = {\n    width,\n    height,\n  };\n\n  const intl = useIntl();\n  const emptyString = intl.formatMessage({\n    id: getI18nId(I18nNamespace.FileList, 'nothingToShow'),\n    defaultMessage: 'Nothing to show',\n  });\n\n  return (\n    <div className={classes.fileListEmpty} style={style}>\n      <div className={classes.fileListEmptyContent}>\n        <ChonkyIcon icon={ChonkyIconName.folderOpen} />\n        &nbsp; {emptyString}\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeGlobalChonkyStyles((theme) => ({\n  fileListEmpty: {\n    color: theme.palette.text.disabled,\n    position: 'relative',\n    textAlign: 'center',\n    fontSize: '1.2em',\n  },\n  fileListEmptyContent: {\n    transform: 'translateX(-50%) translateY(-50%)',\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback } from 'react';\nimport { AnyObjectWithStringKeys } from 'tsdef';\n\nimport { useClickHandler, useKeyDownHandler } from './ClickableWrapper-hooks';\n\nexport interface MouseClickEvent {\n  altKey: boolean;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n}\nexport type MouseClickEventHandler = (event: MouseClickEvent) => void;\n\nexport interface KeyboardClickEvent {\n  enterKey: boolean;\n  spaceKey: boolean;\n  altKey: boolean;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n}\nexport type KeyboardClickEventHandler = (event: KeyboardClickEvent) => void;\n\nexport interface ClickableWrapperProps {\n  wrapperTag: any;\n  passthroughProps?: any;\n\n  onSingleClick?: MouseClickEventHandler;\n  onDoubleClick?: MouseClickEventHandler;\n  onKeyboardClick?: KeyboardClickEventHandler;\n  setFocused?: (focused: boolean) => void;\n  children?: React.ReactNode;\n}\n\nexport const ClickableWrapper: React.FC<ClickableWrapperProps> = (props) => {\n  const {\n    children,\n    wrapperTag: WrapperTag,\n    passthroughProps,\n    onSingleClick,\n    onDoubleClick,\n    onKeyboardClick,\n    setFocused,\n  } = props;\n\n  const handleClick = useClickHandler(onSingleClick, onDoubleClick);\n  const handleKeyDown = useKeyDownHandler(onKeyboardClick);\n\n  const compProps: AnyObjectWithStringKeys = {\n    onFocus: useCallback(() => setFocused && setFocused(true), [setFocused]),\n    onBlur: useCallback(() => setFocused && setFocused(false), [setFocused]),\n  };\n\n  if (onSingleClick || onDoubleClick || onKeyboardClick) {\n    compProps.onClick = handleClick;\n    compProps.onKeyDown = handleKeyDown;\n    compProps.tabIndex = 0;\n  }\n\n  const mergedProps = { ...compProps, ...passthroughProps };\n  return <WrapperTag {...mergedProps}>{children}</WrapperTag>;\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Nilable, Nullable } from 'tsdef';\n\nimport { selectDoubleClickDelay } from '../../redux/selectors';\nimport {\n  KeyboardClickEvent,\n  KeyboardClickEventHandler,\n  MouseClickEvent,\n  MouseClickEventHandler,\n} from './ClickableWrapper';\n\nexport const useClickHandler = (\n  onSingleClick: Nilable<MouseClickEventHandler>,\n  onDoubleClick: Nilable<MouseClickEventHandler>,\n) => {\n  const doubleClickDelay = useSelector(selectDoubleClickDelay);\n\n  const counter = useRef({\n    clickCount: 0,\n    clickTimeout: null as Nullable<number>,\n  });\n\n  return useCallback(\n    (event: React.MouseEvent) => {\n      const mouseClickEvent: MouseClickEvent = {\n        altKey: event.altKey,\n        ctrlKey: event.ctrlKey || event.metaKey,\n        shiftKey: event.shiftKey,\n      };\n\n      counter.current.clickCount++;\n      if (counter.current.clickCount === 1) {\n        if (onSingleClick) {\n          event.preventDefault();\n          onSingleClick(mouseClickEvent);\n        }\n        counter.current.clickCount = 1;\n        // @ts-ignore\n        counter.current.clickTimeout = setTimeout(() => (counter.current.clickCount = 0), doubleClickDelay);\n      } else if (counter.current.clickCount === 2) {\n        if (onDoubleClick) {\n          event.preventDefault();\n          onDoubleClick(mouseClickEvent);\n        }\n        if (typeof counter.current.clickTimeout === 'number') {\n          clearTimeout(counter.current.clickTimeout);\n          counter.current.clickTimeout = null;\n          counter.current.clickCount = 0;\n        }\n      }\n    },\n    [doubleClickDelay, onSingleClick, onDoubleClick, counter],\n  );\n};\n\nexport const useKeyDownHandler = (onKeyboardClick?: KeyboardClickEventHandler) => {\n  return useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!onKeyboardClick) return;\n\n      const keyboardClickEvent: KeyboardClickEvent = {\n        enterKey: event.nativeEvent.code === 'Enter',\n        spaceKey: event.nativeEvent.code === 'Space',\n        altKey: event.altKey,\n        ctrlKey: event.ctrlKey,\n        shiftKey: event.shiftKey,\n      };\n\n      if (keyboardClickEvent.spaceKey || keyboardClickEvent.enterKey) {\n        event.preventDefault();\n        event.stopPropagation();\n        onKeyboardClick(keyboardClickEvent);\n      }\n    },\n    [onKeyboardClick],\n  );\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { FileData } from '../../types/file.types';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { useFileNameComponent, useModifierIconComponents } from './FileEntry-hooks';\n\nexport interface FileEntryNameProps {\n  file: Nullable<FileData>;\n  className?: string;\n}\n\nexport const FileEntryName: React.FC<FileEntryNameProps> = React.memo(({ file, className }) => {\n  const modifierIconComponents = useModifierIconComponents(file);\n  const fileNameComponent = useFileNameComponent(file);\n\n  const classes = useStyles();\n  return (\n    <span className={className} title={file ? file.name : undefined}>\n      {modifierIconComponents.length > 0 && <span className={classes.modifierIcons}>{modifierIconComponents}</span>}\n      {fileNameComponent}\n    </span>\n  );\n});\nFileEntryName.displayName = 'FileEntryName';\n\nconst useStyles = makeLocalChonkyStyles((theme) => ({\n  modifierIcons: {\n    color: theme.palette.text.primary,\n    position: 'relative',\n    fontSize: '0.775em',\n    paddingRight: 5,\n  },\n}));\n","import React, { useContext } from 'react';\n\nimport { FileEntryProps } from '../../types/file-list.types';\nimport { useLocalizedFileEntryStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport { useFileEntryHtmlProps, useFileEntryState } from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState } from './GridEntryPreview';\n\nexport const CompactEntry: React.FC<FileEntryProps> = React.memo(\n  // @ts-ignore\n  ({ file, selected, focused, dndState }) => {\n    const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n\n    const { fileModDateString, fileSizeString } = useLocalizedFileEntryStrings(file);\n\n    const classes = useStyles(entryState);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n    return (\n      <div className={classes.listFileEntry} {...fileEntryHtmlProps}>\n        <div className={classes.listFileEntryIcon}>\n          <ChonkyIcon icon={entryState.icon} spin={entryState.iconSpin} fixedWidth={true} />\n        </div>\n        <div className={classes.listFileEntryDescription}>\n          <div className={classes.listFileEntryName} title={file ? file.name : undefined}>\n            <FileEntryName file={file} />\n          </div>\n          <div className={classes.listFileEntryProperties}>\n            <div className={classes.listFileEntryProperty}>\n              {file ? fileModDateString ?? <span>—</span> : <TextPlaceholder minLength={5} maxLength={15} />}\n            </div>\n            <div className={classes.listFileEntryProperty}>\n              {file ? fileSizeString ?? <span>—</span> : <TextPlaceholder minLength={10} maxLength={20} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"chonky-file-entry-outline\"></div>\n        <div className=\"chonky-file-entry-selection\"></div>\n      </div>\n    );\n  },\n);\n\nconst useStyles = makeLocalChonkyStyles((theme) => ({\n  listFileEntry: {\n    fontSize: theme.listFileEntry.fontSize,\n    alignItems: 'center',\n    position: 'relative',\n    display: 'flex',\n    height: '100%',\n  },\n  listFileEntryIcon: {\n    backgroundColor: (state: FileEntryState) => state.color,\n    boxShadow: 'inset rgba(255, 255, 255, 0.5) 0 0 0 999px',\n    borderRadius: theme.listFileEntry.iconBorderRadius,\n    fontSize: theme.listFileEntry.iconFontSize,\n    color: '#fff',\n    padding: 8,\n  },\n  listFileEntryDescription: {\n    flexDirection: 'column',\n    display: 'flex',\n    flexGrow: 1,\n  },\n  listFileEntryName: {\n    padding: [0, 8, 4, 8],\n  },\n  listFileEntryProperties: {\n    fontSize: theme.listFileEntry.propertyFontSize,\n    flexDirection: 'row',\n    display: 'flex',\n  },\n  listFileEntryProperty: {\n    padding: [0, 8],\n    opacity: 0.4,\n  },\n}));\n","import React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { FileData } from '../../types/file.types';\nimport { useDndHoverOpen, useFileEntryDnD } from '../../util/dnd';\nimport { FileHelper } from '../../util/file-helper';\nimport { makeLocalChonkyStyles } from '../../util/styles';\n\nexport interface DnDFileEntryProps {\n  file: Nullable<FileData>;\n  children: (dndState: DndEntryState) => React.ReactElement;\n}\n\nexport const DnDFileEntry = React.memo(({ file, children }: DnDFileEntryProps) => {\n  const { drop, drag, dndState } = useFileEntryDnD(file);\n\n  useDndHoverOpen(file, dndState);\n  const classes = useStyles();\n  return (\n    <div ref={drop} className={classes.fillParent}>\n      <div ref={FileHelper.isDraggable(file) ? drag : null} className={classes.fillParent}>\n        {children(dndState)}\n      </div>\n    </div>\n  );\n});\n\nexport const useStyles = makeLocalChonkyStyles(() => ({\n  fillParent: {\n    height: '100%',\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport c from 'classnames';\nimport React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface FileThumbnailProps {\n  className: string;\n  thumbnailUrl: Nullable<string>;\n}\n\nexport const FileThumbnail: React.FC<FileThumbnailProps> = React.memo((props) => {\n  const { className, thumbnailUrl } = props;\n\n  const thumbnailStyle: React.CSSProperties = thumbnailUrl ? { backgroundImage: `url('${thumbnailUrl}')` } : {};\n\n  const classes = useStyles();\n  return <div className={c([className, classes.fileThumbnail])} style={thumbnailStyle} />;\n});\nFileThumbnail.displayName = 'FileThumbnail';\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n  fileThumbnail: {\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext } from 'react';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { useDndIcon } from './FileEntry-hooks';\n\nexport interface DnDIndicatorProps {\n  className: string;\n  dndState: DndEntryState;\n}\n\nexport const GridEntryDndIndicator: React.FC<DnDIndicatorProps> = React.memo((props) => {\n  const { className: externalClassName, dndState } = props;\n  const dndIconName = useDndIcon(dndState);\n  const classes = useStyles(dndState);\n  const ChonkyIcon = useContext(ChonkyIconContext);\n  if (!dndIconName) return null;\n  const className = c({\n    [classes.dndIndicator]: true,\n    [externalClassName]: true,\n  });\n  return (\n    <div className={className}>\n      <ChonkyIcon icon={dndIconName} />\n    </div>\n  );\n});\n\nconst useStyles = makeLocalChonkyStyles((theme) => ({\n  dndIndicator: {\n    color: (dndState: DndEntryState) =>\n      dndState.dndIsOver ? (dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor) : '#000',\n    boxSizing: 'border-box',\n    position: 'absolute',\n    fontSize: '1.2em',\n    opacity: 0.6,\n    padding: 6,\n    '&:before': {\n      borderBottom: '50px solid transparent',\n      borderLeft: '50px solid #fff',\n      position: 'absolute',\n      content: '\"\"',\n      zIndex: -1,\n      left: 0,\n      top: 0,\n    },\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext, useEffect } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeLocalChonkyStyles } from '../../util/styles';\nimport { FileThumbnail } from './FileThumbnail';\nimport { GridEntryDndIndicator } from './GridEntryDndIndicator';\n\nexport type FileEntryState = {\n  childrenCount: Nullable<number>;\n  color: string;\n  icon: ChonkyIconName | string;\n  thumbnailUrl: Nullable<string>;\n  iconSpin: boolean;\n  selected: boolean;\n  focused: boolean;\n};\n\nexport interface FileEntryPreviewProps {\n  className?: string;\n  entryState: FileEntryState;\n  dndState: DndEntryState;\n}\n\nexport const GridEntryPreviewFolder: React.FC<FileEntryPreviewProps> = React.memo((props) => {\n  const { className: externalClassName, entryState, dndState } = props;\n\n  const folderClasses = useFolderStyles(entryState);\n  const fileClasses = useFileStyles(entryState);\n  const commonClasses = useCommonEntryStyles(entryState);\n  const className = c({\n    [folderClasses.previewFile]: true,\n    [externalClassName || '']: !!externalClassName,\n  });\n  return (\n    <div className={className}>\n      <div className={folderClasses.folderBackSideMid}>\n        <div className={folderClasses.folderBackSideTop} />\n        <div className={folderClasses.folderFrontSide}>\n          <GridEntryDndIndicator className={fileClasses.dndIndicator} dndState={dndState} />\n          <div className={c([fileClasses.fileIcon, folderClasses.fileIcon])}>{entryState.childrenCount}</div>\n          <div className={commonClasses.selectionIndicator}></div>\n          <FileThumbnail className={fileClasses.thumbnail} thumbnailUrl={entryState.thumbnailUrl} />\n        </div>\n      </div>\n    </div>\n  );\n});\nGridEntryPreviewFolder.displayName = 'GridEntryPreviewFolder';\n\nconst useFolderStyles = makeLocalChonkyStyles((theme) => ({\n  previewFile: {\n    borderRadius: theme.gridFileEntry.borderRadius,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  folderBackSideTop: {\n    backgroundColor: (state: FileEntryState) => state.color,\n    boxShadow: (state: FileEntryState) => {\n      let color = theme.gridFileEntry.folderBackColorTint;\n      if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n      else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n      return `inset ${color} 0 0 0 999px`;\n    },\n    borderTopLeftRadius: theme.gridFileEntry.borderRadius,\n    borderTopRightRadius: 10,\n    position: 'absolute',\n    right: '60%',\n    height: 13,\n    top: -10,\n    left: 0,\n    '&:after': {\n      borderRightColor: theme.palette.background.paper,\n      borderTopColor: theme.palette.background.paper,\n      borderBottomColor: 'transparent',\n      borderLeftColor: 'transparent',\n      borderWidth: [0, 15, 10, 0],\n      borderStyle: 'solid',\n      position: 'absolute',\n      display: 'block',\n      content: '\"\"',\n      right: 0,\n      top: 0,\n    },\n  },\n  folderBackSideMid: {\n    backgroundColor: (state: FileEntryState) => state.color,\n    boxShadow: (state: FileEntryState) => {\n      let color = theme.gridFileEntry.folderBackColorTint;\n      if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n      else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n      return `inset ${color} 0 0 0 999px`;\n    },\n    borderTopRightRadius: theme.gridFileEntry.borderRadius,\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    left: 0,\n    top: 10,\n  },\n  folderFrontSide: {\n    boxShadow: (state: FileEntryState) => {\n      const shadows: string[] = [];\n      if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n      if (state.selected) shadows.push('inset rgba(0, 153, 255, .65) 0 0 0 3px');\n      shadows.push(`inset ${theme.gridFileEntry.folderFrontColorTint} 0 0 0 999px`);\n      return shadows.join(', ');\n    },\n    backgroundColor: (state: FileEntryState) => state.color,\n    borderRadius: theme.gridFileEntry.borderRadius,\n    position: 'absolute',\n    overflow: 'hidden',\n    bottom: 0,\n    right: 0,\n    left: 0,\n    top: 10,\n  },\n  fileIcon: {\n    fontSize: important(theme.gridFileEntry.childrenCountSize),\n  },\n}));\n\nexport const GridEntryPreviewFile: React.FC<FileEntryPreviewProps> = React.memo((props) => {\n  const { className: externalClassName, entryState, dndState } = props;\n\n  const fileClasses = useFileStyles(entryState);\n  const commonClasses = useCommonEntryStyles(entryState);\n  const ChonkyIcon = useContext(ChonkyIconContext);\n  const className = c({\n    [fileClasses.previewFile]: true,\n    [externalClassName || '']: !!externalClassName,\n  });\n  return (\n    <div className={className}>\n      <GridEntryDndIndicator className={fileClasses.dndIndicator} dndState={dndState} />\n      <div className={fileClasses.fileIcon}>\n        <ChonkyIcon icon={entryState.icon} spin={entryState.iconSpin} />\n      </div>\n      <div className={commonClasses.selectionIndicator}></div>\n      <FileThumbnail className={fileClasses.thumbnail} thumbnailUrl={entryState.thumbnailUrl} />\n    </div>\n  );\n});\nGridEntryPreviewFile.displayName = 'GridEntryPreviewFile';\n\nconst useFileStyles = makeLocalChonkyStyles((theme) => ({\n  previewFile: {\n    boxShadow: (state: FileEntryState) => {\n      const shadows: string[] = [];\n      if (state.selected) shadows.push('inset rgba(0,153,255, .65) 0 0 0 3px');\n      if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n      shadows.push(`inset ${theme.gridFileEntry.fileColorTint} 0 0 0 999px`);\n      return shadows.join(', ');\n    },\n    backgroundColor: (state: FileEntryState) => state.color,\n    borderRadius: theme.gridFileEntry.borderRadius,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  dndIndicator: {\n    zIndex: 14,\n  },\n  fileIcon: {\n    transform: 'translateX(-50%) translateY(-50%)',\n    fontSize: theme.gridFileEntry.iconSize,\n    opacity: (state: FileEntryState) => (state.thumbnailUrl && !state.focused ? 0 : 1),\n    color: (state: FileEntryState) =>\n      state.focused ? theme.gridFileEntry.iconColorFocused : theme.gridFileEntry.iconColor,\n    position: 'absolute',\n    left: '50%',\n    zIndex: 12,\n    top: '50%',\n  },\n  thumbnail: {\n    borderRadius: theme.gridFileEntry.borderRadius,\n    position: 'absolute',\n    zIndex: 6,\n    bottom: 5,\n    right: 5,\n    left: 5,\n    top: 5,\n  },\n}));\n\nexport const useCommonEntryStyles = makeLocalChonkyStyles(() => ({\n  selectionIndicator: {\n    display: (state: FileEntryState) => (state.selected ? 'block' : 'none'),\n    background:\n      'repeating-linear-gradient(' +\n      '45deg,' +\n      'rgba(0,153,255,.14),' +\n      'rgba(0,153,255,.14) 10px,' +\n      'rgba(0,153,255,.25) 0,' +\n      'rgba(0,153,255,.25) 20px' +\n      ')',\n    backgroundColor: 'rgba(0, 153, 255, .14)',\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    zIndex: 10,\n  },\n  focusIndicator: {\n    display: (state: FileEntryState) => (state.focused ? 'block' : 'none'),\n    boxShadow: 'inset rgba(0, 0, 0, 1) 0 0 0 2px',\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    zIndex: 11,\n  },\n}));\n","import React from 'react';\n\nimport { FileEntryProps } from '../../types/file-list.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { useFileEntryHtmlProps, useFileEntryState } from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState, GridEntryPreviewFile, GridEntryPreviewFolder } from './GridEntryPreview';\n\nexport const GridEntry: React.FC<FileEntryProps> = React.memo(({ file, selected, focused, dndState }) => {\n  const isDirectory = FileHelper.isDirectory(file);\n  const entryState = useFileEntryState(file, selected, focused);\n\n  const classes = useFileEntryStyles(entryState);\n  const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n  const entryClassName = c({\n    [classes.gridFileEntry]: true,\n  });\n  return (\n    <div className={entryClassName} {...fileEntryHtmlProps}>\n      {isDirectory ? (\n        <GridEntryPreviewFolder className={classes.gridFileEntryPreview} entryState={entryState} dndState={dndState} />\n      ) : (\n        <GridEntryPreviewFile className={classes.gridFileEntryPreview} entryState={entryState} dndState={dndState} />\n      )}\n      <div className={classes.gridFileEntryNameContainer}>\n        <FileEntryName className={classes.gridFileEntryName} file={file} />\n      </div>\n    </div>\n  );\n});\nGridEntry.displayName = 'GridEntry';\n\nconst useFileEntryStyles = makeLocalChonkyStyles((theme) => ({\n  gridFileEntry: {\n    flexDirection: 'column',\n    display: 'flex',\n    height: '100%',\n  },\n  gridFileEntryPreview: {\n    flexGrow: 1,\n  },\n  gridFileEntryNameContainer: {\n    fontSize: theme.gridFileEntry.fontSize,\n    wordBreak: 'break-word',\n    textAlign: 'center',\n    paddingTop: 5,\n  },\n  gridFileEntryName: {\n    backgroundColor: (state: FileEntryState) => (state.selected ? 'rgba(0,153,255, .25)' : 'transparent'),\n    textDecoration: (state: FileEntryState) => (state.focused ? 'underline' : 'none'),\n    borderRadius: 3,\n    padding: [2, 4],\n  },\n}));\n","import React, { useContext, useMemo } from 'react';\n\nimport { DndEntryState, FileEntryProps } from '../../types/file-list.types';\nimport { useLocalizedFileEntryStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport { useDndIcon, useFileEntryHtmlProps, useFileEntryState } from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState, useCommonEntryStyles } from './GridEntryPreview';\n\ninterface StyleState {\n  entryState: FileEntryState;\n  dndState: DndEntryState;\n}\n\nexport const ListEntry: React.FC<FileEntryProps> = React.memo(({ file, selected, focused, dndState }) => {\n  const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n  const dndIconName = useDndIcon(dndState);\n\n  const { fileModDateString, fileSizeString } = useLocalizedFileEntryStrings(file);\n  const styleState = useMemo<StyleState>(\n    () => ({\n      entryState,\n      dndState,\n    }),\n    [dndState, entryState],\n  );\n  const classes = useStyles(styleState);\n  const commonClasses = useCommonEntryStyles(entryState);\n  const ChonkyIcon = useContext(ChonkyIconContext);\n  const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n  return (\n    <div className={classes.listFileEntry} {...fileEntryHtmlProps}>\n      <div className={commonClasses.focusIndicator}></div>\n      <div className={c([commonClasses.selectionIndicator, classes.listFileEntrySelection])}></div>\n      <div className={classes.listFileEntryIcon}>\n        <ChonkyIcon\n          icon={dndIconName ?? entryState.icon}\n          spin={dndIconName ? false : entryState.iconSpin}\n          fixedWidth={true}\n        />\n      </div>\n      <div className={classes.listFileEntryName} title={file ? file.name : undefined}>\n        <FileEntryName file={file} />\n      </div>\n      <div className={classes.listFileEntryProperty}>\n        {file ? fileModDateString ?? <span>—</span> : <TextPlaceholder minLength={5} maxLength={15} />}\n      </div>\n      <div className={classes.listFileEntryProperty}>\n        {file ? fileSizeString ?? <span>—</span> : <TextPlaceholder minLength={10} maxLength={20} />}\n      </div>\n    </div>\n  );\n});\n\nconst useStyles = makeLocalChonkyStyles((theme) => ({\n  listFileEntry: {\n    boxShadow: `inset ${theme.palette.divider} 0 -1px 0`,\n    fontSize: theme.listFileEntry.fontSize,\n    color: ({ dndState }: StyleState) =>\n      dndState.dndIsOver ? (dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor) : 'inherit',\n    alignItems: 'center',\n    position: 'relative',\n    display: 'flex',\n    height: '100%',\n  },\n  listFileEntrySelection: {\n    opacity: 0.6,\n  },\n  listFileEntryIcon: {\n    color: ({ entryState, dndState }: StyleState) =>\n      dndState.dndIsOver\n        ? dndState.dndCanDrop\n          ? theme.dnd.canDropColor\n          : theme.dnd.cannotDropColor\n        : entryState.color,\n    fontSize: theme.listFileEntry.iconFontSize,\n    boxSizing: 'border-box',\n    padding: [2, 4],\n    zIndex: 20,\n  },\n  listFileEntryName: {\n    textOverflow: 'ellipsis',\n    boxSizing: 'border-box',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    flex: '1 1 300px',\n    paddingLeft: 8,\n    zIndex: 20,\n  },\n  listFileEntryProperty: {\n    fontSize: theme.listFileEntry.propertyFontSize,\n    boxSizing: 'border-box',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    flex: '0 1 150px',\n    padding: [2, 8],\n    zIndex: 20,\n  },\n}));\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileData, selectIsDnDDisabled, selectIsFileSelected } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { DndEntryState, FileEntryProps } from '../../types/file-list.types';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { ClickableWrapper, ClickableWrapperProps } from '../internal/ClickableWrapper';\nimport { CompactEntry } from './CompactEntry';\nimport { DnDFileEntry } from './DnDFileEntry';\nimport { useFileClickHandlers } from './FileEntry-hooks';\nimport { GridEntry } from './GridEntry';\nimport { ListEntry } from './ListEntry';\n\nexport interface SmartFileEntryProps {\n  fileId: Nullable<string>;\n  displayIndex: number;\n  fileViewMode: FileViewMode;\n}\n\nconst disabledDndState: DndEntryState = {\n  dndIsDragging: false,\n  dndIsOver: false,\n  dndCanDrop: false,\n};\n\nexport const SmartFileEntry: React.FC<SmartFileEntryProps> = React.memo(({ fileId, displayIndex, fileViewMode }) => {\n  const classes = useStyles();\n\n  // Basic properties\n  const file = useParamSelector(selectFileData, fileId);\n  const selected = useParamSelector(selectIsFileSelected, fileId);\n  const dndDisabled = useSelector(selectIsDnDDisabled);\n\n  // Clickable wrapper properties\n  const fileClickHandlers = useFileClickHandlers(file, displayIndex);\n  const [focused, setFocused] = useState(false);\n  const clickableWrapperProps: ClickableWrapperProps = {\n    wrapperTag: 'div',\n    passthroughProps: { className: classes.fileEntryClickableWrapper },\n    ...(FileHelper.isClickable(file) ? fileClickHandlers : undefined),\n    setFocused,\n  };\n\n  // File entry properties\n  const fileEntryProps: Omit<FileEntryProps, 'dndState'> = {\n    file,\n    selected,\n    focused,\n  };\n\n  let EntryComponent: React.FC<FileEntryProps>;\n  if (fileViewMode === FileViewMode.List) EntryComponent = ListEntry;\n  else if (fileViewMode === FileViewMode.Compact) EntryComponent = CompactEntry;\n  else EntryComponent = GridEntry;\n\n  return dndDisabled ? (\n    <ClickableWrapper {...clickableWrapperProps}>\n      <EntryComponent {...fileEntryProps} dndState={disabledDndState} />\n    </ClickableWrapper>\n  ) : (\n    <DnDFileEntry file={file}>\n      {(dndState) => (\n        <ClickableWrapper {...clickableWrapperProps}>\n          <EntryComponent {...fileEntryProps} dndState={dndState} />\n        </ClickableWrapper>\n      )}\n    </DnDFileEntry>\n  );\n});\nSmartFileEntry.displayName = 'SmartFileEntry';\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n  fileEntryClickableWrapper: {\n    // We disable default browser outline because Chonky provides its own outline\n    // (which doesn't compromise accessibility, hopefully)\n    outline: 'none !important',\n    position: 'relative',\n    height: '100%',\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { VariableSizeGrid } from 'react-window';\n\nimport { ChonkyActions } from '../../action-definitions';\nimport { selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewConfigGrid } from '../../types/file-view.types';\nimport { RootState } from '../../types/redux.types';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\nimport { makeGlobalChonkyStyles, useIsMobileBreakpoint } from '../../util/styles';\nimport { SmartFileEntry } from './FileEntry';\n\nexport interface FileListGridProps {\n  width: number;\n  height: number;\n}\n\ninterface GridConfig {\n  rowCount: number;\n  columnCount: number;\n  gutter: number;\n  rowHeight: number;\n  columnWidth: number;\n}\n\nexport const isMobileDevice = () => {\n  // noinspection JSDeprecatedSymbols\n  return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n};\n\nexport const getGridConfig = (\n  width: number,\n  fileCount: number,\n  viewConfig: FileViewConfigGrid,\n  isMobileBreakpoint: boolean,\n): GridConfig => {\n  const gutter = isMobileBreakpoint ? 5 : 8;\n  const scrollbar = isMobileDevice() ? 0 : 18;\n\n  let columnCount: number;\n  let columnWidth: number;\n  if (isMobileBreakpoint) {\n    columnCount = 2;\n    columnWidth = (width - gutter - scrollbar) / columnCount;\n  } else {\n    columnWidth = viewConfig.entryWidth;\n    columnCount = Math.max(1, Math.floor((width - scrollbar) / (columnWidth + gutter)));\n  }\n\n  const rowCount = Math.ceil(fileCount / columnCount);\n\n  return {\n    rowCount,\n    columnCount,\n    gutter,\n    rowHeight: viewConfig.entryHeight,\n    columnWidth,\n  };\n};\n\nexport const GridContainer: React.FC<FileListGridProps> = React.memo((props) => {\n  const { width, height } = props;\n\n  const viewConfig = useSelector(selectFileViewConfig) as FileViewConfigGrid;\n  const displayFileIds = useSelector(selectors.getDisplayFileIds);\n  const fileCount = useMemo(() => displayFileIds.length, [displayFileIds]);\n\n  const gridRef = useRef<VariableSizeGrid>();\n  const isMobileBreakpoint = useIsMobileBreakpoint();\n\n  // Whenever the grid config changes at runtime, we call a method on the\n  // `VariableSizeGrid` handle to reset column width/row height cache.\n  // !!! Note that we deliberately update the `gridRef` firsts and update the React\n  //     state AFTER that. This is needed to avoid file entries jumping up/down.\n  const [gridConfig, setGridConfig] = useState(getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint));\n  const gridConfigRef = useRef(gridConfig);\n  useEffect(() => {\n    const oldConf = gridConfigRef.current;\n    const newConf = getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint);\n\n    gridConfigRef.current = newConf;\n    if (gridRef.current) {\n      if (oldConf.rowCount !== newConf.rowCount) {\n        gridRef.current.resetAfterRowIndex(Math.min(oldConf.rowCount, newConf.rowCount) - 1);\n      }\n      if (oldConf.columnCount !== newConf.columnCount) {\n        gridRef.current.resetAfterColumnIndex(Math.min(oldConf.columnCount, newConf.rowCount) - 1);\n      }\n      if (oldConf.columnWidth !== newConf.columnWidth) {\n        gridRef.current.resetAfterIndices({ columnIndex: 0, rowIndex: 0 });\n      }\n    }\n\n    setGridConfig(newConf);\n  }, [setGridConfig, gridConfigRef, isMobileBreakpoint, width, viewConfig, fileCount]);\n\n  const sizers = useMemo(() => {\n    const gc = gridConfigRef;\n    return {\n      getColumnWidth: (index: number) =>\n        gc.current.columnWidth! + (index === gc.current.columnCount - 1 ? 0 : gc.current.gutter),\n      getRowHeight: (index: number) =>\n        gc.current.rowHeight + (index === gc.current.rowCount - 1 ? 0 : gc.current.gutter),\n    };\n  }, [gridConfigRef]);\n\n  const displayFileIdsRef = useInstanceVariable(useSelector(selectors.getDisplayFileIds));\n  const getItemKey = useCallback(\n    (data: { columnIndex: number; rowIndex: number; data: any }) => {\n      const index = data.rowIndex * gridConfigRef.current.columnCount + data.columnIndex;\n\n      return displayFileIdsRef.current[index] ?? `loading-file-${index}`;\n    },\n    [gridConfigRef, displayFileIdsRef],\n  );\n\n  const cellRenderer = useCallback(\n    (data: { rowIndex: number; columnIndex: number; style: CSSProperties }) => {\n      const gc = gridConfigRef;\n      const index = data.rowIndex * gc.current.columnCount + data.columnIndex;\n      const fileId = displayFileIds[index];\n      if (displayFileIds[index] === undefined) return null;\n\n      const styleWithGutter: CSSProperties = {\n        ...data.style,\n        paddingRight: data.columnIndex === gc.current.columnCount - 1 ? 0 : gc.current.gutter,\n        paddingBottom: data.rowIndex === gc.current.rowCount - 1 ? 0 : gc.current.gutter,\n        boxSizing: 'border-box',\n      };\n\n      return (\n        <div style={styleWithGutter}>\n          <SmartFileEntry fileId={fileId ?? null} displayIndex={index} fileViewMode={viewConfig.mode} />\n        </div>\n      );\n    },\n    [displayFileIds, viewConfig.mode],\n  );\n\n  const classes = useStyles();\n  const gridComponent = useMemo(() => {\n    return (\n      <VariableSizeGrid\n        ref={gridRef as any}\n        className={classes.gridContainer}\n        estimatedRowHeight={gridConfig.rowHeight + gridConfig.gutter}\n        rowHeight={sizers.getRowHeight}\n        estimatedColumnWidth={gridConfig.columnWidth + gridConfig.gutter}\n        columnWidth={sizers.getColumnWidth}\n        columnCount={gridConfig.columnCount}\n        height={height}\n        rowCount={gridConfig.rowCount}\n        width={width}\n        itemKey={getItemKey}\n      >\n        {cellRenderer}\n      </VariableSizeGrid>\n    );\n  }, [\n    classes.gridContainer,\n    gridConfig.rowHeight,\n    gridConfig.gutter,\n    gridConfig.columnWidth,\n    gridConfig.columnCount,\n    gridConfig.rowCount,\n    sizers.getRowHeight,\n    sizers.getColumnWidth,\n    height,\n    width,\n    getItemKey,\n    cellRenderer,\n  ]);\n\n  return gridComponent;\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n  gridContainer: {},\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useCallback, useMemo, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FixedSizeList } from 'react-window';\n\nimport { selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { SmartFileEntry } from './FileEntry';\n\nexport interface FileListListProps {\n  width: number;\n  height: number;\n}\n\nexport const ListContainer: React.FC<FileListListProps> = React.memo((props) => {\n  const { width, height } = props;\n\n  const viewConfig = useSelector(selectFileViewConfig);\n\n  const listRef = useRef<FixedSizeList>();\n\n  const displayFileIds = useSelector(selectors.getDisplayFileIds);\n  const displayFileIdsRef = useInstanceVariable(displayFileIds);\n  const getItemKey = useCallback(\n    (index: number) => displayFileIdsRef.current[index] ?? `loading-file-${index}`,\n    [displayFileIdsRef],\n  );\n\n  const classes = useStyles();\n  const listComponent = useMemo(() => {\n    // When entry size is null, we use List view\n    const rowRenderer = (data: { index: number; style: CSSProperties }) => {\n      return (\n        <div style={data.style}>\n          <SmartFileEntry\n            fileId={displayFileIds[data.index] ?? null}\n            displayIndex={data.index}\n            fileViewMode={FileViewMode.List}\n          />\n        </div>\n      );\n    };\n\n    return (\n      <FixedSizeList\n        ref={listRef as any}\n        className={classes.listContainer}\n        itemSize={viewConfig.entryHeight}\n        height={height}\n        itemCount={displayFileIds.length}\n        width={width}\n        itemKey={getItemKey}\n      >\n        {rowRenderer}\n      </FixedSizeList>\n    );\n  }, [classes.listContainer, viewConfig.entryHeight, height, displayFileIds, width, getItemKey]);\n\n  return listComponent;\n});\n\nconst useStyles = makeLocalChonkyStyles((theme) => ({\n  listContainer: {\n    borderTop: `solid 1px ${theme.palette.divider}`,\n  },\n}));\n","import React, { UIEvent, useCallback, useContext, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectCurrentFolder, selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useFileDrop } from '../../util/dnd';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, getStripeGradient, makeGlobalChonkyStyles, makeLocalChonkyStyles } from '../../util/styles';\nimport { FileListEmpty } from './FileListEmpty';\nimport { GridContainer } from './GridContainer';\nimport { ListContainer } from './ListContainer';\n\nexport interface FileListProps {\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n}\n\ninterface StyleState {\n  dndCanDrop: boolean;\n  dndIsOverCurrent: boolean;\n}\n\nexport const FileList: React.FC<FileListProps> = React.memo((props: FileListProps) => {\n  const displayFileIds = useSelector(selectors.getDisplayFileIds);\n  const viewConfig = useSelector(selectFileViewConfig);\n\n  const currentFolder = useSelector(selectCurrentFolder);\n  const { drop, dndCanDrop, dndIsOverCurrent } = useFileDrop({ file: currentFolder });\n  const styleState = useMemo<StyleState>(() => ({ dndCanDrop, dndIsOverCurrent }), [dndCanDrop, dndIsOverCurrent]);\n\n  const localClasses = useLocalStyles(styleState);\n  const classes = useStyles(viewConfig);\n  const { onScroll } = props;\n\n  // In Chonky v0.x, this field was user-configurable. In Chonky v1.x+, we hardcode\n  // this to `true` to simplify configuration. Users can just wrap Chonky in their\n  // own `div` if they want to have finer control over the height.\n  const fillParentContainer = true;\n\n  const listRenderer = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (displayFileIds.length === 0) {\n        return <FileListEmpty width={width} height={viewConfig.entryHeight} />;\n      } else if (viewConfig.mode === FileViewMode.List) {\n        return <ListContainer width={width} height={height} />;\n      } else {\n        return <GridContainer width={width} height={height} />;\n      }\n    },\n    [displayFileIds, viewConfig],\n  );\n\n  const ChonkyIcon = useContext(ChonkyIconContext);\n  return (\n    <div\n      onScroll={onScroll}\n      ref={drop}\n      className={c([classes.fileListWrapper, localClasses.fileListWrapper])}\n      role=\"list\"\n    >\n      <div className={localClasses.dndDropZone}>\n        <div className={localClasses.dndDropZoneIcon}>\n          <ChonkyIcon icon={dndCanDrop ? ChonkyIconName.dndCanDrop : ChonkyIconName.dndCannotDrop} />\n        </div>\n      </div>\n      <AutoSizer disableHeight={!fillParentContainer}>{listRenderer}</AutoSizer>\n    </div>\n  );\n});\nFileList.displayName = 'FileList';\n\nconst useLocalStyles = makeLocalChonkyStyles((theme) => ({\n  fileListWrapper: {\n    minHeight: ChonkyActions.EnableGridView.fileViewConfig.entryHeight + 2,\n    background: (state: StyleState) =>\n      state.dndIsOverCurrent && state.dndCanDrop\n        ? state.dndCanDrop\n          ? getStripeGradient(theme.dnd.fileListCanDropMaskOne, theme.dnd.fileListCanDropMaskTwo)\n          : getStripeGradient(theme.dnd.fileListCannotDropMaskOne, theme.dnd.fileListCannotDropMaskTwo)\n        : 'none',\n  },\n  dndDropZone: {\n    display: (state: StyleState) =>\n      // When we cannot drop, we don't show an indicator at all\n      state.dndIsOverCurrent && state.dndCanDrop ? 'block' : 'none',\n    borderRadius: theme.gridFileEntry.borderRadius,\n    pointerEvents: 'none',\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    zIndex: 2,\n  },\n  dndDropZoneIcon: {\n    backgroundColor: (state: StyleState) => (state.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask),\n    color: (state: StyleState) => (state.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor),\n    borderRadius: theme.gridFileEntry.borderRadius,\n    transform: 'translateX(-50%) translateY(-50%)',\n    position: 'absolute',\n    textAlign: 'center',\n    lineHeight: '60px',\n    fontSize: '2em',\n    left: '50%',\n    height: 60,\n    top: '50%',\n    width: 60,\n  },\n}));\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n  fileListWrapper: {\n    height: '100%',\n    maxHeight: '100%',\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { ReactElement, useEffect, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ListSubheader from '@mui/material/ListSubheader';\nimport Menu from '@mui/material/Menu';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { selectContextMenuConfig, selectContextMenuItems } from '../../redux/selectors';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { useContextMenuDismisser } from './FileContextMenu-hooks';\nimport { SmartToolbarDropdownButton } from './ToolbarDropdownButton';\nimport { ChonkyDispatch } from '../../types/redux.types';\n\nexport interface FileContextMenuProps {}\n\nexport const FileContextMenu: React.FC<FileContextMenuProps> = React.memo(() => {\n  const dispatch: ChonkyDispatch = useDispatch();\n  useEffect(() => {\n    dispatch(reduxActions.setContextMenuMounted(true));\n    return () => {\n      dispatch(reduxActions.setContextMenuMounted(false));\n    };\n  }, [dispatch]);\n\n  const intl = useIntl();\n  const browserMenuShortcutString = intl.formatMessage(\n    {\n      id: getI18nId(I18nNamespace.FileContextMenu, 'browserMenuShortcut'),\n      defaultMessage: 'Browser menu: {shortcut}',\n    },\n    { shortcut: <strong>Alt + Right Click</strong> },\n  );\n\n  const contextMenuConfig = useSelector(selectContextMenuConfig);\n  const contextMenuItems = useSelector(selectContextMenuItems);\n\n  const hideContextMenu = useContextMenuDismisser();\n  const contextMenuItemComponents = useMemo(() => {\n    const components: ReactElement[] = [];\n    for (let i = 0; i < contextMenuItems.length; ++i) {\n      const item = contextMenuItems[i];\n\n      if (typeof item === 'string') {\n        components.push(\n          <SmartToolbarDropdownButton\n            key={`context-menu-item-${item}`}\n            fileActionId={item}\n            onClickFollowUp={hideContextMenu}\n          />,\n        );\n      } else {\n        item.fileActionIds.map((id) =>\n          components.push(\n            <SmartToolbarDropdownButton\n              key={`context-menu-item-${item.name}-${id}`}\n              fileActionId={id}\n              onClickFollowUp={hideContextMenu}\n            />,\n          ),\n        );\n      }\n    }\n    return components;\n  }, [contextMenuItems, hideContextMenu]);\n\n  const anchorPosition = useMemo(\n    () => (contextMenuConfig ? { top: contextMenuConfig.mouseY, left: contextMenuConfig.mouseX } : undefined),\n    [contextMenuConfig],\n  );\n\n  const classes = useStyles();\n  return (\n    <Menu\n      elevation={2}\n      disablePortal\n      onClose={hideContextMenu}\n      transitionDuration={150}\n      open={!!contextMenuConfig}\n      anchorPosition={anchorPosition}\n      anchorReference=\"anchorPosition\"\n      classes={{ list: classes.contextMenuList }}\n    >\n      {contextMenuItemComponents}\n      <ListSubheader component=\"div\" className={classes.browserMenuTooltip}>\n        {browserMenuShortcutString}\n      </ListSubheader>\n    </Menu>\n  );\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n  contextMenuList: {\n    paddingBottom: important(0),\n    paddingTop: important(0),\n  },\n  browserMenuTooltip: {\n    lineHeight: important('30px'),\n    fontSize: important('0.7em'),\n  },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { FileList } from '../file-list/FileList';\nimport { FileBrowser } from './FileBrowser';\nimport { FileContextMenu } from './FileContextMenu';\nimport { FileNavbar } from './FileNavbar';\nimport { FileToolbar } from './FileToolbar';\n\nexport const FullFileBrowser = React.memo(\n  React.forwardRef<FileBrowserHandle, FileBrowserProps>((props, ref) => {\n    const { onScroll } = props;\n    return (\n      <FileBrowser ref={ref} {...props}>\n        {props.folderChain?.length ? <FileNavbar /> : undefined}\n        <FileToolbar />\n        <FileList onScroll={onScroll} />\n        <FileContextMenu />\n      </FileBrowser>\n    );\n  }),\n);\nFullFileBrowser.displayName = 'FullFileBrowser';\n","/**\n *\n */\n\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { ChonkyActions } from '../action-definitions';\nimport { FileActionData } from '../types/action-handler.types';\nimport { FileAction } from '../types/action.types';\nimport { FileArray, FileData } from '../types/file.types';\nimport { FileHelper } from '../util/file-helper';\n\nexport interface CustomFileData extends FileData {\n  parentId?: string;\n  childrenIds?: string[];\n}\nexport interface CustomFileMap<FT extends CustomFileData> {\n  [fileId: string]: FT;\n}\nexport interface FileMapParams<FT extends CustomFileData> {\n  baseFileMap: CustomFileMap<FT>;\n  initialFolderId: string;\n}\n\nexport const useFolderChain = <FT extends CustomFileData>(\n  fileMap: CustomFileMap<FT>,\n  currentFolderId: string,\n): FileArray<FT> => {\n  return useMemo(() => {\n    const currentFolder = fileMap[currentFolderId];\n\n    const folderChain = [currentFolder];\n\n    let parentId = currentFolder.parentId;\n    while (parentId) {\n      const parentFile = fileMap[parentId];\n      if (parentFile) {\n        folderChain.unshift(parentFile);\n        parentId = parentFile.parentId;\n      } else {\n        break;\n      }\n    }\n\n    return folderChain;\n  }, [currentFolderId, fileMap]);\n};\n\nexport const useFiles = <FT extends CustomFileData>(\n  fileMap: CustomFileMap<FT>,\n  currentFolderId: string,\n): FileArray<FT> => {\n  return useMemo(() => {\n    const currentFolder = fileMap[currentFolderId];\n    const childrenIds = currentFolder.childrenIds!;\n    const files = childrenIds.map((fileId: string) => fileMap[fileId]);\n    return files;\n  }, [currentFolderId, fileMap]);\n};\n\nexport const useFileMapMethods = <FT extends CustomFileData>(\n  baseFileMap: CustomFileMap<FT>,\n  initialFolderId: string,\n) => {\n  const [fileMap, setFileMap] = useState(baseFileMap);\n  const [currentFolderId, setCurrentFolderId] = useState(initialFolderId);\n  const resetFileMap = useCallback(() => {\n    setFileMap(baseFileMap);\n    setCurrentFolderId(initialFolderId);\n  }, [baseFileMap, initialFolderId]);\n  const moveFiles = useCallback(\n    (files: FT[], source: FT, destination: FT) =>\n      setFileMap((currentFileMap) => {\n        const newFileMap = { ...currentFileMap };\n        const moveFileIds = new Set(files.map((f) => f.id));\n\n        // Delete files from their source folder.\n        const newSourceChildrenIds = source.childrenIds!.filter((id) => !moveFileIds.has(id));\n        newFileMap[source.id] = {\n          ...source,\n          childrenIds: newSourceChildrenIds,\n          childrenCount: newSourceChildrenIds.length,\n        };\n\n        // Add the files to their destination folder.\n        const newDestinationChildrenIds = [...destination.childrenIds!, ...files.map((f) => f.id)];\n        newFileMap[destination.id] = {\n          ...destination,\n          childrenIds: newDestinationChildrenIds,\n          childrenCount: newDestinationChildrenIds.length,\n        };\n\n        // Finally, update the parent folder ID on the files from source folder\n        // ID to the destination folder ID.\n        files.forEach((file) => {\n          newFileMap[file.id] = {\n            ...file,\n            parentId: destination.id,\n          };\n        });\n\n        return newFileMap;\n      }),\n    [],\n  );\n\n  const methods = useMemo(\n    () => ({\n      setFileMap,\n      setCurrentFolderId,\n      resetFileMap,\n      moveFiles,\n    }),\n    [setFileMap, setCurrentFolderId, resetFileMap, moveFiles],\n  );\n  return {\n    fileMap,\n    currentFolderId,\n    methods,\n  };\n};\nexport type FileMethods = ReturnType<typeof useFileMapMethods>['methods'];\n\nexport const useFileActionHandler = (methods: FileMethods) => {\n  return useCallback(\n    (data: FileActionData<FileAction>) => {\n      if (data.id === ChonkyActions.OpenFiles.id) {\n        const { targetFile, files } = data.payload;\n        const fileToOpen = targetFile ?? files[0];\n        if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\n          methods.setCurrentFolderId(fileToOpen.id);\n        }\n      } else if (data.id === ChonkyActions.MoveFiles.id) {\n        methods.moveFiles(data.payload.files, data.payload.source!, data.payload.destination);\n      }\n    },\n    [methods],\n  );\n};\n\nexport const useFileMap = <FT extends CustomFileData = CustomFileData>({\n  baseFileMap,\n  initialFolderId,\n}: FileMapParams<FT>) => {\n  const { fileMap, currentFolderId, methods } = useFileMapMethods(baseFileMap, initialFolderId);\n  const folderChain = useFolderChain(fileMap, currentFolderId);\n  const files = useFiles(fileMap, currentFolderId);\n  const fileActionHandler = useFileActionHandler(methods as FileMethods);\n\n  const data = {\n    fileMap,\n    currentFolderId,\n    folderChain,\n    files,\n  };\n  return { data, methods, fileActionHandler };\n};\n"],"names":["SortOrder","UNINITIALIZED_SENTINEL","useStaticValue","factory","valueRef","useRef","current","useInstanceVariable","value","ref","useEffect","Logger","error","_console","_len","arguments","length","args","Array","_key","console","apply","concat","warn","_console2","_len2","_key2","debug","_console3","_len3","_key3","formatBullets","bullets","join","FileHelper","isDirectory","file","isDir","isHidden","isSymlink","isEncrypted","isClickable","isOpenable","openable","isSelectable","selectable","isDraggable","draggable","isDroppable","droppable","isDndOpenable","dndOpenable","getModDate","modDate","parseDate","maybeDate","Date","message","isNaN","getTime","getChildrenCount","childrenCount","sanitizeInputArray","mode","rawArray","sanitizedFiles","errorMessages","isArray","nonObjectFileCount","missingFieldFileCount","seenIds","Set","duplicateIds","i","item","id","name","has","add","push","size","repeatedIdsString","from","arrayString","itemString","errorMessageString","sanitizedArray","OptionIds","ShowHiddenFiles","ShowFoldersFirst","DarkMode","ChonkyIconName","selectInstanceId","state","instanceId","selectExternalFileActionHandler","externalFileActionHandler","selectFileActionMap","fileActionMap","selectFileActionIds","fileActionIds","selectFileActionData","fileActionId","selectToolbarItems","toolbarItems","selectContextMenuItems","contextMenuItems","selectFolderChain","folderChain","selectCurrentFolder","selectParentFolder","selectFileMap","fileMap","selectCleanFileIds","cleanFileIds","selectFileData","fileId","selectHiddenFileIdMap","hiddenFileIdMap","selectHiddenFileCount","Object","keys","selectFocusSearchInput","focusSearchInput","selectSearchString","searchString","selectSelectionMap","selectionMap","selectSelectedFileIds","selectSelectionSize","selectIsFileSelected","selectSelectedFiles","map","selectSelectedFilesForAction","action","requiresSelection","getSelectedFiles","fileFilter","selectSelectedFilesForActionCount","_getSelectedFilesForA","getSelectedFilesForAction","selectDisableSelection","disableSelection","selectForceEnableOpenParent","forceEnableOpenParent","selectHideToolbarInfo","hideToolbarInfo","selectFileViewConfig","fileViewConfig","selectSortActionId","sortActionId","selectSortOrder","sortOrder","selectOptionMap","optionMap","selectOptionValue","optionId","selectThumbnailGenerator","thumbnailGenerator","selectDoubleClickDelay","doubleClickDelay","selectIsDnDDisabled","disableDragAndDrop","selectClearSelectionOnOutsideClick","clearSelectionOnOutsideClick","selectContextMenuMounted","contextMenuMounted","selectContextMenuConfig","contextMenuConfig","selectContextMenuTriggerFile","_fileMap$config$trigg","config","triggerFileId","getFileActionMap","getOptionMap","getFileMap","getFileIds","fileIds","getCleanFileIds","getSortActionId","getSortOrder","getSearchString","_getLastClick","lastClick","makeGetAction","fileActionSelector","createSelector","makeGetOptionValue","defaultValue","undefined","makeGetFiles","fileIdsSelector","getSortedFileIds","files","sortAction","showFolderFirst","_sortFunctions$push","prepareSortKeySelector","selector","sortFunctions","desc","sortKeySelector","ASC","sort","by","getSearcher","cleanFiles","FuzzySearch","caseSensitive","getSearchFilteredFileIds","searcher","search","f","getHiddenFileIdMap","searchFilteredFileIds","showHiddenFiles","searchFilteredFileIdsSet","forEach","selectors","getDisplayFileIds","sortedFileIds","filter","getLastClickIndex","displayFileIds","index","getFileData","getIsFileSelected","selectedFiles","filters","reduce","prevFiles","FileViewMode","thunkUpdateRawFileActions","rawFileActions","disableDefaultFileActions","dispatch","defaultActionsToAdd","_sanitizeInputArray","disabledActionIds","DefaultFileActions","fileActions","_Array","seenActionIds","addToSeen","a","wasNotSeen","fileActionArrays","duplicateFreeArrays","arr","duplicateFreeArray","mergeFileActionsArrays","EssentialFileActions","optionDefaults","option","reduxActions","setRawFileActions","setFileActionsErrorMessages","setFileActions","setOptionDefaults","thunkUpdateToolbarNContextMenuItems","_step","excludedToolbarFileActionIds","ChonkyActions","OpenParentFolder","groupIcons","Actions","dropdown","Options","groupSortOrder","toolbarGroupItems","seenToolbarGroups","seenContextMenuGroups","getGroup","itemArray","seenMap","groupName","group","icon","_iterator","_createForOfIteratorHelperLoose","done","button","toolbar","contextMenu","b","updateFileActionMenuItems","thunkUpdateDefaultFileViewActionId","getState","_getState","setFileViewConfig","thunkActivateSortAction","_getState2","order","DESC","setSort","actionId","thunkDispatchFileAction","data","_dispatch","Promise","resolve","thunkRequestFileAction","payload","selectedFilesForAction","actionState","contextMenuTriggerFile","toggleOption","selectionTransform","prevSelection","hiddenFileIds","newSelection","clearSelection","selectFiles","reset","thunkApplySelectionTransform","effect","maybeEffectPromise","reduxDispatch","getReduxState","err","then","effectResult","triggerDispatchAfterEffect","I18nNamespace","defineFileAction","__payloadType","hotkeys","errorMessage","Error","findElementAmongAncestors","maybeElement","predicate","parentElement","getValueOrFallback","fallback","desiredType","EssentialActions","MouseClickFile","_ref","params","clickType","OpenFiles","targetFile","ctrlKey","toggleSelection","exclusive","setLastClickIndex","fileDisplayIndex","shiftKey","lastClickIndex","rangeStart","rangeEnd","_ref2","fileIdsToSelect","slice","KeyboardClickFile","_ref3","enterKey","spaceKey","StartDragNDrop","_ref4","draggedFile","EndDragNDrop","_ref5","destination","MoveFiles","_extends","ChangeSelection","openParentFolder","iconOnly","_ref6","reduxState","parentFolder","OpenFileContextMenu","_ref7","triggerFile","showContextMenu","mouseX","clientX","mouseY","clientY","DefaultActions","OpenSelection","openFiles","SelectAllFiles","selectAllFiles","ClearSelection","EnableListView","List","entryHeight","list","EnableCompactView","Compact","entryWidth","compact","EnableGridView","Grid","smallThumbnail","SortFilesByName","toLowerCase","SortFilesBySize","SortFilesByDate","ToggleHiddenFiles","ToggleShowFoldersFirst","FocusSearchInput","ToggleDarkMode","ExtraActions","CopyFiles","copy","CreateFolder","tooltip","folderCreate","UploadFiles","upload","DownloadFiles","download","DeleteFiles","trash","initialRootState","fileActionsErrorMessages","rawFolderChain","folderChainErrorMessages","rawFiles","filesErrorMessages","searchMode","reducers","setExternalFileActionHandler","_action$payload","_action$payload2","setRawFolderChain","setRawFiles","_sanitizeInputArray2","_i","_Object$keys","selectedFileId","setSortedFileIds","setHiddenFileIds","_i2","_Object$keys2","setFocusSearchInput","setSearchString","oldValue","setSelectionDisabled","_i3","_Object$keys3","setThumbnailGenerator","setDoubleClickDelay","setDisableDragAndDrop","setForceEnableOpenParent","setHideToolbarInfo","setClearSelectionOnOutsideClick","setContextMenuMounted","hideContextMenu","_createSlice","createSlice","initialState","actions","rootReducer","reducer","useChonkyStore","chonkyInstanceId","store","preloadedState","configureStore","middleware","getDefaultMiddleware","serializableCheck","devTools","selectionWatcher","watch","unsubscribeCallbacks","subscribe","oldSelection","selectedFilesIds","selection","_unsubscribeCallbacks","unsubscribe","useStoreWatchers","useParamSelector","parametrizedSelector","selectorParams","useCallback","useSelector","useDTE","actionCreator","useDispatch","usePropReduxUpdate","ChonkyIconPlaceholder","React","createElement","title","defaultConfig","onFileAction","disableDragAndDropProvider","defaultSortActionId","defaultFileViewActionId","iconComponent","darkMode","i18n","getI18nId","namespace","stringId","getActionI18nId","FileActions","useLocalizedFileActionStrings","intl","useIntl","useMemo","_action$button","_action$button2","buttonName","buttonTooltip","_action$button3","formatMessage","defaultMessage","useLocalizedFileEntryStrings","formatters","useContext","ChonkyFormattersContext","fileModDateString","formatFileModDate","fileSizeString","formatFileSize","defaultFormatters","safeModDate","formatDate","_intl","sizeData","filesize","bits","output","symbol","Math","round","createContext","ChonkyIconContext","VideoExtensions","ImageExtensions","AudioExtensions","ColorsLight","ColorsDark","iconTrie","colourIndex","IconsToExtensions","license","model","database","text","archive","image","video","code","info","key","lock","music","terminal","users","linux","ubuntu","windows","rust","python","nodejs","php","git","pdf","excel","word","flash","exactTrie","ExactTrie","ignoreCase","_IconsToExtensions","pair","extensions","put","colorCode","getIconTrie","lightTheme","colors","debugRed","debugBlue","debugGreen","debugPurple","debugYellow","textActive","fontSizes","rootPrimary","margins","rootLayoutMargin","root","borderRadius","borderStyle","height","lineHeight","buttonPadding","fontSize","buttonRadius","dnd","canDropColor","cannotDropColor","canDropMask","cannotDropMask","fileListCanDropMaskOne","fileListCanDropMaskTwo","fileListCannotDropMaskOne","fileListCannotDropMaskTwo","dragLayer","border","padding","fileList","desktopGridGutter","mobileGridGutter","gridFileEntry","childrenCountSize","iconColorFocused","iconSize","iconColor","fileColorTint","folderBackColorTint","folderFrontColorTint","listFileEntry","propertyFontSize","iconFontSize","iconBorderRadius","darkThemeOverride","mobileThemeOverride","useIsMobileBreakpoint","useMediaQuery","getStripeGradient","colorOne","colorTwo","makeLocalChonkyStyles","styles","createUseStyles","makeGlobalChonkyStyles","makeStyles","selectorMapping","useStyles","theme","localStyles","globalStyles","localSelector","globalSelector","classes","important","c","classnames","ChonkyBusinessLogicInner","memo","forwardRef","props","_props$files","useStore","useImperativeHandle","getFileSelection","setFileSelection","requestFileAction","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","useFileBrowserHandle","displayName","ChonkyBusinessLogic","useDndContextAvailable","DndContext","dragDropManager","ChonkyDndFileEntryType","layerStyles","position","pointerEvents","zIndex","left","top","width","getItemStyles","initialCursorOffset","initialFileOffset","currentFileOffset","display","transform","x","y","WebkitTransform","DnDFileListDragLayer","_useDragLayer","useDragLayer","monitor","getItem","itemType","getItemType","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","isDragging","selectionSize","style","className","fileDragPreview","Fragment","boxShadow","palette","divider","backgroundColor","background","color","primary","HotkeyListener","fileAction","hotkeysStr","hotkeyCallback","event","preventDefault","unbind","ChonkyPresentationLayer","children","dndDisabled","handleClickAway","target","element","tagName","hotkeyListenerComponents","dndContextAvailable","contextMenuMountedRef","altKey","fileEntryWrapperDiv","dataset","chonkyFileId","useContextMenuTrigger","ClickAwayListener","onClickAway","Box","chonkyRoot","onContextMenu","paper","touchAction","fontFamily","flexDirection","boxSizing","textAlign","webkitTouchCallout","webkitUserSelect","mozUserSelect","msUserSelect","userSelect","FileBrowser","shortid","generate","isMobileBreakpoint","muiOptions","muiThemeOptions","merge","muiTheme","createTheme","combinedTheme","chonkyComps","IntlProvider","locale","defaultLocale","Provider","ReduxProvider","ThemeProvider","StyledEngineProvider","injectFirst","MuiThemeProvider","DndProvider","backend","HTML5Backend","CustomVisibilityState","useFileDrop","forceDisableDrop","includeChildrenDrops","folderChainRef","onDrop","_item","canDrop","dropTarget","isOver","shallow","_item$payload","source","prohibitedFileIds","folder","collect","isOverCurrent","_useDropIfAvailable","mockHook","useDrop","useDropIfAvailable","accept","drop","_useDropIfAvailable$","dndIsOver","dndIsOverCurrent","dndCanDrop","useDndHoverOpen","dndState","currentFolderRef","_currentFolderRef$cur","timeout","setTimeout","clearTimeout","TextPlaceholder","min","max","placeholderLength","maxLength","minLength","floor","random","whitespace","repeat","textPlaceholder","dangerouslySetInnerHTML","__html","opacity","animationName","animationIterationCount","animationTimingFunction","animationDuration","whiteSpace","overflow","maxWidth","minWidth","useFileEntryHtmlProps","role","useFileEntryState","selected","focused","iconData","getWithCheckpoints","loading","useIconData","_useThumbnailUrl","useThumbnailUrl","thumbnailUrl","thumbnailLoading","fileColor","iconSpin","useDndIcon","dndIconName","dndCannotDrop","dndIsDragging","dndDragging","_useState","useState","setThumbnailUrl","_useState2","setThumbnailLoading","loadingAttempts","loadingCancelled","useFileActionTrigger","useFileActionProps","_action$option","optionValue","actionSelectionEmpty","_action$button$icon","active","disabled","sortAsc","sortDesc","placeholder","toggleOn","toggleOff","isSortButtonAndCurrentSort","isFileViewButtonAndCurrentView","isOptionAndEnabled","customDisabled","customActive","customVisibility","Disabled","Active","ToolbarButton","_c","externalClassName","onClick","ChonkyIcon","iconWithText","fallbackIcon","fixedWidth","baseButton","iconOnlyButton","activeButton","Button","iconDropdown","textTransform","letterSpacing","paddingBottom","paddingTop","paddingLeft","paddingRight","marginRight","marginLeft","marginTop","SmartToolbarButton","triggerAction","_useFileActionProps","_useLocalizedFileActi","Hidden","FolderChainButton","first","_useFileDrop","baseBreadcrumb","disabledBreadcrumb","currentBreadcrumb","folderChainIcon","buttonContainer","dndIndicator","textDecoration","FileNavbar","folderChainItems","items","_loop","folderChainComponents","components","component","navbarWrapper","navbarContainer","Breadcrumbs","navbarBreadcrumbs","separator","upDirectoryButton","flexGrow","ToolbarDropdownButton","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","minHeight","SmartToolbarDropdownButton","onClickFollowUp","handleClick","ToolbarDropdown","_React$useState","anchor","setAnchor","currentTarget","handleClose","menuItemComponents","toolbarButtonProps","FileActionGroups","Menu","autoFocus","keepMounted","elevation","anchorEl","onClose","open","Boolean","transitionDuration","dropdownList","ToolbarInfo","hiddenCount","fileCountString","Toolbar","fileCount","selectedString","hiddenString","infoContainer","Typography","infoText","variant","extraInfoSpan","selectionSizeText","hiddenCountText","ToolbarSearch","searchPlaceholderString","searchInputRef","reduxSearchString","localSearchString","setLocalSearchString","_useDebounce","delay","debouncedValue","setDebouncedValue","handler","useDebounce","debouncedLocalSearchString","showLoadingIndicator","setShowLoadingIndicator","focus","handleChange","handleKeyUp","blur","TextField","searchFieldContainer","onChange","inputRef","InputProps","onKeyUp","startAdornment","InputAdornment","searchIcon","spin","searchFieldInput","inputProps","searchFieldInputInner","margin","FileToolbar","toolbarItemComponents","toolbarWrapper","toolbarContainer","toolbarLeft","toolbarRight","flexWrap","toolbarLeftFiller","FileListEmpty","emptyString","FileList","fileListEmpty","fileListEmptyContent","folderOpen","ClickableWrapper","WrapperTag","wrapperTag","passthroughProps","onSingleClick","onDoubleClick","onKeyboardClick","setFocused","counter","clickCount","clickTimeout","mouseClickEvent","metaKey","useClickHandler","handleKeyDown","keyboardClickEvent","nativeEvent","stopPropagation","useKeyDownHandler","compProps","onFocus","onBlur","onKeyDown","tabIndex","mergedProps","FileEntryName","modifierIconComponents","modifierIcons","hidden","symlink","useModifierIconComponents","fileNameComponent","_file$ext","parts","extension","ext","split","substring","useFileNameComponent","CompactEntry","entryState","_useLocalizedFileEntr","fileEntryHtmlProps","listFileEntryIcon","listFileEntryDescription","listFileEntryName","listFileEntryProperties","listFileEntryProperty","alignItems","DnDFileEntry","_useFileEntryDnD","_useFileDrag","fileRef","getDndStartPayload","sourceInstanceId","canDrag","onDragStart","type","onDragEnd","dropResult","getDropResult","dropEffect","_useDragIfAvailable","useDrag","useDragIfAvailable","end","drag","preview","getEmptyImage","captureDraggingState","useFileDrag","useFileEntryDnD","fillParent","FileThumbnail","thumbnailStyle","backgroundImage","fileThumbnail","backgroundRepeat","backgroundPosition","backgroundSize","GridEntryDndIndicator","borderBottom","borderLeft","content","GridEntryPreviewFolder","folderClasses","useFolderStyles","fileClasses","useFileStyles","commonClasses","useCommonEntryStyles","previewFile","folderBackSideMid","folderBackSideTop","folderFrontSide","fileIcon","selectionIndicator","thumbnail","borderTopLeftRadius","borderTopRightRadius","right","borderRightColor","borderTopColor","borderBottomColor","borderLeftColor","borderWidth","bottom","shadows","GridEntryPreviewFile","_c2","focusIndicator","GridEntry","useFileEntryStyles","entryClassName","gridFileEntryPreview","gridFileEntryNameContainer","gridFileEntryName","wordBreak","ListEntry","styleState","listFileEntrySelection","textOverflow","flex","disabledDndState","SmartFileEntry","EntryComponent","displayIndex","fileViewMode","fileClickHandlers","onMouseClick","useFileClickHandlers","clickableWrapperProps","fileEntryClickableWrapper","fileEntryProps","outline","getGridConfig","viewConfig","columnCount","columnWidth","gutter","scrollbar","window","orientation","navigator","userAgent","indexOf","rowCount","ceil","rowHeight","GridContainer","gridRef","gridConfig","setGridConfig","gridConfigRef","oldConf","newConf","resetAfterRowIndex","resetAfterColumnIndex","resetAfterIndices","columnIndex","rowIndex","sizers","gc","getColumnWidth","getRowHeight","displayFileIdsRef","getItemKey","_displayFileIdsRef$cu","cellRenderer","styleWithGutter","VariableSizeGrid","gridContainer","estimatedRowHeight","estimatedColumnWidth","itemKey","ListContainer","listRef","FixedSizeList","listContainer","itemSize","itemCount","_displayFileIds$data$","borderTop","currentFolder","localClasses","useLocalStyles","onScroll","listRenderer","fileListWrapper","dndDropZone","dndDropZoneIcon","AutoSizer","disableHeight","maxHeight","FileContextMenu","browserMenuShortcutString","shortcut","useContextMenuDismisser","contextMenuItemComponents","anchorPosition","disablePortal","anchorReference","contextMenuList","ListSubheader","browserMenuTooltip","FullFileBrowser","_props$folderChain","useFolderChain","currentFolderId","parentId","parentFile","unshift","useFiles","childrenIds","useFileMapMethods","baseFileMap","initialFolderId","setFileMap","setCurrentFolderId","resetFileMap","moveFiles","currentFileMap","newFileMap","moveFileIds","newSourceChildrenIds","newDestinationChildrenIds","methods","useFileActionHandler","_data$payload","fileToOpen","_useFileMapMethods","fileActionHandler"],"mappings":"ggRAEO,ICIKA,EDYNC,EAAyB,CAAA,EAClBC,EAAiB,SAAIC,GAChC,IAAMC,EAAWC,SAAUJ,GAE3B,OADIG,EAASE,UAAYL,IAAwBG,EAASE,QAAUH,KAC7DC,EAASE,OAClB,EAEaC,EAAsB,SAAIC,GACrC,IAAMC,EAAMJ,SAAOG,GAInB,OAHAE,EAAAA,WAAU,WACRD,EAAIH,QAAUE,CAChB,GAAG,CAACC,EAAKD,IACFC,CACT,EE/BaE,EAAM,WAAA,SAAAA,IAAA,CAkBhB,OAlBgBA,EACHC,MAAP,WAA2B,IAAA,IAAAC,EAAAC,EAAAC,UAAAC,OAAXC,EAAWC,IAAAA,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAXF,EAAWE,GAAAJ,UAAAI,IAEhCN,EAAAO,SAAQR,MAAKS,MAAAR,GAAC,0BAAwBS,OAAKL,KAC5CN,EAEaY,KAAP,WAA0B,IAAA,IAAAC,EAAAC,EAAAV,UAAAC,OAAXC,EAAWC,IAAAA,MAAAO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAXT,EAAWS,GAAAX,UAAAW,IAE/BF,EAAAJ,SAAQG,KAAIF,MAAAG,GAAC,4BAA0BF,OAAKL,KAC7CN,EAEagB,MAAP,WAA2B,IAAA,IAAAC,EAAAC,EAAAd,UAAAC,OAAXC,EAAWC,IAAAA,MAAAW,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAXb,EAAWa,GAAAf,UAAAe,IAEhCF,EAAAR,SAAQO,MAAKN,MAAAO,GAAC,0BAAwBN,OAAKL,KAC5CN,EAEaoB,cAAP,SAAqBC,GAC1B,MAAA,OAAcA,EAAQC,KAAK,SAC5BtB,CAAA,CAlBgB,GCKNuB,EAAU,WAAA,SAAAA,IAAA,CAwFpB,OAxFoBA,EACPC,YAAP,SAAmBC,GAExB,QAASA,IAAuB,IAAfA,EAAKC,OACvBH,EAEaI,SAAP,SAAgBF,GAErB,QAASA,IAA0B,IAAlBA,EAAKE,UACvBJ,EAEaK,UAAP,SAAiBH,GAEtB,QAASA,IAA2B,IAAnBA,EAAKG,WACvBL,EAEaM,YAAP,SAAmBJ,GAExB,QAASA,IAA6B,IAArBA,EAAKI,aACvBN,EAEaO,YAAP,SAAmBL,GAExB,QAASA,GACVF,EAEaQ,WAAP,SAAkBN,GAEvB,QAASA,IAA0B,IAAlBA,EAAKO,UACvBT,EAEaU,aAAP,SAAoBR,GAEzB,QAASA,IAA4B,IAApBA,EAAKS,YACvBX,EAEaY,YAAP,SAAmBV,GAExB,QAASA,IAA2B,IAAnBA,EAAKW,WACvBb,EAEac,YAAP,SAAmBZ,GAExB,SAAKA,KACDA,EAAKC,QAA4B,IAAnBD,EAAKa,aACG,IAAnBb,EAAKa,YACbf,EAEagB,cAAP,SAAqBd,GAE1B,SAAKF,EAAWQ,WAAWN,MACvBA,EAAKC,QAA8B,IAArBD,EAAKe,eACK,IAArBf,EAAKe,cACbjB,EAEakB,WAAP,SAAkBhB,GACvB,OAAKA,GAAD,MAASA,EAAKiB,QACXnB,EAAWoB,UAAUlB,EAAKiB,SADwC,MAE1EnB,EAEaoB,UAAP,SAAiBC,GACtB,GAAyB,iBAAdA,GAA+C,iBAAdA,EAE1C,IACE,OAAO,IAAIC,KAAKD,EACjB,CAAC,MAAO3C,GAEPD,EAAOC,MAAK,yDADAA,EAEmD6C,QAC7D,IAAA,iBACAF,EAEJ,CAEF,OAAIA,aAAqBC,OAASE,MAAMH,EAAUI,WAEzCJ,GAIT5C,EAAOY,KAAK,mCAAoCgC,GACzC,OACRrB,EAEa0B,iBAAP,SAAwBxB,GAC7B,OAAKA,GAAsC,iBAAvBA,EAAKyB,cAElBzB,EAAKyB,cAFgD,MAG7D3B,CAAA,CAxFoB,GCgBV4B,EAAoC,SAACC,EAAcC,GAC9D,IAAMC,EAAiB,GACjBC,EAA0B,GAEhC,GAAc,gBAATH,GAAmC,gBAATA,GAA4BC,EAEpD,GAAK9C,MAAMiD,QAAQH,GAEnB,CAML,IALA,IAAII,EAAqB,EACrBC,EAAwB,EACtBC,EAAU,IAAIC,IACdC,EAAe,IAAID,IAEhBE,EAAI,EAAGA,EAAIT,EAAShD,SAAUyD,EAAG,CACxC,IAAMC,EAAOV,EAASS,GACjBC,EAGsB,iBAATA,EAChBN,KAEKM,EAAKC,IAAgB,gBAATZ,IAA2BW,EAAKE,KAC/CP,IACSC,EAAQO,IAAIH,EAAKC,IAC1BH,EAAaM,IAAIJ,EAAKC,KAEtBL,EAAQQ,IAAIJ,EAAKC,IACjBV,EAAec,KAAKL,IAXT,gBAATX,EAAwBK,IACvBH,EAAec,KAAK,KAa7B,CAeA,GAbIX,GACFF,EAAca,KACZ,YAAYX,EAAZ,iGAIAC,GACFH,EAAca,KACZ,YAAYV,EAAZ,gHAKAG,EAAaQ,KAAO,EAAG,CACzB,IAAMC,EAAoB,IAAM/D,MAAMgE,KAAKV,GAAcvC,KAAK,QAAU,IACxEiC,EAAca,KACZ,YAAYP,EAAaQ,KAAzB,yIAE6CC,EAEjD,CACF,MA/CEf,EAAca,KAAkBhB,aAAAA,wCAA0CC,gBAiD5E,GAAIE,EAAclD,OAAS,EAAG,CAC5B,IACImE,EACAC,EAFEC,EAAqB,OAASnB,EAAcjC,KAAK,QAG1C,gBAAT8B,GACFoB,EAAc,eACdC,EAAa,SACK,gBAATrB,GACToB,EAAc,eACdC,EAAa,iBAGbD,EAAc,QACdC,EAAa,SAGfzE,EAAOC,MACL,4CAA4CuE,EAA5C,qBACeC,EADf,+DAEwBC,EAE5B,CAEA,MAAO,CACLC,eAAgBrB,EAChBC,cAAAA,EAEJ,ECrGaqB,EAAY,CACvBC,gBAAiB,oBACjBC,iBAAkB,qBAClBC,SAAU,cJAZ,SAAY1F,GACVA,EAAA,IAAA,MACAA,EAAA,KAAA,MACD,CAHD,CAAYA,IAAAA,EAGX,CAAA,QKPW2F,ECWCC,EAAmB,SAACC,GAAgB,OAAKA,EAAMC,UAAU,EACzDC,EAAkC,SAACF,GAAgB,OAAKA,EAAMG,yBAAyB,EAEvFC,EAAsB,SAACJ,GAAgB,OAAKA,EAAMK,aAAa,EAC/DC,EAAsB,SAACN,GAAgB,OAAKA,EAAMO,aAAa,EAC/DC,EAAuB,SAACC,GAAoB,OAAK,SAACT,GAAgB,OAC7EI,EAAoBJ,GAAOS,EAAa,CAAA,EAC7BC,EAAqB,SAACV,GAAgB,OAAKA,EAAMW,YAAY,EAC7DC,EAAyB,SAACZ,GAAgB,OAAKA,EAAMa,gBAAgB,EAErEC,EAAoB,SAACd,GAAgB,OAAKA,EAAMe,WAAW,EAC3DC,GAAsB,SAAChB,GAClC,IAAMe,EAAcD,EAAkBd,GAEtC,OADsBe,EAAY5F,OAAS,EAAI4F,EAAYA,EAAY5F,OAAS,GAAK,IAEvF,EACa8F,GAAqB,SAACjB,GACjC,IAAMe,EAAcD,EAAkBd,GAEtC,OADqBe,EAAY5F,OAAS,EAAI4F,EAAYA,EAAY5F,OAAS,GAAK,IAEtF,EAGa+F,GAAgB,SAAClB,GAAgB,OAAKA,EAAMmB,OAAO,EACnDC,GAAqB,SAACpB,GAAgB,OAAKA,EAAMqB,YAAY,EAC7DC,GAAiB,SAACC,GAAwB,OAAK,SAACvB,GAAgB,OAC3EuB,EAASL,GAAclB,GAAOuB,GAAU,IAAI,CAAA,EAEjCC,GAAwB,SAACxB,GAAgB,OAAKA,EAAMyB,eAAe,EACnEC,GAAwB,SAAC1B,GAAgB,OAAK2B,OAAOC,KAAKJ,GAAsBxB,IAAQ7E,MAAM,EAE9F0G,GAAyB,SAAC7B,GAAgB,OAAKA,EAAM8B,gBAAgB,EACrEC,GAAqB,SAAC/B,GAAgB,OAAKA,EAAMgC,YAAY,EAE7DC,GAAqB,SAACjC,GAAgB,OAAKA,EAAMkC,YAAY,EAC7DC,GAAwB,SAACnC,GAAgB,OAAK2B,OAAOC,KAAKK,GAAmBjC,GAAO,EACpFoC,GAAsB,SAACpC,GAAgB,OAAKmC,GAAsBnC,GAAO7E,MAAM,EAC/EkH,GAAuB,SAACd,GAAwB,OAAK,SAACvB,GAAgB,QAC/EuB,KAAYU,GAAmBjC,GAAOuB,EAAO,CAAA,EACpCe,GAAsB,SAACtC,GAClC,IAAMmB,EAAUD,GAAclB,GAC9B,OAAO2B,OAAOC,KAAKK,GAAmBjC,IAAQuC,KAAI,SAACzD,GAAE,OAAKqC,EAAQrC,KACpE,EACa0D,GAA+B,SAAC/B,GAAoB,OAAK,SAACT,GACrE,IACMyC,EADoBzC,EAAlBK,cACqBI,GAC7B,GAAKgC,GAAWA,EAAOC,kBAEvB,OAAOC,GAAiB3C,EAAOyC,EAAOG,YACvC,EACYC,GAAoC,SAACpC,GAAoB,OAAK,SAACT,GAAgB,IAAA8C,EAAA,OAC5C,OAD4CA,EAC1FC,GAA0B/C,EAAOS,SAAa,EAA9CqC,EAAgD3H,MAAM,CAAA,EAC3C6H,GAAyB,SAAChD,GAAgB,OAAKA,EAAMiD,gBAAgB,EACrEC,GAA8B,SAAClD,GAAgB,OAAKA,EAAMmD,qBAAqB,EAC/EC,GAAwB,SAACpD,GAAgB,OAAKA,EAAMqD,eAAe,EAEnEC,GAAuB,SAACtD,GAAgB,OAAKA,EAAMuD,cAAc,EAEjEC,GAAqB,SAACxD,GAAgB,OAAKA,EAAMyD,YAAY,EAC7DC,GAAkB,SAAC1D,GAAgB,OAAKA,EAAM2D,SAAS,EAEvDC,GAAkB,SAAC5D,GAAgB,OAAKA,EAAM6D,SAAS,EACvDC,GAAoB,SAACC,GAAgB,OAAK,SAAC/D,GAAgB,OAAK4D,GAAgB5D,GAAO+D,EAAS,CAAA,EAEhGC,GAA2B,SAAChE,GAAgB,OAAKA,EAAMiE,kBAAkB,EACzEC,GAAyB,SAAClE,GAAgB,OAAKA,EAAMmE,gBAAgB,EACrEC,GAAsB,SAACpE,GAAgB,OAAKA,EAAMqE,kBAAkB,EACpEC,GAAqC,SAACtE,GAAgB,OAAKA,EAAMuE,4BAA4B,EAE7FC,GAA2B,SAACxE,GAAgB,OAAKA,EAAMyE,kBAAkB,EACzEC,GAA0B,SAAC1E,GAAgB,OAAKA,EAAM2E,iBAAiB,EACvEC,GAA+B,SAAC5E,GAAoB,IAAA6E,EACzDC,EAASJ,GAAwB1E,GACvC,OAAK8E,GAAWA,EAAOC,eAEa,OAApCF,EADgB3D,GAAclB,GACf8E,EAAOC,gBAAcF,EAFS,IAG/C,EAGMG,GAAmB,SAAChF,GAAgB,OAAKA,EAAMK,aAAa,EAC5D4E,GAAe,SAACjF,GAAgB,OAAKA,EAAM6D,SAAS,EACpDqB,GAAa,SAAClF,GAAgB,OAAKA,EAAMmB,OAAO,EAChDgE,GAAa,SAACnF,GAAgB,OAAKA,EAAMoF,OAAO,EAChDC,GAAkB,SAACrF,GAAgB,OAAKA,EAAMqB,YAAY,EAC1DiE,GAAkB,SAACtF,GAAgB,OAAKA,EAAMyD,YAAY,EAC1D8B,GAAe,SAACvF,GAAgB,OAAKA,EAAM2D,SAAS,EACpD6B,GAAkB,SAACxF,GAAgB,OAAKA,EAAMgC,YAAY,EAC1DyD,GAAgB,SAACzF,GAAgB,OAAKA,EAAM0F,SAAS,EAGrDC,GAAgB,SAACC,GAA0D,OAC/EC,EAAAA,eAAe,CAACb,GAAkBY,IAAqB,SAACvF,EAAeI,GAAY,OACjFA,GAAgBJ,EAAcI,GAAgBJ,EAAcI,GAAgB,OAC7E,EACGqF,GAAqB,SAAC/B,EAAkBgC,GAA6B,YAA7B,IAAAA,IAAAA,OAAoBC,GAChEH,iBAAe,CAACZ,KAAe,SAACpB,GAC9B,IAAMlJ,EAAQkJ,EAAUE,GACxB,YAAciC,IAAVrL,EACKoL,EAEFpL,CACT,GAAE,EACEsL,GAAe,SAACC,GAAyD,OAC7EL,EAAAA,eACE,CAACX,GAAYgB,IACb,SAAC/E,EAASiE,GAAO,OAAgBA,EAAQ7C,KAAI,SAAChB,GAAM,OAAMA,GAAUJ,EAAQI,GAAUJ,EAAQI,GAAU,IAAI,MAC7G,EACG4E,GAAmBN,EAAAA,eACvB,CACEV,GACAI,GACAU,GAAad,IACbQ,GAAcL,IACdQ,GAAmBpG,EAAUE,kBAAkB,KAEjD,SAACwF,EAASzB,EAAWyC,EAAOC,EAAYC,GACtC,IAAKD,EAGH,OAAOjB,EAGT,IAcgCmB,EAd1BC,EAAyB,SAACC,GAA6B,OAAK,SAAClK,GAAwB,OAAKkK,EAASlK,EAAK,CAAA,EAExGmK,EAGA,GAeN,OAbIJ,GAGFI,EAAcxH,KAAK,CACjByH,KAAMH,EAAuBnK,EAAWC,eAGxC+J,EAAWO,iBAEbF,EAAcxH,OAAIqH,EAAAA,CAAAA,GADI5C,IAAcxJ,EAAU0M,IAAM,MAAQ,QAEzCL,EAAuBH,EAAWO,iBAAgBL,IAG1C,IAAzBG,EAAcvL,OAAqBiK,EAGjB0B,EAAAA,QAAIrL,OAAK2K,IAC5BW,GAAGL,GACHnE,KAAI,SAAChG,GAAI,OAAMA,EAAOA,EAAKuC,GAAK,IAAI,GAEzC,IAEIkI,GAAcnB,EAAcA,eAChC,CAACI,GAAaZ,MACd,SAAC4B,GAAU,OAAK,IAAIC,EAAYD,EAA0B,CAAC,QAAS,CAAEE,eAAe,GAAQ,IAEzFC,GAA2BvB,EAAAA,eAC/B,CAACR,GAAiBG,GAAiBwB,KACnC,SAAC3F,EAAcW,EAAcqF,GAAQ,OACnCrF,EAAeqF,EAASC,OAAOtF,GAAcO,KAAI,SAACgF,GAAC,OAAKA,EAAEzI,EAAE,IAAIuC,CAAY,IAE1EmG,GAAqB3B,EAAAA,eACzB,CAACuB,GAA0BnB,GAAaZ,IAAkBS,GAAmBpG,EAAUC,mBACvF,SAAC8H,EAAuBR,EAAYS,GAClC,IAAMC,EAA2B,IAAIjJ,IAAI+I,GACnChG,EAAuB,CAAA,EAW7B,OAVAwF,EAAWW,SAAQ,SAACrL,GACbA,IACKoL,EAAyB3I,IAAIzC,EAAKuC,KAGhC4I,GAAmBrL,EAAWI,SAASF,KAEjDkF,EAAgBlF,EAAKuC,KAAM,GAH3B2C,EAAgBlF,EAAKuC,KAAM,EAK/B,IACO2C,CACT,IAsBWoG,GAAY,CAEvB7C,iBAAAA,GACAC,aAAAA,GACAC,WAAAA,GACAC,WAAAA,GACAE,gBAAAA,GACAC,gBAAAA,GACAC,aAAAA,GACAC,gBAAAA,GACAC,cAAAA,GAGAU,iBAAAA,GACAa,YAAAA,GACAI,yBAAAA,GACAI,mBAAAA,GACAM,kBArCwBjC,EAAcA,eACtC,CAACM,GAAkBqB,KAEnB,SAACO,EAAetG,GAAe,OAAKsG,EAAcC,QAAO,SAAClJ,GAAE,OAAMA,IAAO2C,EAAgB3C,KAAI,IAmC7FmJ,kBAjCwBpC,EAAcA,eACtC,CAACJ,GAAeU,KAEhB,SAACT,EAAWwC,GACV,OACGxC,GACDA,EAAUyC,MAAQD,EAAe/M,OAAS,GAC1CuK,EAAUnE,QAAU2G,EAAexC,EAAUyC,OAEtC,KAEFzC,EAAUyC,KACnB,IAwBAxC,cAAAA,GACAG,mBAAAA,GACAG,aAAAA,IAIWmC,GAAc,SAACpI,EAAkBuB,GAAwB,OACpEA,EAASL,GAAclB,GAAOuB,GAAU,IAAI,EACjC8G,GAAoB,SAACrI,EAAkBzD,GAGlD,QAAS0F,GAAmBjC,GAAOzD,EAAKuC,GAC1C,EACa6D,GAAmB,SAAC3C,GAG0C,IAFzE,IAAQmB,EAA0BnB,EAA1BmB,QAEFmH,EAAgB3G,OAAOC,KAFK5B,EAAjBkC,cAE+BK,KAAI,SAACzD,GAAE,OAAKqC,EAAQrC,MAAK7D,EAAAC,UAAAC,OAHrBoN,MAA8BlN,MAAAJ,EAAAA,EAAAA,OAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAA9BiN,EAA8BjN,EAAAJ,GAAAA,UAAAI,GAQlF,OAJ8BiN,EAAQC,QACpC,SAACC,EAAWT,GAAM,OAAMA,EAASS,EAAUT,OAAOA,GAAUS,CAAU,GACtEH,EAGJ,EACavF,GAA4B,SAAC/C,EAAkBS,GAAoB,OAC9E+B,GAA6B/B,EAA7B+B,CAA2CxC,EAAM,ED9PvCF,QAoFXA,oBAAA,GApFWA,EAAAA,QAAcA,iBAAdA,uBAoFX,CAAA,IAlFC,QAAA,UACAA,EAAA,SAAA,WACAA,EAAA,YAAA,cAGAA,EAAA,YAAA,cACAA,EAAA,WAAA,aACAA,EAAA,cAAA,gBAGAA,EAAA,UAAA,YACAA,EAAA,iBAAA,mBACAA,EAAA,KAAA,OACAA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,eAAA,iBACAA,EAAA,eAAA,iBAGAA,EAAA,QAAA,UACAA,EAAA,SAAA,WACAA,EAAA,SAAA,WACAA,EAAA,UAAA,YAGAA,EAAA,KAAA,OACAA,EAAA,QAAA,UACAA,EAAA,eAAA,iBACAA,EAAA,eAAA,iBAGAA,EAAA,OAAA,SACAA,EAAA,aAAA,eACAA,EAAA,WAAA,aACAA,EAAA,qBAAA,uBACAA,EAAA,SAAA,WACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QACAA,EAAA,aAAA,eAGAA,EAAA,QAAA,UACAA,EAAA,OAAA,SAGAA,EAAA,KAAA,OACAA,EAAA,QAAA,UACAA,EAAA,KAAA,OACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QACAA,EAAA,SAAA,WACAA,EAAA,KAAA,OACAA,EAAA,QAAA,UACAA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAA,KAAA,OACAA,EAAA,IAAA,MACAA,EAAA,KAAA,OACAA,EAAA,MAAA,QACAA,EAAA,SAAA,WACAA,EAAA,MAAA,QAGAA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,QAAA,UAGAA,EAAA,KAAA,OACAA,EAAA,OAAA,SACAA,EAAA,OAAA,SACAA,EAAA,IAAA,MAGAA,EAAA,IAAA,MAGAA,EAAA,IAAA,MACAA,EAAA,MAAA,QACAA,EAAA,KAAA,OACAA,EAAA,MAAA,QEtEF,ICfY4I,GD4BCC,GACX,SAACC,EAAoCC,GAAsD,OAC3F,SAACC,GACC,IAGIC,EAHJC,EAA0C/K,EAAmB,cAAe2K,GAApEnJ,EAAcuJ,EAAdvJ,eAAgBpB,EAAa2K,EAAb3K,cAIxB,GAAIhD,MAAMiD,QAAQuK,GAA4B,CAC5C,IAAMI,EAAoB,IAAIvK,IAAImK,GAClCE,EAAsBG,GAAmBlB,QAAO,SAACvF,GAAM,OAAMwG,EAAkBjK,IAAIyD,EAAO3D,MAC3F,MACCiK,EADSF,EACa,GAEAK,GAGxB,IAAMC,EA7BqB,WAGkC,IAHoB,IAAAC,EAC7EC,EAAgB,IAAI3K,IACpB4K,EAAY,SAACC,GAAa,QAAOF,EAAcpK,IAAIsK,EAAEzK,GAAG,EACxD0K,EAAa,SAACD,GAAa,OAAMF,EAAcrK,IAAIuK,EAAEzK,GAAG,EAAC7D,EAAAC,UAAAC,OAH9BsO,EAAgCpO,IAAAA,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAhCmO,EAAgCnO,GAAAJ,UAAAI,GAKjE,IAAMoO,EAAsBD,EAAiBlH,KAAI,SAACoH,GAChD,IAAMC,EAAqBD,EAAI3B,OAAOwB,GAEtC,OADAI,EAAmBrH,IAAI+G,GAChBM,CACT,IACA,OAAOR,EAAI/N,IAAAA,OAAoBI,OAAMD,MAAA4N,EAAIM,EAC3C,CAkBwBG,CAAuBpK,EAAgBqK,GAAsBf,GAC3EgB,EAAsB,CAAA,EAC5BZ,EAAY5G,KAAI,SAACgH,GAAC,OAAMA,EAAES,OAAUD,EAAeR,EAAES,OAAOlL,IAAMyK,EAAES,OAAOjE,aAAgB,IAAI,IAE/F+C,EAASmB,GAAaC,kBAAkBtB,IACxCE,EAASmB,GAAaE,4BAA4B9L,IAClDyK,EAASmB,GAAaG,eAAejB,IACrCL,EAASmB,GAAaI,kBAAkBN,IACxCjB,EAASwB,GAAoCnB,IAC9C,EAEUmB,GACX,SAACnB,GAAyB,OAC1B,SAACL,GAwCC,IAvCA,IAuCgCyB,EAvC1BC,EAA+B,IAAI9L,IAAY,CAGnD+L,GAAcC,iBAAiB5L,KAK3B6L,EAA6C,CACjDC,QAAS9K,QAAcA,eAAC+K,SACxBC,QAAShL,QAAcA,eAACgF,QAEpBiG,EAAyC,CAC7CD,QAAS,EACTF,QAAS,GAKLjK,EAAqC,GACrCqK,EAAuC,GACvCC,EAAkC,CAAA,EAElCpK,EAAyC,GACzCqK,EAAsC,CAAA,EAEtCC,EAAW,SAACC,EAAiCC,EAAuBC,GACxE,GAAID,EAAQC,GAAY,OAAOD,EAAQC,GACvC,IAAMC,EAAyB,CAC7BxM,KAAMuM,EACNE,KAAMb,EAAWW,IAAc,KAC/B3H,UAAWoH,EAAeO,KAAe,EACzC/K,cAAe,IAIjB,OAFA6K,EAAUlM,KAAKqM,GACfF,EAAQC,GAAaC,EACdA,GAGTE,EAAAC,EAAqBvC,KAAWoB,EAAAkB,KAAAE,MAAE,CAAA,IAAvBlJ,EAAM8H,EAAA5P,MACTiR,EAASnJ,EAAOmJ,OACjBA,IAEDA,EAAOC,UAAYrB,EAA6BxL,IAAIyD,EAAO3D,MACzD8M,EAAOL,MACKJ,EAASH,EAAmBC,EAAmBW,EAAOL,OAC9DhL,cAAcrB,KAAKuD,EAAO3D,IAEhC6B,EAAazB,KAAKuD,EAAO3D,KAIzB8M,EAAOE,cACLF,EAAOL,MACKJ,EAAStK,EAAkBqK,EAAuBU,EAAOL,OACjEhL,cAAcrB,KAAKuD,EAAO3D,IAEhC+B,EAAiB3B,KAAKuD,EAAO3D,KAGnC,CAEAkM,EAAkBlE,MAAK,SAACyC,EAAGwC,GAAC,OAAKxC,EAAE5F,UAAYoI,EAAEpI,aACjDmF,EAASmB,GAAa+B,0BAA0B,CAAAvQ,GAAAA,OAAKkF,EAAiBqK,GAAoBnK,KAC3F,EAEUoL,GACX,SAACxL,GAA6B,OAC9B,SAACqI,EAAUoD,GACT,IAAAC,EAA0BD,IACpBzJ,EAAShC,EADM0L,EAAb9L,cACoCI,GAAgB,KACxDgC,GAAUA,EAAOc,gBACnBuF,EAASmB,GAAamC,kBAAkB3J,EAAOc,iBAElD,EAEU8I,GACX,SAAC5L,GAA6B,OAC9B,SAACqI,EAAUoD,GACT,GAAKzL,EAAL,CAEA,IAAA6L,EAA0EJ,IACpEzJ,EAD+D6J,EAAbjM,cAC3BI,GAC7B,GAAKgC,GAAWA,EAAOmE,gBAAvB,CAEA,IAAI2F,EAJkDD,EAAnB3I,YAIVxJ,EAAU0M,IAAM1M,EAAUqS,KAAOrS,EAAU0M,IAJnCyF,EAAzB7I,eAKYhD,IAClB8L,EAAQpS,EAAU0M,KAGpBiC,EAASmB,GAAawC,QAAQ,CAAEC,SAAUjM,EAAc8L,MAAOA,IAPvB,CAJrB,EAYpB,EElIUI,GACX,SAACC,GAAgC,OACjC,SAACC,EAAWX,GACVpR,EAAOgB,MAAK,0BAA2B8Q,EAAK9N,GAAO,IAAA,QAAS8N,GAC5D,IAAM5M,EAAQkM,IACRzJ,EAASrC,EAAoBJ,GAAO4M,EAAK9N,IACzCqB,EAA4BD,EAAgCF,GAC9DyC,EACEtC,GACF2M,QAAQC,QAAQ5M,EAA0ByM,IAAM,OAAO,SAAC7R,GAAK,OAC3DD,EAAOC,0DAA0DA,EAAM6C,YAI3E9C,EAAOY,KACL,uCAAuCkR,EAAK9N,GAA5C,sDAGL,EAQUkO,GACX,SAA4BvK,EAAgBwK,GAAgC,OAC5E,SAACnE,EAAUoD,GACTpR,EAAOgB,MAA+B2G,yBAAAA,EAAO3D,GAAE,IAAK,UAAW2D,EAAQ,WAAYwK,GACnF,IAAMjN,EAAQkM,IACRjM,EAAaF,EAAiBC,GAE/BI,EAAoBJ,GAAOyC,EAAO3D,KACrChE,EAAOY,KACL,eAAe+G,EAAO3D,GAAtB,kMAQJ,IAAMwJ,EAAgBhG,GAAoBtC,GACpCkN,EAAyBzK,EAAOG,WAAa0F,EAAcN,OAAOvF,EAAOG,YAAc0F,EAC7F,IAAI7F,EAAOC,mBAAuD,IAAlCwK,EAAuB/R,OAAvD,CASA,IACMgS,EAAmC,CACvClN,WAAAA,EACAqI,cAAAA,EACA4E,uBAAAA,EACAE,uBAL6BxI,GAA6B5E,IASpCyC,EAAOmE,iBACVkC,EAASuD,GAAwB5J,EAAO3D,KAG7D,IAAMyE,EAAiBd,EAAOc,eAC1BA,GAAgBuF,EAASmB,GAAamC,kBAAkB7I,IAG5D,IAAMyG,EAASvH,EAAOuH,OAClBA,GAAQlB,EAASmB,GAAaoD,aAAarD,EAAOlL,KAG3B2D,EAAO6K,oBACVxE,EFyD1B,SAACrG,GAAkB,OACnB,SAACqG,EAAUoD,GACT,IAAMoB,EAAqB7K,EAAO6K,mBAClC,GAAKA,EAAL,CAEA,IAAMtN,EAAQkM,IACRqB,EAAgB,IAAI7O,IAAYiD,OAAOC,KAAKK,GAAmBjC,KAC/DwN,EAAgB,IAAI9O,IAAYiD,OAAOC,KAAKJ,GAAsBxB,KAElEyN,EAAeH,EAAmB,CACtCC,cAAAA,EACAnI,QAAShE,GAAmBpB,GAC5BmB,QAASD,GAAclB,GACvBwN,cAAAA,IAEGC,GAGH3E,EADwB,IAAtB2E,EAAatO,KACN8K,GAAayD,iBAEbzD,GAAa0D,YAAY,CAAEvI,QAAS/J,MAAMgE,KAAKoO,GAAeG,OAAO,IAjBvD,EAmB1B,CE/EkCC,CAA6BpL,IAG9D,IAAMqL,EAASrL,EAAOqL,OAClBC,OAAwD/H,EAC5D,GAAI8H,EACF,IACEC,EAAqBD,EAAO,CAC1BrL,OAAAA,EACAwK,QAAAA,EACAjN,MAAOmN,EACPa,cAAelF,EACfmF,cAAe/B,GAElB,CAAC,MAAOgC,GAEPpT,EAAOC,MAAM,2CAA2C0H,EAAO3D,GAAlD,oBADCoP,EACkFtQ,QAClG,CAKF,OAAOkP,QAAQC,QAAQgB,GACpBI,MAAK,SAACC,GAOLC,GAA2BvF,EANU,CACnChK,GAAI2D,EAAO3D,GACX2D,OAAAA,EACAwK,QAAAA,EACAjN,MAAOmN,GAEkCiB,EAC7C,IAAE,OACK,SAACrT,GACND,EAAOC,MACL,2CAA2C0H,EAAO3D,GAAlD,0CACgC/D,EAAM6C,SAQxCyQ,GAA2BvF,EANU,CACnChK,GAAI2D,EAAO3D,GACX2D,OAAAA,EACAwK,QAAAA,EACAjN,MAAOmN,QAEkCnH,EAC7C,GApEF,CANElL,EAAOY,KACL,sCAAsC+G,EAAO3D,GAA7C,8HA0EL,EAEUuP,GAA6B,SACxCvF,EACA8D,EACAwB,IAEyC,IAAjBA,GACFtF,EAAS6D,GAAwBC,GACzD,EDrJYlE,QAIXA,kBAAA,GAJWA,GAAAA,QAAYA,eAAZA,qBAIX,CAAA,IAHC,KAAA,OACAA,GAAA,QAAA,UACAA,GAAA,KAAA,OEmBK,ICZK4F,GDYCC,GAAmB,SAC9B9L,EACAqL,GAEA,QAA6B9H,IAAzBvD,EAAO+L,gBAAgC/L,EAAOgM,SAAWhM,EAAOmJ,QAAS,CAC3E,IAAM8C,EACJ,oDAAoDjM,EAAO3D,GAA3D,6KAKF,MADAhE,EAAOC,MAAM2T,GACP,IAAIC,MAAMD,EAClB,CAGA,OADAjM,EAAOqL,OAASA,EACTrL,CACT,EAOamM,GAA4B,SAA5BA,EACXC,EACAC,GAEA,OAAKD,EAEDC,EAAUD,GAAsBA,EAEhCA,EAAaE,cACRH,EAA0BC,EAAaE,cAAeD,GAGxD,KARmBD,CAS5B,EASaG,GAAqB,SAChCrU,EACAsU,EACAC,GAEA,OAAIA,SACavU,IAAUuU,EAAcvU,EAAQsU,OAE/BjJ,IAAVrL,EAAsBA,EAAQsU,CACxC,EEjDaE,GAAmB,CAK9BC,eAAgBb,GACd,CACEzP,GAAI,mBACJ0P,cAAe,CAA2B,IAE5C,SAAAa,GAA8C,IC9B7CC,ED8BErC,EAAOoC,EAAPpC,QAASe,EAAaqB,EAAbrB,cAAeC,EAAaoB,EAAbpB,cACzB,GAA0B,WAAtBhB,EAAQsC,UACNlT,EAAWQ,WAAWoQ,EAAQ1Q,OAChCyR,EACEhB,GAAuBvC,GAAc+E,UAAW,CAC9CC,WAAYxC,EAAQ1Q,KAKpB6J,MAAO,CAAC6G,EAAQ1Q,aAIjB,CAGL,IAAM0G,EAAmBD,GAAuBiL,KAChD,GAAI5R,EAAWU,aAAakQ,EAAQ1Q,QAAU0G,EAC5C,GAAIgK,EAAQyC,QAEV1B,EACE/D,GAAa0F,gBAAgB,CAC3BpO,OAAQ0L,EAAQ1Q,KAAKuC,GACrB8Q,WAAW,KAGf5B,EACE/D,GAAa4F,kBAAkB,CAC7B1H,MAAO8E,EAAQ6C,iBACfvO,OAAQ0L,EAAQ1Q,KAAKuC,WAGpB,GAAImO,EAAQ8C,SAAU,CAE3B,IAAMC,EAAiBnI,GAAUI,kBAAkBgG,KACnD,GAA8B,iBAAnB+B,EAA6B,CAEtC,IAAIC,EAAaD,EACbE,EAAWjD,EAAQ6C,iBACvB,GAAIG,EAAaC,EAAU,CAAA,IAAAC,EACA,CAACD,EAAUD,GAAnCA,EAAUE,EAAA,GAAED,EAAQC,EAAA,EACvB,CAEAnC,GC1ETsB,ED0E+C,CAAEW,WAAAA,EAAYC,SAAAA,GCzE9D,SAACpH,EAAUoD,GACT,IAAMlM,EAAQkM,IACd,IAAIlM,EAAMiD,iBAAV,CACA,IACMmN,EADiBvI,GAAUC,kBAAkB9H,GAEhDqQ,MAAMf,EAAOW,WAAYX,EAAOY,SAAW,GAC3ClI,QAAO,SAAClJ,GAAE,OAAKA,GAAMzC,EAAWU,aAAaiD,EAAMmB,QAAQrC,OAC9DgK,EACEmB,GAAa0D,YAAY,CACvBvI,QAASgL,EACTxC,QAAS0B,EAAO1B,QARQ,IDwEtB,MAGEI,EACE/D,GAAa0F,gBAAgB,CAC3BpO,OAAQ0L,EAAQ1Q,KAAKuC,GACrB8Q,WAAW,KAGf5B,EACE/D,GAAa4F,kBAAkB,CAC7B1H,MAAO8E,EAAQ6C,iBACfvO,OAAQ0L,EAAQ1Q,KAAKuC,KAI7B,MAEEkP,EACE/D,GAAa0F,gBAAgB,CAC3BpO,OAAQ0L,EAAQ1Q,KAAKuC,GACrB8Q,WAAW,KAGf5B,EACE/D,GAAa4F,kBAAkB,CAC7B1H,MAAO8E,EAAQ6C,iBACfvO,OAAQ0L,EAAQ1Q,KAAKuC,WAKtBmO,EAAQyC,SAAYzM,GACvB+K,EAAc/D,GAAayD,kBAE7BM,EACE/D,GAAa4F,kBAAkB,CAC7B1H,MAAO8E,EAAQ6C,iBACfvO,OAAQ0L,EAAQ1Q,KAAKuC,KAI7B,CACF,IAMFwR,kBAAmB/B,GACjB,CACEzP,GAAI,sBACJ0P,cAAe,CAA8B,IAE/C,SAAA+B,GAA8C,IAA3CtD,EAAOsD,EAAPtD,QAASe,EAAauC,EAAbvC,cAAeC,EAAasC,EAAbtC,cACzBD,EACE/D,GAAa4F,kBAAkB,CAC7B1H,MAAO8E,EAAQ6C,iBACfvO,OAAQ0L,EAAQ1Q,KAAKuC,MAGrBmO,EAAQuD,SAImC,IAAzCpO,GAAoB6L,MACtBD,EACEhB,GAAuBvC,GAAc+E,UAAW,CAC9CC,WAAYxC,EAAQ1Q,KACpB6J,MAAO,CAAC6G,EAAQ1Q,SAIb0Q,EAAQwD,UAAYpU,EAAWU,aAAakQ,EAAQ1Q,OAC7DyR,EACE/D,GAAa0F,gBAAgB,CAC3BpO,OAAQ0L,EAAQ1Q,KAAKuC,GACrB8Q,UAAW3C,EAAQyC,UAI3B,IAKFgB,eAAgBnC,GACd,CACEzP,GAAI,oBACJ0P,cAAe,CAA2B,IAE5C,SAAAmC,GAA8C,IAAlC3C,EAAa2C,EAAb3C,cACJzR,EADEoU,EAAP1D,QACoB2D,YAChBvI,IAAkB4F,EAFe0C,EAAb1C,iBAEe1R,IAClCF,EAAWU,aAAaR,IAC1ByR,EACE/D,GAAa0D,YAAY,CACvBvI,QAAS,CAAC7I,EAAKuC,IACf8O,OAAO,IAKjB,IAMFiD,aAActC,GACZ,CACEzP,GAAI,kBACJ0P,cAAe,CAAyB,IAE1C,SAAAsC,GAA8C,IAA3C7D,EAAO6D,EAAP7D,QAASe,EAAa8C,EAAb9C,cACV,IAAI3F,IAAkB4F,EADgB6C,EAAb7C,iBACchB,EAAQ8D,aAA/C,CAKA,IAAqBzI,EAAkB2E,EAAlB3E,cAErB0F,EACEhB,GAAuBvC,GAAcuG,UAASC,EAAA,CAAA,EACzChE,EAAO,CACV7G,MAJiBkC,EAAcnN,OAAS,EAAImN,EAAgB,CADzB2E,EAA/B2D,gBAFR,CAUF,IAMFI,UAAWzC,GAAiB,CAC1BzP,GAAI,aACJ0P,cAAe,CAAsB,IAKvC0C,gBAAiB3C,GAAiB,CAChCzP,GAAI,mBACJ0P,cAAe,CAA4B,IAM7CgB,UAAWjB,GAAiB,CAC1BzP,GAAI,aACJ0P,cAAe,CAAsB,IAKvC9D,iBAAkB6D,GAChB,CACEzP,GAAI,qBACJ2P,QAAS,CAAC,aACV7C,OAAQ,CACN7M,KAAM,oBACN8M,SAAS,EACTC,aAAa,EACbN,KAAM1L,QAAcA,eAACqR,iBACrBC,UAAU,KAGd,SAAAC,GAAqC,IAAlCrD,EAAaqD,EAAbrD,cACKsD,GAAarD,EADUoD,EAAbpD,iBAEVsD,EAAetQ,GAAmBqQ,GACpCjV,EAAWQ,WAAW0U,GACxBvD,EACEhB,GAAuBvC,GAAc+E,UAAW,CAC9CC,WAAY8B,EACZnL,MAAO,CAACmL,MAGFD,EAAWnO,uBACrBrI,EAAOY,KACL,0IAIN,IAMF8V,oBAAqBjD,GACnB,CACEzP,GAAI,yBACJ0P,cAAe,CAAgC,IAEjD,SAAAiD,GAA8C,IAA3CxE,EAAOwE,EAAPxE,QAASe,EAAayD,EAAbzD,cAAeC,EAAawD,EAAbxD,cAMnByD,EAActJ,GAAY6F,IAAiBhB,EAAQlI,eACrD2M,IACmBrJ,GAAkB4F,IAAiByD,KAMlDrV,EAAWU,aAAa2U,GAC1B1D,EACE/D,GAAa0D,YAAY,CACvBvI,QAAS,CAAC6H,EAAQlI,eAClB6I,OAAO,KAIXI,EAAc/D,GAAayD,oBAKjCM,EACE/D,GAAa0H,gBAAgB,CAC3B5M,cAAekI,EAAQlI,cACvB6M,OAAQ3E,EAAQ4E,QAAU,EAC1BC,OAAQ7E,EAAQ8E,QAAU,SEvSvBC,GAAiB,CAI5BC,cAAe1D,GACb,CACEzP,GAAI,iBACJ2P,QAAS,CAAC,SACV/L,mBAAmB,EACnBE,WAAYvG,EAAWQ,WACvB+O,OAAQ,CACN7M,KAAM,iBACN8M,SAAS,EACTC,aAAa,EACbP,MAAO,UACPC,KAAM1L,QAAcA,eAACoS,aAGzB,SAAA7C,IACErB,EADqBqB,EAAbrB,eAENhB,GAAuBmC,GAAiBK,UAAW,CACjDpJ,MAHEiJ,EAALrP,MAGgBkN,yBAInB,IAKFiF,eAAgB5D,GAAiB,CAC/BzP,GAAI,mBACJ2P,QAAS,CAAC,UACV7C,OAAQ,CACN7M,KAAM,mBACN8M,SAAS,EACTC,aAAa,EACbP,MAAO,UACPC,KAAM1L,QAAcA,eAACsS,gBAEvB9E,mBAAqB,SAAA6C,GAA+B,IAA5B/K,EAAO+K,EAAP/K,QAASoI,EAAa2C,EAAb3C,cACzBC,EAAe,IAAI/O,IAMzB,OALA0G,EAAQ7C,KAAI,SAAChB,GAGNiM,EAAcxO,IAAIuC,IAASkM,EAAaxO,IAAIsC,EACnD,IACOkM,CACT,IAKF4E,eAAgB9D,GAAiB,CAC/BzP,GAAI,kBACJ2P,QAAS,CAAC,UACV7C,OAAQ,CACN7M,KAAM,kBACN8M,SAAS,EACTC,aAAa,EACbP,MAAO,UACPC,KAAM1L,QAAcA,eAAC4N,gBAEvBJ,mBAAqB,SAAAiD,GACnB,OAA2B,IADQA,EAAbhD,cACJpO,KAAmB,KAC9B,IAAIT,GACb,IAKF4T,eAAgB/D,GAAiB,CAC/BzP,GAAI,mBACJyE,eAAgB,CACdrF,KAAMwK,QAAYA,aAAC6J,KACnBC,YAAa,IAEf5G,OAAQ,CACN7M,KAAM,iBACN8M,SAAS,EACTL,KAAM1L,QAAcA,eAAC2S,KAErBlH,MAAO,aAOXmH,kBAAmBnE,GAAiB,CAElCzP,GAAI,sBACJyE,eAAgB,CACdrF,KAAMwK,QAAYA,aAACiK,QACnBH,YAAa,GACbI,WAAY,KAEdhH,OAAQ,CACN7M,KAAM,oBACN8M,SAAS,EACTL,KAAM1L,QAAcA,eAAC+S,QAErBtH,MAAO,aAMXuH,eAAgBvE,GAAiB,CAC/BzP,GAAI,mBACJyE,eAAgB,CAAErF,KAAMwK,QAAYA,aAACqK,KAAMH,WAAY,IAAKJ,YAAa,KACzE5G,OAAQ,CACN7M,KAAM,iBACN8M,SAAS,EACTL,KAAM1L,QAAcA,eAACkT,eAErBzH,MAAO,aAMX0H,gBAAiB1E,GAAiB,CAChCzP,GAAI,qBACJ8H,gBAAiB,SAACrK,GAAwB,OAAMA,EAAOA,EAAKwC,KAAKmU,mBAAgBlN,CAAU,EAC3F4F,OAAQ,CACN7M,KAAM,eACN8M,SAAS,EACTN,MAAO,aAMX4H,gBAAiB5E,GAAiB,CAChCzP,GAAI,qBACJ8H,gBAAiB,SAACrK,GAAwB,OAAMA,EAAOA,EAAK4C,UAAO6G,CAAU,EAC7E4F,OAAQ,CACN7M,KAAM,eACN8M,SAAS,EACTN,MAAO,aAMX6H,gBAAiB7E,GAAiB,CAChCzP,GAAI,qBACJ8H,gBAAiB,SAACrK,GAAwB,OAAMA,EAAOA,EAAKiB,aAAUwI,CAAU,EAChF4F,OAAQ,CACN7M,KAAM,eACN8M,SAAS,EACTN,MAAO,aAMX8H,kBAAmB9E,GAAiB,CAClCzP,GAAI,sBACJ2P,QAAS,CAAC,UACVzE,OAAQ,CACNlL,GAAIY,EAAUC,gBACdoG,cAAc,GAEhB6F,OAAQ,CACN7M,KAAM,oBACN8M,SAAS,EACTN,MAAO,aAOX+H,uBAAwB/E,GAAiB,CACvCzP,GAAI,4BACJkL,OAAQ,CACNlL,GAAIY,EAAUE,iBACdmG,cAAc,GAEhB6F,OAAQ,CACN7M,KAAM,qBACN8M,SAAS,EACTN,MAAO,aAMXgI,iBAAkBhF,GAChB,CACEzP,GAAI,qBACJ2P,QAAS,CAAC,YAEZ,SAAAkC,GAAsB,IACd7O,EAAmBD,IAAuBoM,EADlC0C,EAAb1C,kBAEGnM,GAAkBA,GACxB,IAKF0R,eAAgBjF,GAAiB,CAC/BzP,GAAI,mBACJkL,OAAQ,CACNlL,GAAIY,EAAUG,SACdkG,cAAc,GAEhB6F,OAAQ,CACN7M,KAAM,mBACN8M,SAAS,EACTL,KAAM1L,QAAcA,eAAC2S,KACrBrB,UAAU,MC/NHqC,GAAe,CAI1BC,UAAWnF,GAAiB,CAC1BzP,GAAI,aACJ4D,mBAAmB,EACnB+L,QAAS,CAAC,UACV7C,OAAQ,CACN7M,KAAM,iBACN8M,SAAS,EACTC,aAAa,EACbP,MAAO,UACPC,KAAM1L,QAAcA,eAAC6T,QAMzBC,aAAcrF,GAAiB,CAC7BzP,GAAI,gBACJ8M,OAAQ,CACN7M,KAAM,gBACN8M,SAAS,EACTgI,QAAS,kBACTrI,KAAM1L,QAAcA,eAACgU,gBAMzBC,YAAaxF,GAAiB,CAC5BzP,GAAI,eACJ8M,OAAQ,CACN7M,KAAM,eACN8M,SAAS,EACTgI,QAAS,eACTrI,KAAM1L,QAAcA,eAACkU,UAMzBC,cAAe1F,GAAiB,CAC9BzP,GAAI,iBACJ4D,mBAAmB,EACnBkJ,OAAQ,CACN7M,KAAM,iBACN8M,SAAS,EACTC,aAAa,EACbP,MAAO,UACPC,KAAM1L,QAAcA,eAACoU,YAMzBC,YAAa5F,GAAiB,CAC5BzP,GAAI,eACJ4D,mBAAmB,EACnB+L,QAAS,CAAC,UACV7C,OAAQ,CACN7M,KAAM,eACN8M,SAAS,EACTC,aAAa,EACbP,MAAO,UACPC,KAAM1L,QAAcA,eAACsU,UC/Dd3J,GAAawG,EAAA,CAAA,EACrB9B,GACA6C,GACAyB,IAGQ3J,GAAuB,CAClCW,GAAc2E,eACd3E,GAAc6F,kBACd7F,GAAciG,eACdjG,GAAcoG,aACdpG,GAAcuG,UACdvG,GAAcyG,gBACdzG,GAAc+E,UACd/E,GAAcC,iBACdD,GAAc+G,qBAGHtI,GAAqB,CAChCuB,GAAcwH,cACdxH,GAAc0H,eACd1H,GAAc4H,eACd5H,GAAc6H,eAGd7H,GAAcqI,eACdrI,GAAcwI,gBACdxI,GAAc0I,gBACd1I,GAAc2I,gBACd3I,GAAc4I,kBACd5I,GAAc6I,uBACd7I,GAAc8I,kBCjCHc,GAA8B,CACzCpU,WAAY,oBAEZE,0BAA2B,KAE3ByI,eAAgB,GAChB0L,yBAA0B,GAC1BjU,cAAe,CAAE,EACjBE,cAAe,GACfI,aAAc,GACdE,iBAAkB,GAElB0T,eAAgB,KAChBC,yBAA0B,GAC1BzT,YAAa,GAEb0T,SAAU,GACVC,mBAAoB,GACpBvT,QAAS,CAAE,EACXiE,QAAS,GACT/D,aAAc,GAEd0G,cAAe,GACftG,gBAAiB,CAAE,EAEnBK,iBAAkB,KAClBE,aAAc,GACd2S,WAAY,gBAEZzS,aAAc,CAAE,EAChBe,kBAAkB,EAElBM,eAAgBkH,GAAcqI,eAAevP,eAE7CE,aAAc,KACdE,UAAWxJ,EAAU0M,IAErBhD,UAAW,CAAE,EAEbI,mBAAoB,KACpBE,iBAAkB,IAClBE,oBAAoB,EACpBE,8BAA8B,EAC9BpB,uBAAuB,EACvBE,iBAAiB,EAEjBqC,UAAW,KAEXjB,oBAAoB,EACpBE,kBAAmB,MCnCfiQ,GAAW,CACfC,6BAA4BA,SAAC7U,EAAkByC,GAAoE,IAAAqS,EACjH9U,EAAMG,0BAA0C,OAAjB2U,EAAGrS,EAAOwK,SAAO6H,EAAI,IACrD,EACD5K,kBAAiBA,SAAClK,EAAkByC,GAClCzC,EAAM4I,eAAiBnG,EAAOwK,OAC/B,EACD9C,4BAA2BA,SAACnK,EAAkByC,GAC5CzC,EAAMsU,yBAA2B7R,EAAOwK,OACzC,EACD7C,eAAcA,SAACpK,EAAkByC,GAC/B,IAAMpC,EAA+B,CAAA,EACrCoC,EAAOwK,QAAQ1K,KAAI,SAACgH,GAAC,OAAMlJ,EAAckJ,EAAEzK,IAAMyK,CAAC,IAClD,IAAMnE,EAAU3C,EAAOwK,QAAQ1K,KAAI,SAACgH,GAAC,OAAKA,EAAEzK,MAE5CkB,EAAMK,cAAgBA,EACtBL,EAAMO,cAAgB6E,CACvB,EACD4G,0BAAyBA,SAAChM,EAAkByC,GAAmE,IAAAsS,EAC9DtS,EAAOwK,QAArDjN,EAAMW,aAAYoU,EAAA,GAAE/U,EAAMa,iBAAgBkU,EAAA,EAC5C,EACDC,kBAAiBA,SAAChV,EAAkByC,GAClC,IAAM8R,EAAiB9R,EAAOwK,QAC9BjE,EAAuD/K,EAAmB,cAAesW,GAAjExT,EAAWiI,EAA3BvJ,eAA6BpB,EAAa2K,EAAb3K,cACrC2B,EAAMuU,eAAiBA,EACvBvU,EAAMe,YAAcA,EACpBf,EAAMwU,yBAA2BnW,CAClC,EACD4W,YAAWA,SAACjV,EAAkByC,GAC5B,IAAMgS,EAAWhS,EAAOwK,QACxBiI,EAAiDjX,EAAmB,QAASwW,GAArDrO,EAAK8O,EAArBzV,eAAuBpB,EAAa6W,EAAb7W,cAC/B2B,EAAMyU,SAAWA,EACjBzU,EAAM0U,mBAAqBrW,EAE3B,IAAM8C,EAAmB,CAAA,EACzBiF,EAAMwB,SAAQ,SAACL,GACTA,IAAGpG,EAAQoG,EAAEzI,IAAMyI,EACzB,IACA,IAAMnC,EAAUgB,EAAM7D,KAAI,SAACgF,GAAC,OAAMA,EAAIA,EAAEzI,GAAK,IAAI,IAC3CuC,EAAe+D,EAAQ4C,QAAO,SAACT,GAAC,QAAOA,KAE7CvH,EAAMmB,QAAUA,EAChBnB,EAAMoF,QAAUA,EAChBpF,EAAMqB,aAAeA,EAGrB,IAAA8T,IAAAA,IAAAC,EAA6BzT,OAAOC,KAAK5B,EAAMkC,cAAaiT,EAAAC,EAAAja,OAAAga,IAAE,CAAzD,IAAME,EAAcD,EAAAD,GAClBhU,EAAQkU,WACJrV,EAAMkC,aAAamT,EAE9B,CACD,EACDC,iBAAgBA,SAACtV,EAAkByC,GACjCzC,EAAM+H,cAAgBtF,EAAOwK,OAC9B,EACDsI,iBAAgBA,SAACvV,EAAkByC,GACjCzC,EAAMyB,gBAAkBgB,EAAOwK,QAG/B,IAAAuI,IAAAA,IAAAC,EAA6B9T,OAAOC,KAAK5B,EAAMkC,cAAasT,EAAAC,EAAAta,OAAAqa,IAAE,CAAzD,IAAMH,EAAcI,EAAAD,GACnBxV,EAAMyB,gBAAgB4T,WACjBrV,EAAMkC,aAAamT,EAE9B,CACD,EACDK,oBAAmBA,SAAC1V,EAAkByC,GACpCzC,EAAM8B,iBAAmBW,EAAOwK,OACjC,EACD0I,gBAAeA,SAAC3V,EAAkByC,GAChCzC,EAAMgC,aAAeS,EAAOwK,OAC7B,EACDmF,eAAc,SAACpS,GACbA,EAAMoF,QACH4C,QAAO,SAAClJ,GAAE,OAAKA,GAAMzC,EAAWU,aAAaiD,EAAMmB,QAAQrC,GAAI,IAC/DyD,KAAI,SAACzD,GAAE,OAAMA,EAAMkB,EAAMkC,aAAapD,IAAM,EAAQ,IAAI,GAC5D,EACD6O,YAAWA,SAAC3N,EAAkByC,GACxBzC,EAAMiD,mBACNR,EAAOwK,QAAQW,QAAO5N,EAAMkC,aAAe,CAAA,GAC/CO,EAAOwK,QAAQ7H,QACZ4C,QAAO,SAAClJ,GAAE,OAAKA,GAAMzC,EAAWU,aAAaiD,EAAMmB,QAAQrC,GAAI,IAC/DyD,KAAI,SAACzD,GAAE,OAAMkB,EAAMkC,aAAapD,IAAM,CAAI,IAC9C,EACD6Q,gBAAeA,SAAC3P,EAAkByC,GAChC,IAAIzC,EAAMiD,iBAAV,CACA,IAAM2S,IAAa5V,EAAMkC,aAAaO,EAAOwK,QAAQ1L,QACjDkB,EAAOwK,QAAQ2C,YAAW5P,EAAMkC,aAAe,CAAA,GAC/C0T,SAAiB5V,EAAMkC,aAAaO,EAAOwK,QAAQ1L,QAC9ClF,EAAWU,aAAaiD,EAAMmB,QAAQsB,EAAOwK,QAAQ1L,WAC5DvB,EAAMkC,aAAaO,EAAOwK,QAAQ1L,SAAU,EALlB,CAO7B,EACDmM,eAAc,SAAC1N,GACTA,EAAMiD,kBACqC,IAA3CtB,OAAOC,KAAK5B,EAAMkC,cAAc/G,SAAc6E,EAAMkC,aAAe,GACxE,EACD2T,qBAAoBA,SAAC7V,EAAkByC,GACrCzC,EAAMiD,iBAAmBR,EAAOwK,QACe,IAA3CtL,OAAOC,KAAK5B,EAAMkC,cAAc/G,SAAc6E,EAAMkC,aAAe,GACxE,EACDkK,kBAAiBA,SAACpM,EAAkByC,GAClCzC,EAAMuD,eAAiBd,EAAOwK,OAC/B,EACDR,QAAOA,SAACzM,EAAkByC,GACxBzC,EAAMyD,aAAehB,EAAOwK,QAAQP,SACpC1M,EAAM2D,UAAYlB,EAAOwK,QAAQV,KAClC,EACDlC,kBAAiBA,SAACrK,EAAkByC,GAClC,IAAAqT,IAAAA,IAAAC,EAAuBpU,OAAOC,KAAKa,EAAOwK,SAAQ6I,EAAAC,EAAA5a,OAAA2a,IAAE,CAA/C,IAAM/R,EAAQgS,EAAAD,GACb/R,KAAY/D,EAAM6D,YACtB7D,EAAM6D,UAAUE,GAAYtB,EAAOwK,QAAQlJ,GAC7C,CACD,EACDsJ,aAAYA,SAACrN,EAAkByC,GAC7BzC,EAAM6D,UAAUpB,EAAOwK,UAAYjN,EAAM6D,UAAUpB,EAAOwK,QAC3D,EACD+I,sBAAqBA,SAAChW,EAAkByC,GACtCzC,EAAMiE,mBAAqBxB,EAAOwK,OACnC,EACDgJ,oBAAmBA,SAACjW,EAAkByC,GACpCzC,EAAMmE,iBAAmB1B,EAAOwK,OACjC,EACDiJ,sBAAqBA,SAAClW,EAAkByC,GACtCzC,EAAMqE,mBAAqB5B,EAAOwK,OACnC,EACDkJ,yBAAwBA,SAACnW,EAAkByC,GACzCzC,EAAMmD,sBAAwBV,EAAOwK,OACtC,EACDmJ,mBAAkBA,SAACpW,EAAkByC,GACnCzC,EAAMqD,gBAAkBZ,EAAOwK,OAChC,EACDoJ,gCAA+BA,SAACrW,EAAkByC,GAChDzC,EAAMuE,6BAA+B9B,EAAOwK,OAC7C,EACD4C,kBAAiBA,SAAC7P,EAAkByC,GAClCzC,EAAM0F,UAAYjD,EAAOwK,OAC1B,EACDqJ,sBAAqBA,SAACtW,EAAkByC,GACtCzC,EAAMyE,mBAAqBhC,EAAOwK,OACnC,EACD0E,gBAAeA,SAAC3R,EAAkByC,GAChCzC,EAAM2E,kBAAoBlC,EAAOwK,OAClC,EACDsJ,gBAAe,SAACvW,GACTA,EAAM2E,oBACX3E,EAAM2E,kBAAoB,KAC5B,GAGK6R,GAAwDC,EAAAA,YAAY,CACzE1X,KAAM,OACN2X,aAAcrC,GACdO,SAAAA,KAHsB3K,GAAYuM,GAArBG,QAAgCC,GAAWJ,GAApBK,QC5JzBC,GAAiB,SAACC,GAC7B,IAAMC,EAAQ3c,GAAe,WAC3B,IAAM4c,EAAchG,EAAA,CAAA,EACfoD,GAAgB,CACnBpU,WAAY8W,IAGd,OAAOG,iBAAe,CACpBD,eAAgBA,EAChBJ,QAASD,GACTO,WAAY,SAACC,GAAoB,OAC/BA,EAAqB,CACnBC,mBAAmB,GACnB,EACJC,SAAU,CAAEvY,KAAgBgY,UAAAA,IAEhC,IAEA,OClB8B,SAACC,GAC/Bnc,EAAAA,WAAU,WACR,IAAM0c,EAAmBC,GAAM,WAAA,OAAMvV,GAAmB+U,EAAM9K,eAgBxDuL,EAAuB,CAACT,EAAMU,UAAUH,GAfpB,SAAC9J,EAA6BkK,GAGtD,GAAIlK,IAAiBkK,EAArB,CAGA,IAAMC,EAAmBzV,GAAsB6U,EAAM9K,YAC/C2L,EAAY,IAAInZ,IAAYkZ,GAClCZ,EAAMlO,SACJkE,GAAuBvC,GAAcyG,gBAAiB,CACpD2G,UAAAA,IAP+B,OAarC,OAAO,WACL,IAAA,IAAA1C,EAAA,EAAA2C,EAA0BL,EAAoBtC,EAAA2C,EAAA3c,OAAAga,KAAE4C,EAA1BD,EAAA3C,MAE1B,GAAG,CAAC6B,GACN,CDNEgB,CAAiBhB,GACVA,CACT,EAKaiB,GAAmB,SAC9BC,GAEE,IAAAjd,IAAAA,EAAAC,UAAAC,OADCgd,MAAoB9c,MAAAJ,EAAAA,EAAAA,OAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAApB6c,EAAoB7c,EAAAJ,GAAAA,UAAAI,GAEvB,IAAMmL,EAAW2R,eACf,SAACpY,GAAgB,OAAKkY,EAAoB1c,WAAA,EAAI2c,EAAxBD,CAAwClY,EAC9D,GAAA,CACCkY,GAAoBzc,OAAK0c,IAE5B,OAAOE,EAAAA,YAAY5R,EACrB,EAMa6R,GAAS,SAA0BC,GAAkE,IAAA3c,IAAAA,EAAAV,UAAAC,OAAxBgd,MAAoB9c,MAAAO,EAAAA,EAAAA,OAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAApBsc,EAAoBtc,EAAAX,GAAAA,UAAAW,GAC5G,IAAMiN,EAAW0P,EAAAA,cACjB3d,EAAAA,WACE,WACEiO,EAASyP,EAAa/c,WAAI2c,EAAAA,GAC3B,GACD,CACCrP,EAAUyP,GAAa9c,OAAK0c,GAEjC,EAEaM,GAAqB,SAAsBF,EAA0CtL,GAChG,IAAMnE,EAAW0P,EAAAA,cACjB3d,EAAAA,WAAU,WACRiO,EAASyP,EAActL,GACxB,GAAE,CAACnE,EAAUyP,EAAetL,GAC/B,EEzDayL,GAAmD,WAK9D,OAAOC,EAAMC,cAAA,OAAA,CAAAC,MAFX,yIAGJ,ECQaC,GAA8B,CACzC3P,YAAa,KACb4P,aAAc,KACd9U,mBAAoB,KACpBE,iBAAkB,IAClBlB,kBAAkB,EAClB4F,2BAA2B,EAC3B1F,uBAAuB,EACvBE,iBAAiB,EACjBgB,oBAAoB,EACpB2U,4BAA4B,EAC5BC,oBAAqBxO,GAAcwI,gBAAgBnU,GACnDoa,wBAAyBzO,GAAc6H,eAAexT,GACtDyF,8BAA8B,EAC9B4U,cAAeT,GACfU,UAAU,EACVC,KAAM,CAAE,GX9BE/K,QAQXA,mBAAA,GARWA,GAAAA,wBAAAA,QAAAA,cAQX,CAAA,IAPC,QAAA,UACAA,GAAA,SAAA,WACAA,GAAA,UAAA,YACAA,GAAA,gBAAA,cAEAA,GAAA,YAAA,UACAA,GAAA,iBAAA,eAGK,IAAMgL,GAAY,SAACC,EAA0BC,GAAgB,MAAuBD,UAAAA,MAAaC,CAAQ,EAEnGC,GAAkB,SAAC/M,EAAkB8M,GAAgB,MAAA,UACtDlL,QAAAA,cAAcoL,YAAehN,IAAAA,MAAY8M,CAAQ,EAYhDG,GAAgC,SAAClX,GAC5C,IAAMmX,EAAOC,EAAAA,UACb,OAAOC,EAAOA,SAAC,WAAK,IAAAC,EAAAC,EAClB,IAAKvX,EACH,MAAO,CACLwX,WAAY,GACZC,mBAAelU,GAInB,IAM4BmU,EANtBF,EAAaL,EAAKQ,cAAc,CACpCtb,GAAI2a,GAAgBhX,EAAO3D,GAAI,eAC/Bub,eAA6B,OAAfN,EAAEtX,EAAOmJ,aAAM,EAAbmO,EAAehb,OAG7Bmb,OAAqClU,EASzC,OARIgU,OAAJA,EAAIvX,EAAOmJ,SAAPoO,EAAenG,UAEjBqG,EAAgBN,EAAKQ,cAAc,CACjCtb,GAAI2a,GAAgBhX,EAAO3D,GAAI,kBAC/Bub,eAA6B,OAAfF,EAAE1X,EAAOmJ,aAAM,EAAbuO,EAAetG,WAI5B,CACLoG,WAAAA,EACAC,cAAAA,EAEJ,GAAG,CAACzX,EAAQmX,GACd,EAEaU,GAA+B,SAAC/d,GAC3C,IAAMqd,EAAOC,EAAAA,UACPU,EAAaC,aAAWC,IAC9B,OAAOX,EAAOA,SAAC,WACb,MAAO,CACLY,kBAAmBH,EAAWI,kBAAkBf,EAAMrd,GACtDqe,eAAgBL,EAAWM,eAAejB,EAAMrd,GAEnD,GAAE,CAACA,EAAMge,EAAYX,GACxB,EAEakB,GAAsC,CACjDH,kBAAmB,SAACf,EAAiBrd,GACnC,IAAMwe,EAAc1e,EAAWkB,WAAWhB,GAC1C,OAAIwe,EAQKnB,EAAKoB,WAAWD,GAEhB,IAEV,EACDF,eAAgB,SAACI,EAAkB1e,GACjC,IAAKA,GAA6B,iBAAdA,EAAK4C,KAAmB,OAAO,KAEnD,IACM+b,EAAWC,EAAQA,SADZ5e,EAAK4C,KACc,CAAEic,MAAM,EAAOC,OAAQ,WACvD,MAAwB,MAApBH,EAASI,OACDC,KAAKC,MAAMN,EAASvgB,MAAQ,IAAM,IAAK,MACpB,OAApBugB,EAASI,OACRC,KAAKC,MAAMN,EAASvgB,OAAM,IAAIugB,EAASI,OAEzCJ,EAASvgB,MAASugB,IAAAA,EAASI,MACvC,GAGWb,GAA0BgB,EAAaA,cAACX,IY5FxCY,GAAoBD,EAAaA,cAA+B/C,IAEhEiD,GAA4B,CACvC,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,QACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,KACA,MACA,MACA,OAEWC,GAA4B,CACvC,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,KACA,MACA,OACA,QACA,OACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,OAEWC,GAA4B,CACvC,OACA,MACA,MACA,MACA,OACA,OACA,KACA,MACA,MACA,MACA,QACA,YACA,YACA,YACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,MAEWC,GAAwB,CACnC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEWC,GAAuB,CAClC,OACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAiEIC,GA9Dc,WA6ClB,IA5CA,IAAIC,EAAc,EAGZC,EAAoB,CAExB,CAACpc,QAAcA,eAACqc,QAAS,CAAC,YAC1B,CAACrc,QAAAA,eAAegF,OAAQ,CAAC,MAAO,MAAO,MAAO,OAAQ,QACtD,CAAChF,QAAAA,eAAesc,MAAO,CAAC,MAAO,MAAO,MAAO,QAC7C,CAACtc,QAAAA,eAAeuc,SAAU,CAAC,MAAO,O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"}